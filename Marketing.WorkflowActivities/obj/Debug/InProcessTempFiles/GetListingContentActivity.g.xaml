<?xml version="1.0" encoding="utf-8"?>
<mw:GetListingContentActivity mva:VisualBasic.Settings="Assembly references and imported namespaces for internal implementation" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cn="clr-namespace:Common.Net;assembly=Common.Net" xmlns:cni="clr-namespace:Common.Net.Interfaces;assembly=Common.Net.Interfaces" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mu="clr-namespace:Marketing.Utils;assembly=Marketing.Utils" xmlns:muh="clr-namespace:Marketing.Utils.HtmlToXml;assembly=Marketing.Utils" xmlns:mv="clr-namespace:Microsoft.VisualBasic;assembly=System" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:mw="clr-namespace:Marketing.WorkflowActivities;assembly=Marketing.WorkflowActivities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:s1="clr-namespace:System;assembly=System" xmlns:s2="clr-namespace:System;assembly=System.Xml" xmlns:s3="clr-namespace:System;assembly=System.Core" xmlns:s4="clr-namespace:System;assembly=System.ServiceModel" xmlns:sa="clr-namespace:System.Activities;assembly=System.Activities" xmlns:sad="clr-namespace:System.Activities.Debugger;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System" xmlns:scg1="clr-namespace:System.Collections.Generic;assembly=System.ServiceModel" xmlns:scg2="clr-namespace:System.Collections.Generic;assembly=System.Core" xmlns:scg3="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:sl="clr-namespace:System.Linq;assembly=System.Core" xmlns:st="clr-namespace:System.Text;assembly=mscorlib" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:sx="clr-namespace:System.Xml;assembly=System.Data" xmlns:sx1="clr-namespace:System.Xml;assembly=System.Xml" xmlns:sxl="clr-namespace:System.Xml.Linq;assembly=System.Xml.Linq" xmlns:sxs="clr-namespace:System.Xml.Serialization;assembly=System.Xml" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <mw:GetListingContentActivity.Implementation>
    <Flowchart sad:XamlDebuggerXmlReader.FileName="C:\Projects\Urbana\Marketing\Marketing.WorkflowActivities\GetListingContentActivity.xaml">
      <Flowchart.Variables>
        <Variable x:TypeArguments="cn:HttpPost" Default="[New HttpPost]" Name="postSubmitter" />
      </Flowchart.Variables>
      <Flowchart.StartNode>
        <FlowStep x:Name="__ReferenceID0">
          <Sequence DisplayName="Get Content For Url">
            <Sequence.Variables>
              <Variable x:TypeArguments="s:Byte[]" Name="rawResponse" />
              <Variable x:TypeArguments="x:String" Name="responseString" />
              <Variable x:TypeArguments="muh:HtmlToXmlConverter" Default="[New HtmlToXmlConverter]" Name="htmlToXmlConverter" />
            </Sequence.Variables>
            <Assign DisplayName="Assign Post Url">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Uri">[postSubmitter.PostUri]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Uri">[New Uri(ListingUrl)]</InArgument>
              </Assign.Value>
            </Assign>
            <InvokeMethod DisplayName="Get Raw Response" MethodName="Post">
              <InvokeMethod.Result>
                <OutArgument x:TypeArguments="s:Byte[]">[rawResponse]</OutArgument>
              </InvokeMethod.Result>
              <InvokeMethod.TargetObject>
                <InArgument x:TypeArguments="cn:HttpPost">[postSubmitter]</InArgument>
              </InvokeMethod.TargetObject>
            </InvokeMethod>
            <InvokeMethod DisplayName="Get Response as String" MethodName="GetString" TargetType="cn:HttpPost">
              <InvokeMethod.Result>
                <OutArgument x:TypeArguments="x:String">[responseString]</OutArgument>
              </InvokeMethod.Result>
              <InArgument x:TypeArguments="s:Byte[]">[rawResponse]</InArgument>
            </InvokeMethod>
            <Assign DisplayName="Remove DocType">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[responseString]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(responseString,"&lt;!DOCTYPE html .*&gt;","")]</InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Assign Result">
              <Assign.To>
                <OutArgument x:TypeArguments="mu:ListingContentItem">[Result]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="mu:ListingContentItem">[New ListingContentItem With {.Location=New Uri(ListingUrl), .ContentHtml=htmlToXmlConverter.ConvertToXml(responseString)}]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </FlowStep>
      </Flowchart.StartNode>
      <x:Reference>__ReferenceID0</x:Reference>
    </Flowchart>
  </mw:GetListingContentActivity.Implementation>
</mw:GetListingContentActivity>