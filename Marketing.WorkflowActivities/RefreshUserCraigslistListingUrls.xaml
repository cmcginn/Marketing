<Activity mc:Ignorable="sap" x:Class="Marketing.WorkflowActivities.RefreshUserCraigslistListingUrls" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:cn="clr-namespace:Common.Net;assembly=Common.Net" xmlns:cni="clr-namespace:Common.Net.Interfaces;assembly=Common.Net.Interfaces" xmlns:local="clr-namespace:Marketing.WorkflowActivities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:md="clr-namespace:Marketing.Data;assembly=Marketing.Data" xmlns:mu="clr-namespace:Marketing.Utils;assembly=Marketing.Utils" xmlns:mue="clr-namespace:Marketing.Utils.Extensions;assembly=Marketing.Utils" xmlns:mv="clr-namespace:Microsoft.VisualBasic;assembly=System" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:s1="clr-namespace:System;assembly=System" xmlns:s2="clr-namespace:System;assembly=System.Xml" xmlns:s3="clr-namespace:System;assembly=System.Core" xmlns:s4="clr-namespace:System;assembly=System.ServiceModel" xmlns:sa="clr-namespace:System.Activities;assembly=System.Activities" xmlns:sad="clr-namespace:System.Activities.Debugger;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System" xmlns:scg1="clr-namespace:System.Collections.Generic;assembly=System.ServiceModel" xmlns:scg2="clr-namespace:System.Collections.Generic;assembly=System.Core" xmlns:scg3="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:sdo="clr-namespace:System.Data.Objects;assembly=System.Data.Entity" xmlns:sdod="clr-namespace:System.Data.Objects.DataClasses;assembly=System.Data.Entity" xmlns:sl="clr-namespace:System.Linq;assembly=System.Core" xmlns:st="clr-namespace:System.Text;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="UserId" Type="InArgument(s:Guid)">
      <x:Property.Attributes>
        <RequiredArgumentAttribute />
      </x:Property.Attributes>
    </x:Property>
  </x:Members>
  <sap:VirtualizedContainerService.HintSize>733,676</sap:VirtualizedContainerService.HintSize>
  <mva:VisualBasic.Settings>Assembly references and imported namespaces for internal implementation</mva:VisualBasic.Settings>
  <Flowchart sad:XamlDebuggerXmlReader.FileName="C:\Projects\Urbana\Marketing\Marketing.WorkflowActivities\RefreshUserCraigslistListingUrls.xaml" sap:VirtualizedContainerService.HintSize="693,636">
    <Flowchart.Variables>
      <Variable x:TypeArguments="scg3:List(x:String)" Name="listingUrls" />
      <Variable x:TypeArguments="md:MarketingEntities" Default="[New MarketingEntities]" Name="domainContext" />
      <Variable x:TypeArguments="cn:HttpPost" Default="[New HttpPost]" Name="postSubmitter" />
      <Variable x:TypeArguments="s:Byte[]" Name="rawResponse" />
      <Variable x:TypeArguments="s:Guid" Name="myGuid" />
      <Variable x:TypeArguments="scg3:List(md:UserListingRefresh)" Name="userListingRefreshes" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg3:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,107.5 300,126.5</av:PointCollection>
        <x:Double x:Key="Width">679</x:Double>
      </scg3:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID1">
        <sap:WorkflowViewStateService.ViewState>
          <scg3:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">196,126.5</av:Point>
            <av:Size x:Key="ShapeSize">208,127</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,253.5 300,283.5 300,305.5</av:PointCollection>
          </scg3:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <InvokeMethod DisplayName="Get Category Urls for User" sap:VirtualizedContainerService.HintSize="208,127" MethodName="GetUrlsForUser" TargetType="local:DataHelper">
          <InvokeMethod.Result>
            <OutArgument x:TypeArguments="scg3:List(md:UserListingRefresh)">[userListingRefreshes]</OutArgument>
          </InvokeMethod.Result>
          <InArgument x:TypeArguments="md:MarketingEntities">[domainContext]</InArgument>
          <InArgument x:TypeArguments="s:Guid">[UserId]</InArgument>
        </InvokeMethod>
        <FlowStep.Next>
          <FlowStep x:Name="__ReferenceID0">
            <sap:WorkflowViewStateService.ViewState>
              <scg3:Dictionary x:TypeArguments="x:String, x:Object">
                <av:Point x:Key="ShapeLocation">200,305.5</av:Point>
                <av:Size x:Key="ShapeSize">200,49</av:Size>
              </scg3:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ForEach x:TypeArguments="md:UserListingRefresh" DisplayName="For Each UserListingCategory" sap:VirtualizedContainerService.HintSize="586,1733" Values="[UserListingRefreshes]">
              <ActivityAction x:TypeArguments="md:UserListingRefresh">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="md:UserListingRefresh" Name="item" />
                </ActivityAction.Argument>
                <TryCatch sap:VirtualizedContainerService.HintSize="556,1630">
                  <TryCatch.Try>
                    <Sequence DisplayName="Refresh Listings" sap:VirtualizedContainerService.HintSize="538,1452">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="postUrlsResponse" />
                        <Variable x:TypeArguments="x:String" Name="responseString" />
                        <Variable x:TypeArguments="scg3:List(mu:ListingLocation)" Name="listingLocations" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg3:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg3:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <local:GetCraigslistListingUrlsActivity sap:VirtualizedContainerService.HintSize="516,22" ListingPageUrl="[item.ListingUrl]" Result="[listingLocations]" />
                      <ForEach x:TypeArguments="mu:ListingLocation" DisplayName="ForEach&lt;ListingLocation&gt;" sap:VirtualizedContainerService.HintSize="516,1266" Values="[listingLocations]">
                        <ActivityAction x:TypeArguments="mu:ListingLocation">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="mu:ListingLocation" Name="listingLocation" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Process Url" sap:VirtualizedContainerService.HintSize="486,1163">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="md:ListingUrl" Name="listingUrl" />
                              <Variable x:TypeArguments="md:UserListingUrl" Name="userListingUrl" />
                            </Sequence.Variables>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg3:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg3:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <InvokeMethod DisplayName="Get Listing Url" sap:VirtualizedContainerService.HintSize="464,127" MethodName="GetListingUrl" TargetType="local:DataHelper">
                              <InvokeMethod.Result>
                                <OutArgument x:TypeArguments="md:ListingUrl">[listingUrl]</OutArgument>
                              </InvokeMethod.Result>
                              <InArgument x:TypeArguments="md:MarketingEntities">[domainContext]</InArgument>
                              <InArgument x:TypeArguments="x:String">[listingLocation.Location.ToString]</InArgument>
                            </InvokeMethod>
                            <If Condition="[listingUrl Is Nothing]" DisplayName="If ListingUrl Does Not Exist" sap:VirtualizedContainerService.HintSize="464,449">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg3:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg3:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If.Then>
                                <Sequence DisplayName="Save Listing Url" sap:VirtualizedContainerService.HintSize="301,348">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg3:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg3:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Assign New Listing Url" sap:VirtualizedContainerService.HintSize="242,57">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="md:ListingUrl">[listingUrl]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="md:ListingUrl">[New ListingUrl With {.Id=Guid.NewGuid,.CityId=item.CityId, .ListingCategoryId=item.ListingCategoryId, .Url=listingLocation.Location.ToString, .Title=listingLocation.ListingTitle, .PostId=Long.Parse(listingLocation.ListingId), .Created = System.DateTime.Now }]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <InvokeMethod DisplayName="Add ListingUrl To Context" sap:VirtualizedContainerService.HintSize="242,127" MethodName="AddObject">
                                    <InvokeMethod.TargetObject>
                                      <InArgument x:TypeArguments="sdo:ObjectSet(md:ListingUrl)">[domainContext.ListingUrls]</InArgument>
                                    </InvokeMethod.TargetObject>
                                    <InArgument x:TypeArguments="md:ListingUrl">[listingUrl]</InArgument>
                                  </InvokeMethod>
                                </Sequence>
                              </If.Then>
                            </If>
                            <InvokeMethod DisplayName="Get User Listing Url" sap:VirtualizedContainerService.HintSize="464,127" MethodName="GetUserListingUrl" TargetType="local:DataHelper">
                              <InvokeMethod.Result>
                                <OutArgument x:TypeArguments="md:UserListingUrl">[userListingUrl]</OutArgument>
                              </InvokeMethod.Result>
                              <InArgument x:TypeArguments="md:MarketingEntities">[domainContext]</InArgument>
                              <InArgument x:TypeArguments="md:ListingUrl">[listingUrl]</InArgument>
                            </InvokeMethod>
                            <If Condition="[userListingUrl Is Nothing]" DisplayName="If UserListingUrl Does Not Exist" sap:VirtualizedContainerService.HintSize="464,616">
                              <If.Then>
                                <Sequence DisplayName="Sequence" sap:VirtualizedContainerService.HintSize="301,515">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg3:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg3:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign DisplayName="Assign New UserListingUrl" sap:VirtualizedContainerService.HintSize="242,57">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="md:UserListingUrl">[userListingUrl]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="md:UserListingUrl">[New UserListingUrl With {.Id=Guid.NewGuid, .ListingUrlId=listingUrl.Id, .Created=System.DateTime.Now, .UserId=UserId }]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <InvokeMethod DisplayName="Add New UserListingUrl To Context" sap:VirtualizedContainerService.HintSize="242,127" MethodName="AddObject">
                                    <InvokeMethod.TargetObject>
                                      <InArgument x:TypeArguments="sdo:ObjectSet(md:UserListingUrl)">[domainContext.UserListingUrls]</InArgument>
                                    </InvokeMethod.TargetObject>
                                    <InArgument x:TypeArguments="md:UserListingUrl">[userListingUrl]</InArgument>
                                  </InvokeMethod>
                                  <InvokeMethod DisplayName="Save Context Changes" sap:VirtualizedContainerService.HintSize="242,127" MethodName="SaveChanges">
                                    <InvokeMethod.TargetObject>
                                      <InArgument x:TypeArguments="md:MarketingEntities">[domainContext]</InArgument>
                                    </InvokeMethod.TargetObject>
                                  </InvokeMethod>
                                </Sequence>
                              </If.Then>
                            </If>
                          </Sequence>
                        </ActivityAction>
                      </ForEach>
                    </Sequence>
                  </TryCatch.Try>
                  <TryCatch.Catches>
                    <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="542,20">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg3:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg3:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ActivityAction x:TypeArguments="s:Exception">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                        </ActivityAction.Argument>
                      </ActivityAction>
                    </Catch>
                  </TryCatch.Catches>
                </TryCatch>
              </ActivityAction>
            </ForEach>
          </FlowStep>
        </FlowStep.Next>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
  </Flowchart>
</Activity>