//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication.Implementation
{
    
    #region CraigslistPost
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/MarketingData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class CraigslistPost :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.CraigslistPost.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private global::System.Guid _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public long PostId
        {
            get
            {
                return this._PostId;
            }
            set
            {
                if (this._PostId != value)
                {
                    this.RaiseDataMemberChanging("PostId");
                    this.ValidateProperty("PostId", value);
                    this._PostId = value;
                    this.RaiseDataMemberChanged("PostId");
                }
            }
        }
        private long _PostId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Title
        {
            get
            {
                return this._Title;
            }
            set
            {
                if (this._Title != value)
                {
                    this.RaiseDataMemberChanging("Title");
                    this.ValidateProperty("Title", value);
                    this._Title = value;
                    this.RaiseDataMemberChanged("Title");
                }
            }
        }
        private string _Title;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string EmailAddress
        {
            get
            {
                return this._EmailAddress;
            }
            set
            {
                if (this._EmailAddress != value)
                {
                    this.RaiseDataMemberChanging("EmailAddress");
                    this.ValidateProperty("EmailAddress", value);
                    this._EmailAddress = value;
                    this.RaiseDataMemberChanged("EmailAddress");
                }
            }
        }
        private string _EmailAddress;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime PostDate
        {
            get
            {
                return this._PostDate;
            }
            set
            {
                if (this._PostDate != value)
                {
                    this.RaiseDataMemberChanging("PostDate");
                    this.ValidateProperty("PostDate", value);
                    this._PostDate = value;
                    this.RaiseDataMemberChanged("PostDate");
                }
            }
        }
        private global::System.DateTime _PostDate;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string PostsElement
        {
            get
            {
                return this._PostsElement;
            }
            set
            {
                if (this._PostsElement != value)
                {
                    this.RaiseDataMemberChanging("PostsElement");
                    this.ValidateProperty("PostsElement", value);
                    this._PostsElement = value;
                    this.RaiseDataMemberChanged("PostsElement");
                }
            }
        }
        private string _PostsElement;
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_CraigsListResponse_CraigslistPosts", "Id", "CraigslitPostsId")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<CraigsListResponse> CraigsListResponses
        {
            get
            {
                if (this._CraigsListResponses == null)
                {
                    this._CraigsListResponses = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.CraigsListResponse>(this, "CraigsListResponses", this.FilterCraigsListResponses, this.AttachCraigsListResponses, this.DetachCraigsListResponses);
                }
                return this._CraigsListResponses;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.CraigsListResponse> _CraigsListResponses;
        private void AttachCraigsListResponses(global::LightSwitchApplication.Implementation.CraigsListResponse entity)
        {
            entity.CraigslistPost = this;
        }
        private void DetachCraigsListResponses(global::LightSwitchApplication.Implementation.CraigsListResponse entity)
        {
            entity.CraigslistPost = null;
        }
        private bool FilterCraigsListResponses(global::LightSwitchApplication.Implementation.CraigsListResponse entity)
        {
            return global::System.Object.Equals(entity.CraigslitPostsId, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.CraigslistPost.DetailsClass.IImplementation.CraigsListResponses
        {
            get
            {
                return this.CraigsListResponses;
            }
        }
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_CraigslistPostKeywords_CraigslistPosts", "Id", "CraigslistPostId")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<CraigslistPostKeyword> CraigslistPostKeywords
        {
            get
            {
                if (this._CraigslistPostKeywords == null)
                {
                    this._CraigslistPostKeywords = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.CraigslistPostKeyword>(this, "CraigslistPostKeywords", this.FilterCraigslistPostKeywords, this.AttachCraigslistPostKeywords, this.DetachCraigslistPostKeywords);
                }
                return this._CraigslistPostKeywords;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.CraigslistPostKeyword> _CraigslistPostKeywords;
        private void AttachCraigslistPostKeywords(global::LightSwitchApplication.Implementation.CraigslistPostKeyword entity)
        {
            entity.CraigslistPost = this;
        }
        private void DetachCraigslistPostKeywords(global::LightSwitchApplication.Implementation.CraigslistPostKeyword entity)
        {
            entity.CraigslistPost = null;
        }
        private bool FilterCraigslistPostKeywords(global::LightSwitchApplication.Implementation.CraigslistPostKeyword entity)
        {
            return global::System.Object.Equals(entity.CraigslistPostId, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.CraigslistPost.DetailsClass.IImplementation.CraigslistPostKeywords
        {
            get
            {
                return this.CraigslistPostKeywords;
            }
        }
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid CraigslistCityId
        {
            get
            {
                return this._CraigslistCityId;
            }
            set
            {
                if (this._CraigslistCityId != value)
                {
                    this.RaiseDataMemberChanging("CraigslistCityId");
                    this.ValidateProperty("CraigslistCityId", value);
                    this._CraigslistCityId = value;
                    this.RaiseDataMemberChanged("CraigslistCityId");
                }
            }
        }
        private global::System.Guid _CraigslistCityId;
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_CraigslistPosts_CraigslistCity", "CraigslistCityId", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.CraigslistCity CraigslistCity
        {
            get
            {
                if (this._CraigslistCity == null)
                {
                    this._CraigslistCity = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.CraigslistCity>(this, "CraigslistCity", this.FilterCraigslistCity);
                }
                return this._CraigslistCity.Entity;
            }
            set
            {
                CraigslistCity previous = this.CraigslistCity;
                if (previous != value)
                {
                    this.ValidateProperty("CraigslistCity", value);
                    if (previous != null)
                    {
                        this._CraigslistCity.Entity = null;
                        previous.CraigslistPosts.Remove(this);
                    }
                    if (value != null)
                    {
                        this.CraigslistCityId = value.Id;
                    }
                    else
                    {
                        this.CraigslistCityId = default(global::System.Guid);
                    }
                    this._CraigslistCity.Entity = value;
                    if (value != null)
                    {
                        value.CraigslistPosts.Add(this);
                    }
                    this.RaisePropertyChanged("CraigslistCity");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.CraigslistCity> _CraigslistCity;
        private bool FilterCraigslistCity(global::LightSwitchApplication.Implementation.CraigslistCity entity)
        {
            return global::System.Object.Equals(entity.Id, this.CraigslistCityId);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.CraigslistPost.DetailsClass.IImplementation.CraigslistCity
        {
            get
            {
                return this.CraigslistCity;
            }
            set
            {
                this.CraigslistCity = (global::LightSwitchApplication.Implementation.CraigslistCity)value;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region CraigsListResponse
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/MarketingData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class CraigsListResponse :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.CraigsListResponse.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private global::System.Guid _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string ResponseContent
        {
            get
            {
                return this._ResponseContent;
            }
            set
            {
                if (this._ResponseContent != value)
                {
                    this.RaiseDataMemberChanging("ResponseContent");
                    this.ValidateProperty("ResponseContent", value);
                    this._ResponseContent = value;
                    this.RaiseDataMemberChanged("ResponseContent");
                }
            }
        }
        private string _ResponseContent;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string ResponseHtmlContent
        {
            get
            {
                return this._ResponseHtmlContent;
            }
            set
            {
                if (this._ResponseHtmlContent != value)
                {
                    this.RaiseDataMemberChanging("ResponseHtmlContent");
                    this.ValidateProperty("ResponseHtmlContent", value);
                    this._ResponseHtmlContent = value;
                    this.RaiseDataMemberChanged("ResponseHtmlContent");
                }
            }
        }
        private string _ResponseHtmlContent;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime Created
        {
            get
            {
                return this._Created;
            }
            set
            {
                if (this._Created != value)
                {
                    this.RaiseDataMemberChanging("Created");
                    this.ValidateProperty("Created", value);
                    this._Created = value;
                    this.RaiseDataMemberChanged("Created");
                }
            }
        }
        private global::System.DateTime _Created;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<global::System.DateTime> Processed
        {
            get
            {
                return this._Processed;
            }
            set
            {
                if (this._Processed != value)
                {
                    this.RaiseDataMemberChanging("Processed");
                    this.ValidateProperty("Processed", value);
                    this._Processed = value;
                    this.RaiseDataMemberChanged("Processed");
                }
            }
        }
        private global::System.Nullable<global::System.DateTime> _Processed;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<global::System.DateTime> Sent
        {
            get
            {
                return this._Sent;
            }
            set
            {
                if (this._Sent != value)
                {
                    this.RaiseDataMemberChanging("Sent");
                    this.ValidateProperty("Sent", value);
                    this._Sent = value;
                    this.RaiseDataMemberChanged("Sent");
                }
            }
        }
        private global::System.Nullable<global::System.DateTime> _Sent;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<global::System.DateTime> RepliedTo
        {
            get
            {
                return this._RepliedTo;
            }
            set
            {
                if (this._RepliedTo != value)
                {
                    this.RaiseDataMemberChanging("RepliedTo");
                    this.ValidateProperty("RepliedTo", value);
                    this._RepliedTo = value;
                    this.RaiseDataMemberChanged("RepliedTo");
                }
            }
        }
        private global::System.Nullable<global::System.DateTime> _RepliedTo;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid CraigslitPostsId
        {
            get
            {
                return this._CraigslitPostsId;
            }
            set
            {
                if (this._CraigslitPostsId != value)
                {
                    this.RaiseDataMemberChanging("CraigslitPostsId");
                    this.ValidateProperty("CraigslitPostsId", value);
                    this._CraigslitPostsId = value;
                    this.RaiseDataMemberChanged("CraigslitPostsId");
                }
            }
        }
        private global::System.Guid _CraigslitPostsId;
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_CraigsListResponse_CraigslistPosts", "CraigslitPostsId", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.CraigslistPost CraigslistPost
        {
            get
            {
                if (this._CraigslistPost == null)
                {
                    this._CraigslistPost = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.CraigslistPost>(this, "CraigslistPost", this.FilterCraigslistPost);
                }
                return this._CraigslistPost.Entity;
            }
            set
            {
                CraigslistPost previous = this.CraigslistPost;
                if (previous != value)
                {
                    this.ValidateProperty("CraigslistPost", value);
                    if (previous != null)
                    {
                        this._CraigslistPost.Entity = null;
                        previous.CraigsListResponses.Remove(this);
                    }
                    if (value != null)
                    {
                        this.CraigslitPostsId = value.Id;
                    }
                    else
                    {
                        this.CraigslitPostsId = default(global::System.Guid);
                    }
                    this._CraigslistPost.Entity = value;
                    if (value != null)
                    {
                        value.CraigsListResponses.Add(this);
                    }
                    this.RaisePropertyChanged("CraigslistPost");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.CraigslistPost> _CraigslistPost;
        private bool FilterCraigslistPost(global::LightSwitchApplication.Implementation.CraigslistPost entity)
        {
            return global::System.Object.Equals(entity.Id, this.CraigslitPostsId);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.CraigsListResponse.DetailsClass.IImplementation.CraigslistPost
        {
            get
            {
                return this.CraigslistPost;
            }
            set
            {
                this.CraigslistPost = (global::LightSwitchApplication.Implementation.CraigslistPost)value;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region CraigslistCity
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/MarketingData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class CraigslistCity :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.CraigslistCity.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private global::System.Guid _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string CityName
        {
            get
            {
                return this._CityName;
            }
            set
            {
                if (this._CityName != value)
                {
                    this.RaiseDataMemberChanging("CityName");
                    this.ValidateProperty("CityName", value);
                    this._CityName = value;
                    this.RaiseDataMemberChanged("CityName");
                }
            }
        }
        private string _CityName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string CityUrl
        {
            get
            {
                return this._CityUrl;
            }
            set
            {
                if (this._CityUrl != value)
                {
                    this.RaiseDataMemberChanging("CityUrl");
                    this.ValidateProperty("CityUrl", value);
                    this._CityUrl = value;
                    this.RaiseDataMemberChanged("CityUrl");
                }
            }
        }
        private string _CityUrl;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool Active
        {
            get
            {
                return this._Active;
            }
            set
            {
                if (this._Active != value)
                {
                    this.RaiseDataMemberChanging("Active");
                    this.ValidateProperty("Active", value);
                    this._Active = value;
                    this.RaiseDataMemberChanged("Active");
                }
            }
        }
        private bool _Active;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Region
        {
            get
            {
                return this._Region;
            }
            set
            {
                if (this._Region != value)
                {
                    this.RaiseDataMemberChanging("Region");
                    this.ValidateProperty("Region", value);
                    this._Region = value;
                    this.RaiseDataMemberChanged("Region");
                }
            }
        }
        private string _Region;
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_CraigslistPosts_CraigslistCity", "Id", "CraigslistCityId")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<CraigslistPost> CraigslistPosts
        {
            get
            {
                if (this._CraigslistPosts == null)
                {
                    this._CraigslistPosts = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.CraigslistPost>(this, "CraigslistPosts", this.FilterCraigslistPosts, this.AttachCraigslistPosts, this.DetachCraigslistPosts);
                }
                return this._CraigslistPosts;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.CraigslistPost> _CraigslistPosts;
        private void AttachCraigslistPosts(global::LightSwitchApplication.Implementation.CraigslistPost entity)
        {
            entity.CraigslistCity = this;
        }
        private void DetachCraigslistPosts(global::LightSwitchApplication.Implementation.CraigslistPost entity)
        {
            entity.CraigslistCity = null;
        }
        private bool FilterCraigslistPosts(global::LightSwitchApplication.Implementation.CraigslistPost entity)
        {
            return global::System.Object.Equals(entity.CraigslistCityId, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.CraigslistCity.DetailsClass.IImplementation.CraigslistPosts
        {
            get
            {
                return this.CraigslistPosts;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region Keyword
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/MarketingData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Keyword :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Keyword.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._KeywordValue;
        }
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.RaiseDataMemberChanging("Id");
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaiseDataMemberChanged("Id");
                }
            }
        }
        private global::System.Guid _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Score
        {
            get
            {
                return this._Score;
            }
            set
            {
                if (this._Score != value)
                {
                    this.RaiseDataMemberChanging("Score");
                    this.ValidateProperty("Score", value);
                    this._Score = value;
                    this.RaiseDataMemberChanged("Score");
                }
            }
        }
        private int _Score;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string KeywordValue
        {
            get
            {
                return this._KeywordValue;
            }
            set
            {
                if (this._KeywordValue != value)
                {
                    this.ValidateProperty("KeywordValue", value);
                    this._KeywordValue = value;
                    this.RaisePropertyChanged("KeywordValue");
                }
            }
        }
        private string _KeywordValue;
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region CraigslistPostKeyword
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/MarketingData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class CraigslistPostKeyword :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.CraigslistPostKeyword.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
    
            return global::System.ServiceModel.DomainServices.Client.EntityKey.Create(this._CraigslistPostId, this._KeywordId);
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid CraigslistPostId
        {
            get
            {
                return this._CraigslistPostId;
            }
            set
            {
                if (this._CraigslistPostId != value)
                {
                    this.ValidateProperty("CraigslistPostId", value);
                    this._CraigslistPostId = value;
                    this.RaisePropertyChanged("CraigslistPostId");
                }
            }
        }
        private global::System.Guid _CraigslistPostId;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid KeywordId
        {
            get
            {
                return this._KeywordId;
            }
            set
            {
                if (this._KeywordId != value)
                {
                    this.ValidateProperty("KeywordId", value);
                    this._KeywordId = value;
                    this.RaisePropertyChanged("KeywordId");
                }
            }
        }
        private global::System.Guid _KeywordId;
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_CraigslistPostKeywords_CraigslistPosts", "CraigslistPostId", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.CraigslistPost CraigslistPost
        {
            get
            {
                if (this._CraigslistPost == null)
                {
                    this._CraigslistPost = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.CraigslistPost>(this, "CraigslistPost", this.FilterCraigslistPost);
                }
                return this._CraigslistPost.Entity;
            }
            set
            {
                CraigslistPost previous = this.CraigslistPost;
                if (previous != value)
                {
                    this.ValidateProperty("CraigslistPost", value);
                    if (previous != null)
                    {
                        this._CraigslistPost.Entity = null;
                        previous.CraigslistPostKeywords.Remove(this);
                    }
                    if (value != null)
                    {
                        this.CraigslistPostId = value.Id;
                    }
                    else
                    {
                        this.CraigslistPostId = default(global::System.Guid);
                    }
                    this._CraigslistPost.Entity = value;
                    if (value != null)
                    {
                        value.CraigslistPostKeywords.Add(this);
                    }
                    this.RaisePropertyChanged("CraigslistPost");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.CraigslistPost> _CraigslistPost;
        private bool FilterCraigslistPost(global::LightSwitchApplication.Implementation.CraigslistPost entity)
        {
            return global::System.Object.Equals(entity.Id, this.CraigslistPostId);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.CraigslistPostKeyword.DetailsClass.IImplementation.CraigslistPost
        {
            get
            {
                return this.CraigslistPost;
            }
            set
            {
                this.CraigslistPost = (global::LightSwitchApplication.Implementation.CraigslistPost)value;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region ServerOperation
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/MarketingData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class ServerOperation :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.ServerOperation.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private global::System.Guid _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string OperationName
        {
            get
            {
                return this._OperationName;
            }
            set
            {
                if (this._OperationName != value)
                {
                    this.RaiseDataMemberChanging("OperationName");
                    this.ValidateProperty("OperationName", value);
                    this._OperationName = value;
                    this.RaiseDataMemberChanged("OperationName");
                }
            }
        }
        private string _OperationName;
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_ServerOperationHistory_ServerOperation", "Id", "ServerOperationId")]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::System.ServiceModel.DomainServices.Client.EntityCollection<ServerOperationHistory> ServerOperationHistories
        {
            get
            {
                if (this._ServerOperationHistories == null)
                {
                    this._ServerOperationHistories = new global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.ServerOperationHistory>(this, "ServerOperationHistories", this.FilterServerOperationHistories, this.AttachServerOperationHistories, this.DetachServerOperationHistories);
                }
                return this._ServerOperationHistories;
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityCollection<global::LightSwitchApplication.Implementation.ServerOperationHistory> _ServerOperationHistories;
        private void AttachServerOperationHistories(global::LightSwitchApplication.Implementation.ServerOperationHistory entity)
        {
            entity.ServerOperation = this;
        }
        private void DetachServerOperationHistories(global::LightSwitchApplication.Implementation.ServerOperationHistory entity)
        {
            entity.ServerOperation = null;
        }
        private bool FilterServerOperationHistories(global::LightSwitchApplication.Implementation.ServerOperationHistory entity)
        {
            return global::System.Object.Equals(entity.ServerOperationId, this.Id);
        }
        global::System.Collections.IEnumerable global::LightSwitchApplication.ServerOperation.DetailsClass.IImplementation.ServerOperationHistories
        {
            get
            {
                return this.ServerOperationHistories;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region ServerOperationHistory
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/MarketingData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class ServerOperationHistory :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.ServerOperationHistory.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private global::System.Guid _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<global::System.DateTime> Started
        {
            get
            {
                return this._Started;
            }
            set
            {
                if (this._Started != value)
                {
                    this.RaiseDataMemberChanging("Started");
                    this.ValidateProperty("Started", value);
                    this._Started = value;
                    this.RaiseDataMemberChanged("Started");
                }
            }
        }
        private global::System.Nullable<global::System.DateTime> _Started;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<global::System.DateTime> Completed
        {
            get
            {
                return this._Completed;
            }
            set
            {
                if (this._Completed != value)
                {
                    this.RaiseDataMemberChanging("Completed");
                    this.ValidateProperty("Completed", value);
                    this._Completed = value;
                    this.RaiseDataMemberChanged("Completed");
                }
            }
        }
        private global::System.Nullable<global::System.DateTime> _Completed;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime Scheduled
        {
            get
            {
                return this._Scheduled;
            }
            set
            {
                if (this._Scheduled != value)
                {
                    this.RaiseDataMemberChanging("Scheduled");
                    this.ValidateProperty("Scheduled", value);
                    this._Scheduled = value;
                    this.RaiseDataMemberChanged("Scheduled");
                }
            }
        }
        private global::System.DateTime _Scheduled;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Parameters
        {
            get
            {
                return this._Parameters;
            }
            set
            {
                if (this._Parameters != value)
                {
                    this.RaiseDataMemberChanging("Parameters");
                    this.ValidateProperty("Parameters", value);
                    this._Parameters = value;
                    this.RaiseDataMemberChanged("Parameters");
                }
            }
        }
        private string _Parameters;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid ServerOperationId
        {
            get
            {
                return this._ServerOperationId;
            }
            set
            {
                if (this._ServerOperationId != value)
                {
                    this.RaiseDataMemberChanging("ServerOperationId");
                    this.ValidateProperty("ServerOperationId", value);
                    this._ServerOperationId = value;
                    this.RaiseDataMemberChanged("ServerOperationId");
                }
            }
        }
        private global::System.Guid _ServerOperationId;
        
        [global::System.ComponentModel.DataAnnotations.Association("FK_ServerOperationHistory_ServerOperation", "ServerOperationId", "Id", IsForeignKey = true)]
        [global::System.Xml.Serialization.XmlIgnore()]
        public global::LightSwitchApplication.Implementation.ServerOperation ServerOperation
        {
            get
            {
                if (this._ServerOperation == null)
                {
                    this._ServerOperation = new global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.ServerOperation>(this, "ServerOperation", this.FilterServerOperation);
                }
                return this._ServerOperation.Entity;
            }
            set
            {
                ServerOperation previous = this.ServerOperation;
                if (previous != value)
                {
                    this.ValidateProperty("ServerOperation", value);
                    if (previous != null)
                    {
                        this._ServerOperation.Entity = null;
                        previous.ServerOperationHistories.Remove(this);
                    }
                    if (value != null)
                    {
                        this.ServerOperationId = value.Id;
                    }
                    else
                    {
                        this.ServerOperationId = default(global::System.Guid);
                    }
                    this._ServerOperation.Entity = value;
                    if (value != null)
                    {
                        value.ServerOperationHistories.Add(this);
                    }
                    this.RaisePropertyChanged("ServerOperation");
                }
            }
        }
        private global::System.ServiceModel.DomainServices.Client.EntityRef<global::LightSwitchApplication.Implementation.ServerOperation> _ServerOperation;
        private bool FilterServerOperation(global::LightSwitchApplication.Implementation.ServerOperation entity)
        {
            return global::System.Object.Equals(entity.Id, this.ServerOperationId);
        }
        global::Microsoft.LightSwitch.Internal.IEntityImplementation global::LightSwitchApplication.ServerOperationHistory.DetailsClass.IImplementation.ServerOperation
        {
            get
            {
                return this.ServerOperation;
            }
            set
            {
                this.ServerOperation = (global::LightSwitchApplication.Implementation.ServerOperation)value;
            }
        }
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region CraigslistPostView
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/MarketingData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class CraigslistPostView :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.CraigslistPostView.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            if (this._Title == null || this._PostsElement == null || this._EmailAddress == null || this._Region == null || this._CityName == null)
            {
                return null;
            }
    
            return global::System.ServiceModel.DomainServices.Client.EntityKey.Create(this._PostId, this._Title, this._PostsElement, this._PostDate, this._EmailAddress, this._Id, this._Region, this._CityName);
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public long PostId
        {
            get
            {
                return this._PostId;
            }
            set
            {
                if (this._PostId != value)
                {
                    this.ValidateProperty("PostId", value);
                    this._PostId = value;
                    this.RaisePropertyChanged("PostId");
                }
            }
        }
        private long _PostId;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Title
        {
            get
            {
                return this._Title;
            }
            set
            {
                if (this._Title != value)
                {
                    this.ValidateProperty("Title", value);
                    this._Title = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        private string _Title;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string PostsElement
        {
            get
            {
                return this._PostsElement;
            }
            set
            {
                if (this._PostsElement != value)
                {
                    this.ValidateProperty("PostsElement", value);
                    this._PostsElement = value;
                    this.RaisePropertyChanged("PostsElement");
                }
            }
        }
        private string _PostsElement;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime PostDate
        {
            get
            {
                return this._PostDate;
            }
            set
            {
                if (this._PostDate != value)
                {
                    this.ValidateProperty("PostDate", value);
                    this._PostDate = value;
                    this.RaisePropertyChanged("PostDate");
                }
            }
        }
        private global::System.DateTime _PostDate;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string EmailAddress
        {
            get
            {
                return this._EmailAddress;
            }
            set
            {
                if (this._EmailAddress != value)
                {
                    this.ValidateProperty("EmailAddress", value);
                    this._EmailAddress = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        private string _EmailAddress;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private global::System.Guid _Id;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Region
        {
            get
            {
                return this._Region;
            }
            set
            {
                if (this._Region != value)
                {
                    this.ValidateProperty("Region", value);
                    this._Region = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        private string _Region;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string CityName
        {
            get
            {
                return this._CityName;
            }
            set
            {
                if (this._CityName != value)
                {
                    this.ValidateProperty("CityName", value);
                    this._CityName = value;
                    this.RaisePropertyChanged("CityName");
                }
            }
        }
        private string _CityName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<int> Score
        {
            get
            {
                return this._Score;
            }
            set
            {
                if (this._Score != value)
                {
                    this.RaiseDataMemberChanging("Score");
                    this.ValidateProperty("Score", value);
                    this._Score = value;
                    this.RaiseDataMemberChanged("Score");
                }
            }
        }
        private global::System.Nullable<int> _Score;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<bool> RespondedTo
        {
            get
            {
                return this._RespondedTo;
            }
            set
            {
                if (this._RespondedTo != value)
                {
                    this.RaiseDataMemberChanging("RespondedTo");
                    this.ValidateProperty("RespondedTo", value);
                    this._RespondedTo = value;
                    this.RaiseDataMemberChanged("RespondedTo");
                }
            }
        }
        private global::System.Nullable<bool> _RespondedTo;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string PostBody
        {
            get
            {
                return this._PostBody;
            }
            set
            {
                if (this._PostBody != value)
                {
                    this.RaiseDataMemberChanging("PostBody");
                    this.ValidateProperty("PostBody", value);
                    this._PostBody = value;
                    this.RaiseDataMemberChanged("PostBody");
                }
            }
        }
        private string _PostBody;
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region SmtpServer
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/MarketingData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class SmtpServer :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.SmtpServer.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private global::System.Guid _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string SmtpServerLocation
        {
            get
            {
                return this._SmtpServerLocation;
            }
            set
            {
                if (this._SmtpServerLocation != value)
                {
                    this.RaiseDataMemberChanging("SmtpServerLocation");
                    this.ValidateProperty("SmtpServerLocation", value);
                    this._SmtpServerLocation = value;
                    this.RaiseDataMemberChanged("SmtpServerLocation");
                }
            }
        }
        private string _SmtpServerLocation;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool UseSsl
        {
            get
            {
                return this._UseSsl;
            }
            set
            {
                if (this._UseSsl != value)
                {
                    this.RaiseDataMemberChanging("UseSsl");
                    this.ValidateProperty("UseSsl", value);
                    this._UseSsl = value;
                    this.RaiseDataMemberChanged("UseSsl");
                }
            }
        }
        private bool _UseSsl;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int SmtpPort
        {
            get
            {
                return this._SmtpPort;
            }
            set
            {
                if (this._SmtpPort != value)
                {
                    this.RaiseDataMemberChanging("SmtpPort");
                    this.ValidateProperty("SmtpPort", value);
                    this._SmtpPort = value;
                    this.RaiseDataMemberChanged("SmtpPort");
                }
            }
        }
        private int _SmtpPort;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string SmtpUsername
        {
            get
            {
                return this._SmtpUsername;
            }
            set
            {
                if (this._SmtpUsername != value)
                {
                    this.RaiseDataMemberChanging("SmtpUsername");
                    this.ValidateProperty("SmtpUsername", value);
                    this._SmtpUsername = value;
                    this.RaiseDataMemberChanged("SmtpUsername");
                }
            }
        }
        private string _SmtpUsername;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string SmtpPassword
        {
            get
            {
                return this._SmtpPassword;
            }
            set
            {
                if (this._SmtpPassword != value)
                {
                    this.RaiseDataMemberChanging("SmtpPassword");
                    this.ValidateProperty("SmtpPassword", value);
                    this._SmtpPassword = value;
                    this.RaiseDataMemberChanged("SmtpPassword");
                }
            }
        }
        private string _SmtpPassword;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool Active
        {
            get
            {
                return this._Active;
            }
            set
            {
                if (this._Active != value)
                {
                    this.RaiseDataMemberChanging("Active");
                    this.ValidateProperty("Active", value);
                    this._Active = value;
                    this.RaiseDataMemberChanged("Active");
                }
            }
        }
        private bool _Active;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime Created
        {
            get
            {
                return this._Created;
            }
            set
            {
                if (this._Created != value)
                {
                    this.RaiseDataMemberChanging("Created");
                    this.ValidateProperty("Created", value);
                    this._Created = value;
                    this.RaiseDataMemberChanged("Created");
                }
            }
        }
        private global::System.DateTime _Created;
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region Operation
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/MarketingDomainServiceData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Operation :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Operation.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private global::System.Guid _Id;
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region MarketingData
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class MarketingData
        : global::Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext
    {
        public MarketingData(global::Microsoft.LightSwitch.IDataService dataService)
            : base(dataService, global::Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext.CreateWcfDomainClient<IMarketingDataContract>(new global::System.Uri("LightSwitchApplication-Implementation-MarketingDataDomainService.svc", global::System.UriKind.Relative)))
        {
        }
    
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.CraigslistPost> CraigslistPostEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.CraigslistPost>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.CraigsListResponse> CraigsListResponseEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.CraigsListResponse>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.CraigslistCity> CraigslistCityEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.CraigslistCity>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Keyword> KeywordEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Keyword>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.CraigslistPostKeyword> CraigslistPostKeywordEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.CraigslistPostKeyword>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.ServerOperation> ServerOperationEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.ServerOperation>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.ServerOperationHistory> ServerOperationHistoryEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.ServerOperationHistory>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.CraigslistPostView> CraigslistPostViewEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.CraigslistPostView>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.SmtpServer> SmtpServerEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.SmtpServer>();
            }
        }
        protected override global::System.ServiceModel.DomainServices.Client.EntityContainer CreateEntityContainer()
        {
            return new MarketingDataEntityContainer();
        }
    
        internal sealed class MarketingDataEntityContainer : global::System.ServiceModel.DomainServices.Client.EntityContainer
        {
            public MarketingDataEntityContainer()
            {
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.CraigslistPost>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.CraigsListResponse>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.CraigslistCity>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Keyword>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.CraigslistPostKeyword>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.ServerOperation>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.ServerOperationHistory>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.CraigslistPostView>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.SmtpServer>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
            }
        }
    
        #region Service Contract Interface
    
        [global::System.ServiceModel.ServiceContract]
        public interface IMarketingDataContract
        {
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/CraigslistPosts_Single", ReplyAction = "http://tempuri.org/MarketingDataDomainService/CraigslistPosts_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/CraigslistPosts_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCraigslistPosts_Single(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CraigslistPost> EndCraigslistPosts_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/CraigslistPosts_SingleOrDefault", ReplyAction = "http://tempuri.org/MarketingDataDomainService/CraigslistPosts_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/CraigslistPosts_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCraigslistPosts_SingleOrDefault(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CraigslistPost> EndCraigslistPosts_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/CraigslistPosts_All", ReplyAction = "http://tempuri.org/MarketingDataDomainService/CraigslistPosts_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/CraigslistPosts_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCraigslistPosts_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CraigslistPost> EndCraigslistPosts_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/CraigsListResponses_Single", ReplyAction = "http://tempuri.org/MarketingDataDomainService/CraigsListResponses_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/CraigsListResponses_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCraigsListResponses_Single(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CraigsListResponse> EndCraigsListResponses_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/CraigsListResponses_SingleOrDefault", ReplyAction = "http://tempuri.org/MarketingDataDomainService/CraigsListResponses_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/CraigsListResponses_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCraigsListResponses_SingleOrDefault(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CraigsListResponse> EndCraigsListResponses_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/CraigsListResponses_All", ReplyAction = "http://tempuri.org/MarketingDataDomainService/CraigsListResponses_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/CraigsListResponses_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCraigsListResponses_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CraigsListResponse> EndCraigsListResponses_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/CraigslistCities_Single", ReplyAction = "http://tempuri.org/MarketingDataDomainService/CraigslistCities_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/CraigslistCities_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCraigslistCities_Single(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CraigslistCity> EndCraigslistCities_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/CraigslistCities_SingleOrDefault", ReplyAction = "http://tempuri.org/MarketingDataDomainService/CraigslistCities_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/CraigslistCities_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCraigslistCities_SingleOrDefault(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CraigslistCity> EndCraigslistCities_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/CraigslistCities_All", ReplyAction = "http://tempuri.org/MarketingDataDomainService/CraigslistCities_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/CraigslistCities_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCraigslistCities_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CraigslistCity> EndCraigslistCities_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/Keywords_Single", ReplyAction = "http://tempuri.org/MarketingDataDomainService/Keywords_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/Keywords_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginKeywords_Single(string frameworkOperators, string KeywordValue, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Keyword> EndKeywords_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/Keywords_SingleOrDefault", ReplyAction = "http://tempuri.org/MarketingDataDomainService/Keywords_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/Keywords_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginKeywords_SingleOrDefault(string frameworkOperators, string KeywordValue, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Keyword> EndKeywords_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/Keywords_All", ReplyAction = "http://tempuri.org/MarketingDataDomainService/Keywords_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/Keywords_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginKeywords_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Keyword> EndKeywords_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/CraigslistPostKeywords_Single", ReplyAction = "http://tempuri.org/MarketingDataDomainService/CraigslistPostKeywords_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/CraigslistPostKeywords_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCraigslistPostKeywords_Single(string frameworkOperators, global::System.Nullable<global::System.Guid> CraigslistPostId, global::System.Nullable<global::System.Guid> KeywordId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CraigslistPostKeyword> EndCraigslistPostKeywords_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/CraigslistPostKeywords_SingleOrDefault", ReplyAction = "http://tempuri.org/MarketingDataDomainService/CraigslistPostKeywords_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/CraigslistPostKeywords_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCraigslistPostKeywords_SingleOrDefault(string frameworkOperators, global::System.Nullable<global::System.Guid> CraigslistPostId, global::System.Nullable<global::System.Guid> KeywordId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CraigslistPostKeyword> EndCraigslistPostKeywords_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/CraigslistPostKeywords_All", ReplyAction = "http://tempuri.org/MarketingDataDomainService/CraigslistPostKeywords_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/CraigslistPostKeywords_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCraigslistPostKeywords_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CraigslistPostKeyword> EndCraigslistPostKeywords_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/ServerOperations_Single", ReplyAction = "http://tempuri.org/MarketingDataDomainService/ServerOperations_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/ServerOperations_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginServerOperations_Single(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.ServerOperation> EndServerOperations_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/ServerOperations_SingleOrDefault", ReplyAction = "http://tempuri.org/MarketingDataDomainService/ServerOperations_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/ServerOperations_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginServerOperations_SingleOrDefault(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.ServerOperation> EndServerOperations_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/ServerOperations_All", ReplyAction = "http://tempuri.org/MarketingDataDomainService/ServerOperations_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/ServerOperations_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginServerOperations_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.ServerOperation> EndServerOperations_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/ServerOperationHistories_Single", ReplyAction = "http://tempuri.org/MarketingDataDomainService/ServerOperationHistories_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/ServerOperationHistories_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginServerOperationHistories_Single(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.ServerOperationHistory> EndServerOperationHistories_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/ServerOperationHistories_SingleOrDefault", ReplyAction = "http://tempuri.org/MarketingDataDomainService/ServerOperationHistories_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/ServerOperationHistories_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginServerOperationHistories_SingleOrDefault(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.ServerOperationHistory> EndServerOperationHistories_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/ServerOperationHistories_All", ReplyAction = "http://tempuri.org/MarketingDataDomainService/ServerOperationHistories_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/ServerOperationHistories_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginServerOperationHistories_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.ServerOperationHistory> EndServerOperationHistories_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/CraigslistPostViews_Single", ReplyAction = "http://tempuri.org/MarketingDataDomainService/CraigslistPostViews_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/CraigslistPostViews_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCraigslistPostViews_Single(string frameworkOperators, global::System.Nullable<long> PostId, string Title, string PostsElement, global::System.Nullable<global::System.DateTime> PostDate, string EmailAddress, global::System.Nullable<global::System.Guid> Id, string Region, string CityName, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CraigslistPostView> EndCraigslistPostViews_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/CraigslistPostViews_SingleOrDefault", ReplyAction = "http://tempuri.org/MarketingDataDomainService/CraigslistPostViews_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/CraigslistPostViews_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCraigslistPostViews_SingleOrDefault(string frameworkOperators, global::System.Nullable<long> PostId, string Title, string PostsElement, global::System.Nullable<global::System.DateTime> PostDate, string EmailAddress, global::System.Nullable<global::System.Guid> Id, string Region, string CityName, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CraigslistPostView> EndCraigslistPostViews_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/CraigslistPostViews_All", ReplyAction = "http://tempuri.org/MarketingDataDomainService/CraigslistPostViews_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/CraigslistPostViews_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCraigslistPostViews_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.CraigslistPostView> EndCraigslistPostViews_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/SmtpServers_Single", ReplyAction = "http://tempuri.org/MarketingDataDomainService/SmtpServers_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/SmtpServers_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSmtpServers_Single(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.SmtpServer> EndSmtpServers_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/SmtpServers_SingleOrDefault", ReplyAction = "http://tempuri.org/MarketingDataDomainService/SmtpServers_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/SmtpServers_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSmtpServers_SingleOrDefault(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.SmtpServer> EndSmtpServers_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/SmtpServers_All", ReplyAction = "http://tempuri.org/MarketingDataDomainService/SmtpServers_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/SmtpServers_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSmtpServers_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.SmtpServer> EndSmtpServers_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/SubmitChanges", ReplyAction = "http://tempuri.org/MarketingDataDomainService/SubmitChangesResponse"),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/SubmitChangesDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSubmitChanges(global::System.Collections.Generic.IEnumerable<global::System.ServiceModel.DomainServices.Client.ChangeSetEntry> changeSet, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.Collections.Generic.IEnumerable<global::System.ServiceModel.DomainServices.Client.ChangeSetEntry> EndSubmitChanges(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/__GetEntitySetCanInformation", ReplyAction = "http://tempuri.org/MarketingDataDomainService/__GetEntitySetCanInformationResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/__GetEntitySetCanInformationDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Begin__GetEntitySetCanInformation(string entitySetName, global::System.AsyncCallback callback, global::System.Object asyncState);
            int End__GetEntitySetCanInformation(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDataDomainService/__CanExecuteOperation", ReplyAction = "http://tempuri.org/MarketingDataDomainService/__CanExecuteOperationResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDataDomainService/__CanExecuteOperationDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Begin__CanExecuteOperation(string operationName, global::System.AsyncCallback callback, global::System.Object asyncState);
            bool End__CanExecuteOperation(global::System.IAsyncResult result);
            
        }
    
        #endregion
    
        protected override global::Microsoft.LightSwitch.Internal.IEntityImplementation CreateEntityImplementation<T>()
        {
            if (typeof(T) == typeof(global::LightSwitchApplication.CraigslistPost))
            {
                return new global::LightSwitchApplication.Implementation.CraigslistPost();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.CraigsListResponse))
            {
                return new global::LightSwitchApplication.Implementation.CraigsListResponse();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.CraigslistCity))
            {
                return new global::LightSwitchApplication.Implementation.CraigslistCity();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Keyword))
            {
                return new global::LightSwitchApplication.Implementation.Keyword();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.CraigslistPostKeyword))
            {
                return new global::LightSwitchApplication.Implementation.CraigslistPostKeyword();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.ServerOperation))
            {
                return new global::LightSwitchApplication.Implementation.ServerOperation();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.ServerOperationHistory))
            {
                return new global::LightSwitchApplication.Implementation.ServerOperationHistory();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.CraigslistPostView))
            {
                return new global::LightSwitchApplication.Implementation.CraigslistPostView();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.SmtpServer))
            {
                return new global::LightSwitchApplication.Implementation.SmtpServer();
            }
            return null;
        }
    }
    #endregion
    
    #region MarketingDomainServiceData
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class MarketingDomainServiceData
        : global::Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext
    {
        public MarketingDomainServiceData(global::Microsoft.LightSwitch.IDataService dataService)
            : base(dataService, global::Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext.CreateWcfDomainClient<IMarketingDomainServiceDataContract>(new global::System.Uri("LightSwitchApplication-Implementation-MarketingDomainServiceDataDomainService.svc", global::System.UriKind.Relative)))
        {
        }
    
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Operation> OperationEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Operation>();
            }
        }
        protected override global::System.ServiceModel.DomainServices.Client.EntityContainer CreateEntityContainer()
        {
            return new MarketingDomainServiceDataEntityContainer();
        }
    
        internal sealed class MarketingDomainServiceDataEntityContainer : global::System.ServiceModel.DomainServices.Client.EntityContainer
        {
            public MarketingDomainServiceDataEntityContainer()
            {
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Operation>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
            }
        }
    
        #region Service Contract Interface
    
        [global::System.ServiceModel.ServiceContract]
        public interface IMarketingDomainServiceDataContract
        {
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/Operations_Single", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/Operations_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/Operations_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginOperations_Single(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Operation> EndOperations_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/Operations_SingleOrDefault", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/Operations_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/Operations_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginOperations_SingleOrDefault(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Operation> EndOperations_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/Operations_All", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/Operations_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/Operations_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginOperations_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Operation> EndOperations_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/RunServerOperations", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/RunServerOperationsResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/RunServerOperationsDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginRunServerOperations(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Operation> EndRunServerOperations(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/SubmitChanges", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/SubmitChangesResponse"),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/SubmitChangesDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSubmitChanges(global::System.Collections.Generic.IEnumerable<global::System.ServiceModel.DomainServices.Client.ChangeSetEntry> changeSet, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.Collections.Generic.IEnumerable<global::System.ServiceModel.DomainServices.Client.ChangeSetEntry> EndSubmitChanges(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/__GetEntitySetCanInformation", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/__GetEntitySetCanInformationResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/__GetEntitySetCanInformationDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Begin__GetEntitySetCanInformation(string entitySetName, global::System.AsyncCallback callback, global::System.Object asyncState);
            int End__GetEntitySetCanInformation(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/__CanExecuteOperation", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/__CanExecuteOperationResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/__CanExecuteOperationDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Begin__CanExecuteOperation(string operationName, global::System.AsyncCallback callback, global::System.Object asyncState);
            bool End__CanExecuteOperation(global::System.IAsyncResult result);
            
        }
    
        #endregion
    
        protected override global::Microsoft.LightSwitch.Internal.IEntityImplementation CreateEntityImplementation<T>()
        {
            if (typeof(T) == typeof(global::LightSwitchApplication.Operation))
            {
                return new global::LightSwitchApplication.Implementation.Operation();
            }
            return null;
        }
    }
    #endregion
    
    #region DataServiceImplementationFactory
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.IDataServiceFactory))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class DataServiceFactory :
        global::Microsoft.LightSwitch.ClientGenerated.Implementation.DataServiceFactory
    {
    
        protected override global::Microsoft.LightSwitch.IDataService CreateDataService(global::System.Type dataServiceType)
        {
            if (dataServiceType == typeof(global::LightSwitchApplication.MarketingData))
            {
                return new global::LightSwitchApplication.MarketingData();
            }
            if (dataServiceType == typeof(global::LightSwitchApplication.MarketingDomainServiceData))
            {
                return new global::LightSwitchApplication.MarketingDomainServiceData();
            }
            return base.CreateDataService(dataServiceType);
        }
    
        protected override global::Microsoft.LightSwitch.Internal.IDataServiceImplementation CreateDataServiceImplementation<TDataService>(TDataService dataService)
        {
            if (typeof(TDataService) == typeof(global::LightSwitchApplication.MarketingData))
            {
                return new global::LightSwitchApplication.Implementation.MarketingData(dataService);
            }
            if (typeof(TDataService) == typeof(global::LightSwitchApplication.MarketingDomainServiceData))
            {
                return new global::LightSwitchApplication.Implementation.MarketingDomainServiceData(dataService);
            }
            return base.CreateDataServiceImplementation(dataService);
        }
    }
    #endregion
    
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.ITypeMappingProvider))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class __TypeMapping
        : global::Microsoft.LightSwitch.Internal.ITypeMappingProvider
    {
        global::System.Type global::Microsoft.LightSwitch.Internal.ITypeMappingProvider.GetImplementationType(global::System.Type definitionType)
        {
            if (typeof(global::LightSwitchApplication.CraigslistPost) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.CraigslistPost);
            }
            if (typeof(global::LightSwitchApplication.CraigsListResponse) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.CraigsListResponse);
            }
            if (typeof(global::LightSwitchApplication.CraigslistCity) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.CraigslistCity);
            }
            if (typeof(global::LightSwitchApplication.Keyword) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Keyword);
            }
            if (typeof(global::LightSwitchApplication.CraigslistPostKeyword) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.CraigslistPostKeyword);
            }
            if (typeof(global::LightSwitchApplication.ServerOperation) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.ServerOperation);
            }
            if (typeof(global::LightSwitchApplication.ServerOperationHistory) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.ServerOperationHistory);
            }
            if (typeof(global::LightSwitchApplication.CraigslistPostView) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.CraigslistPostView);
            }
            if (typeof(global::LightSwitchApplication.SmtpServer) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.SmtpServer);
            }
            if (typeof(global::LightSwitchApplication.Operation) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Operation);
            }
            return null;
        }
    }
}
