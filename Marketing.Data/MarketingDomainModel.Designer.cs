//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Marketing.CraigslistScraperModel", "FK_UserCity_aspnet_Membership", "aspnet_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Marketing.Data.aspnet_Membership), "UserCity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Marketing.Data.UserCity), true)]
[assembly: EdmRelationshipAttribute("Marketing.CraigslistScraperModel", "UserCityCity", "UserCity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Marketing.Data.UserCity), "City", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Marketing.Data.City), true)]
[assembly: EdmRelationshipAttribute("Marketing.CraigslistScraperModel", "FK_UserListingCategory_aspnet_Membership", "aspnet_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Marketing.Data.aspnet_Membership), "UserListingCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Marketing.Data.UserListingCategory), true)]
[assembly: EdmRelationshipAttribute("Marketing.CraigslistScraperModel", "FK_ListingCategory_ListingGroup", "ListingGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Marketing.Data.ListingGroup), "ListingCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Marketing.Data.ListingCategory), true)]
[assembly: EdmRelationshipAttribute("Marketing.CraigslistScraperModel", "FK_UserListingCategory_ListingCategory", "ListingCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Marketing.Data.ListingCategory), "UserListingCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Marketing.Data.UserListingCategory), true)]
[assembly: EdmRelationshipAttribute("Marketing.CraigslistScraperModel", "FK_UserKeyword_aspnet_Membership", "aspnet_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Marketing.Data.aspnet_Membership), "UserKeyword", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Marketing.Data.UserKeyword), true)]
[assembly: EdmRelationshipAttribute("Marketing.CraigslistScraperModel", "FK_UserListingUrl_aspnet_Membership", "aspnet_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Marketing.Data.aspnet_Membership), "UserListingUrl", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Marketing.Data.UserListingUrl), true)]
[assembly: EdmRelationshipAttribute("Marketing.CraigslistScraperModel", "FK_ListingUrl_ListingCategory", "ListingCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Marketing.Data.ListingCategory), "ListingUrl", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Marketing.Data.ListingUrl), true)]
[assembly: EdmRelationshipAttribute("Marketing.CraigslistScraperModel", "FK_ListingContent_ListingUrl", "ListingUrl", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Marketing.Data.ListingUrl), "ListingContent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Marketing.Data.ListingContent), true)]
[assembly: EdmRelationshipAttribute("Marketing.CraigslistScraperModel", "FK_UserListingUrl_ListingUrl", "ListingUrl", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Marketing.Data.ListingUrl), "UserListingUrl", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Marketing.Data.UserListingUrl), true)]
[assembly: EdmRelationshipAttribute("Marketing.CraigslistScraperModel", "FK_UserListingResponse_UserListingUrl", "UserListingUrl", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Marketing.Data.UserListingUrl), "UserListingResponse", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Marketing.Data.UserListingResponse), true)]
[assembly: EdmRelationshipAttribute("Marketing.CraigslistScraperModel", "FK_UserPreference_aspnet_Membership", "aspnet_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Marketing.Data.aspnet_Membership), "UserPreference", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Marketing.Data.UserPreference), true)]
[assembly: EdmRelationshipAttribute("Marketing.CraigslistScraperModel", "FK_UserListingKeywordScore_aspnet_Membership", "aspnet_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Marketing.Data.aspnet_Membership), "UserListingKeywordScore", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Marketing.Data.UserListingKeywordScore), true)]
[assembly: EdmRelationshipAttribute("Marketing.CraigslistScraperModel", "FK_UserListingKeywordScore_UserListingUrl", "UserListingUrl", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Marketing.Data.UserListingUrl), "UserListingKeywordScore", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Marketing.Data.UserListingKeywordScore), true)]
[assembly: EdmRelationshipAttribute("Marketing.CraigslistScraperModel", "FK_UserTemplate_aspnet_Membership", "aspnet_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Marketing.Data.aspnet_Membership), "UserTemplate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Marketing.Data.UserTemplate), true)]
[assembly: EdmRelationshipAttribute("Marketing.CraigslistScraperModel", "FK_UserFilter_aspnet_Membership", "aspnet_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Marketing.Data.aspnet_Membership), "UserFilter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Marketing.Data.UserFilter), true)]
[assembly: EdmRelationshipAttribute("Marketing.CraigslistScraperModel", "FK_CategoryLog_Category", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Marketing.Data.Category), "CategoryLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Marketing.Data.CategoryLog), true)]
[assembly: EdmRelationshipAttribute("Marketing.CraigslistScraperModel", "FK_CategoryLog_Log", "Log", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Marketing.Data.Log), "CategoryLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Marketing.Data.CategoryLog), true)]
[assembly: EdmRelationshipAttribute("Marketing.CraigslistScraperModel", "FK_ListingUrl_City", "City", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Marketing.Data.City), "ListingUrl", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Marketing.Data.ListingUrl), true)]
[assembly: EdmRelationshipAttribute("Marketing.CraigslistScraperModel", "FK_UserFile_aspnet_Membership", "aspnet_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Marketing.Data.aspnet_Membership), "UserFile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Marketing.Data.UserFile), true)]

#endregion

namespace Marketing.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MarketingEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MarketingEntities object using the connection string found in the 'MarketingEntities' section of the application configuration file.
        /// </summary>
        public MarketingEntities() : base("name=MarketingEntities", "MarketingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MarketingEntities object.
        /// </summary>
        public MarketingEntities(string connectionString) : base(connectionString, "MarketingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MarketingEntities object.
        /// </summary>
        public MarketingEntities(EntityConnection connection) : base(connection, "MarketingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Membership> aspnet_Membership
        {
            get
            {
                if ((_aspnet_Membership == null))
                {
                    _aspnet_Membership = base.CreateObjectSet<aspnet_Membership>("aspnet_Membership");
                }
                return _aspnet_Membership;
            }
        }
        private ObjectSet<aspnet_Membership> _aspnet_Membership;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<City> Cities
        {
            get
            {
                if ((_Cities == null))
                {
                    _Cities = base.CreateObjectSet<City>("Cities");
                }
                return _Cities;
            }
        }
        private ObjectSet<City> _Cities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserCity> UserCities
        {
            get
            {
                if ((_UserCities == null))
                {
                    _UserCities = base.CreateObjectSet<UserCity>("UserCities");
                }
                return _UserCities;
            }
        }
        private ObjectSet<UserCity> _UserCities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ListingCategory> ListingCategories
        {
            get
            {
                if ((_ListingCategories == null))
                {
                    _ListingCategories = base.CreateObjectSet<ListingCategory>("ListingCategories");
                }
                return _ListingCategories;
            }
        }
        private ObjectSet<ListingCategory> _ListingCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ListingGroup> ListingGroups
        {
            get
            {
                if ((_ListingGroups == null))
                {
                    _ListingGroups = base.CreateObjectSet<ListingGroup>("ListingGroups");
                }
                return _ListingGroups;
            }
        }
        private ObjectSet<ListingGroup> _ListingGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserListingCategory> UserListingCategories
        {
            get
            {
                if ((_UserListingCategories == null))
                {
                    _UserListingCategories = base.CreateObjectSet<UserListingCategory>("UserListingCategories");
                }
                return _UserListingCategories;
            }
        }
        private ObjectSet<UserListingCategory> _UserListingCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserKeyword> UserKeywords
        {
            get
            {
                if ((_UserKeywords == null))
                {
                    _UserKeywords = base.CreateObjectSet<UserKeyword>("UserKeywords");
                }
                return _UserKeywords;
            }
        }
        private ObjectSet<UserKeyword> _UserKeywords;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ListingContent> ListingContents
        {
            get
            {
                if ((_ListingContents == null))
                {
                    _ListingContents = base.CreateObjectSet<ListingContent>("ListingContents");
                }
                return _ListingContents;
            }
        }
        private ObjectSet<ListingContent> _ListingContents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ListingUrl> ListingUrls
        {
            get
            {
                if ((_ListingUrls == null))
                {
                    _ListingUrls = base.CreateObjectSet<ListingUrl>("ListingUrls");
                }
                return _ListingUrls;
            }
        }
        private ObjectSet<ListingUrl> _ListingUrls;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserListingUrl> UserListingUrls
        {
            get
            {
                if ((_UserListingUrls == null))
                {
                    _UserListingUrls = base.CreateObjectSet<UserListingUrl>("UserListingUrls");
                }
                return _UserListingUrls;
            }
        }
        private ObjectSet<UserListingUrl> _UserListingUrls;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserListingRefresh> UserListingRefreshes
        {
            get
            {
                if ((_UserListingRefreshes == null))
                {
                    _UserListingRefreshes = base.CreateObjectSet<UserListingRefresh>("UserListingRefreshes");
                }
                return _UserListingRefreshes;
            }
        }
        private ObjectSet<UserListingRefresh> _UserListingRefreshes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserListingResponse> UserListingResponses
        {
            get
            {
                if ((_UserListingResponses == null))
                {
                    _UserListingResponses = base.CreateObjectSet<UserListingResponse>("UserListingResponses");
                }
                return _UserListingResponses;
            }
        }
        private ObjectSet<UserListingResponse> _UserListingResponses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserPreference> UserPreferences
        {
            get
            {
                if ((_UserPreferences == null))
                {
                    _UserPreferences = base.CreateObjectSet<UserPreference>("UserPreferences");
                }
                return _UserPreferences;
            }
        }
        private ObjectSet<UserPreference> _UserPreferences;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vw_aspnet_MembershipUsers> vw_aspnet_MembershipUsers
        {
            get
            {
                if ((_vw_aspnet_MembershipUsers == null))
                {
                    _vw_aspnet_MembershipUsers = base.CreateObjectSet<vw_aspnet_MembershipUsers>("vw_aspnet_MembershipUsers");
                }
                return _vw_aspnet_MembershipUsers;
            }
        }
        private ObjectSet<vw_aspnet_MembershipUsers> _vw_aspnet_MembershipUsers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserListingKeywordScore> UserListingKeywordScores
        {
            get
            {
                if ((_UserListingKeywordScores == null))
                {
                    _UserListingKeywordScores = base.CreateObjectSet<UserListingKeywordScore>("UserListingKeywordScores");
                }
                return _UserListingKeywordScores;
            }
        }
        private ObjectSet<UserListingKeywordScore> _UserListingKeywordScores;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserTemplate> UserTemplates
        {
            get
            {
                if ((_UserTemplates == null))
                {
                    _UserTemplates = base.CreateObjectSet<UserTemplate>("UserTemplates");
                }
                return _UserTemplates;
            }
        }
        private ObjectSet<UserTemplate> _UserTemplates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserFilter> UserFilters
        {
            get
            {
                if ((_UserFilters == null))
                {
                    _UserFilters = base.CreateObjectSet<UserFilter>("UserFilters");
                }
                return _UserFilters;
            }
        }
        private ObjectSet<UserFilter> _UserFilters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BugReport> BugReports
        {
            get
            {
                if ((_BugReports == null))
                {
                    _BugReports = base.CreateObjectSet<BugReport>("BugReports");
                }
                return _BugReports;
            }
        }
        private ObjectSet<BugReport> _BugReports;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CategoryLog> CategoryLogs
        {
            get
            {
                if ((_CategoryLogs == null))
                {
                    _CategoryLogs = base.CreateObjectSet<CategoryLog>("CategoryLogs");
                }
                return _CategoryLogs;
            }
        }
        private ObjectSet<CategoryLog> _CategoryLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Log> Logs
        {
            get
            {
                if ((_Logs == null))
                {
                    _Logs = base.CreateObjectSet<Log>("Logs");
                }
                return _Logs;
            }
        }
        private ObjectSet<Log> _Logs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserListingData> UserListingDatas
        {
            get
            {
                if ((_UserListingDatas == null))
                {
                    _UserListingDatas = base.CreateObjectSet<UserListingData>("UserListingDatas");
                }
                return _UserListingDatas;
            }
        }
        private ObjectSet<UserListingData> _UserListingDatas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserFile> UserFiles
        {
            get
            {
                if ((_UserFiles == null))
                {
                    _UserFiles = base.CreateObjectSet<UserFile>("UserFiles");
                }
                return _UserFiles;
            }
        }
        private ObjectSet<UserFile> _UserFiles;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Membership EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Membership(aspnet_Membership aspnet_Membership)
        {
            base.AddObject("aspnet_Membership", aspnet_Membership);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCities(City city)
        {
            base.AddObject("Cities", city);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserCities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserCities(UserCity userCity)
        {
            base.AddObject("UserCities", userCity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ListingCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToListingCategories(ListingCategory listingCategory)
        {
            base.AddObject("ListingCategories", listingCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ListingGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToListingGroups(ListingGroup listingGroup)
        {
            base.AddObject("ListingGroups", listingGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserListingCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserListingCategories(UserListingCategory userListingCategory)
        {
            base.AddObject("UserListingCategories", userListingCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserKeywords EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserKeywords(UserKeyword userKeyword)
        {
            base.AddObject("UserKeywords", userKeyword);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ListingContents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToListingContents(ListingContent listingContent)
        {
            base.AddObject("ListingContents", listingContent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ListingUrls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToListingUrls(ListingUrl listingUrl)
        {
            base.AddObject("ListingUrls", listingUrl);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserListingUrls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserListingUrls(UserListingUrl userListingUrl)
        {
            base.AddObject("UserListingUrls", userListingUrl);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserListingRefreshes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserListingRefreshes(UserListingRefresh userListingRefresh)
        {
            base.AddObject("UserListingRefreshes", userListingRefresh);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserListingResponses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserListingResponses(UserListingResponse userListingResponse)
        {
            base.AddObject("UserListingResponses", userListingResponse);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserPreferences EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserPreferences(UserPreference userPreference)
        {
            base.AddObject("UserPreferences", userPreference);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vw_aspnet_MembershipUsers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovw_aspnet_MembershipUsers(vw_aspnet_MembershipUsers vw_aspnet_MembershipUsers)
        {
            base.AddObject("vw_aspnet_MembershipUsers", vw_aspnet_MembershipUsers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserListingKeywordScores EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserListingKeywordScores(UserListingKeywordScore userListingKeywordScore)
        {
            base.AddObject("UserListingKeywordScores", userListingKeywordScore);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserTemplates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserTemplates(UserTemplate userTemplate)
        {
            base.AddObject("UserTemplates", userTemplate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserFilters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserFilters(UserFilter userFilter)
        {
            base.AddObject("UserFilters", userFilter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BugReports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBugReports(BugReport bugReport)
        {
            base.AddObject("BugReports", bugReport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CategoryLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategoryLogs(CategoryLog categoryLog)
        {
            base.AddObject("CategoryLogs", categoryLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Logs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogs(Log log)
        {
            base.AddObject("Logs", log);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserListingDatas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserListingDatas(UserListingData userListingData)
        {
            base.AddObject("UserListingDatas", userListingData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserFiles(UserFile userFile)
        {
            base.AddObject("UserFiles", userFile);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Marketing.CraigslistScraperModel", Name="aspnet_Membership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Membership : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Membership object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="passwordFormat">Initial value of the PasswordFormat property.</param>
        /// <param name="passwordSalt">Initial value of the PasswordSalt property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="isLockedOut">Initial value of the IsLockedOut property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="lastLoginDate">Initial value of the LastLoginDate property.</param>
        /// <param name="lastPasswordChangedDate">Initial value of the LastPasswordChangedDate property.</param>
        /// <param name="lastLockoutDate">Initial value of the LastLockoutDate property.</param>
        /// <param name="failedPasswordAttemptCount">Initial value of the FailedPasswordAttemptCount property.</param>
        /// <param name="failedPasswordAttemptWindowStart">Initial value of the FailedPasswordAttemptWindowStart property.</param>
        /// <param name="failedPasswordAnswerAttemptCount">Initial value of the FailedPasswordAnswerAttemptCount property.</param>
        /// <param name="failedPasswordAnswerAttemptWindowStart">Initial value of the FailedPasswordAnswerAttemptWindowStart property.</param>
        public static aspnet_Membership Createaspnet_Membership(global::System.Guid applicationId, global::System.Guid userId, global::System.String password, global::System.Int32 passwordFormat, global::System.String passwordSalt, global::System.Boolean isApproved, global::System.Boolean isLockedOut, global::System.DateTime createDate, global::System.DateTime lastLoginDate, global::System.DateTime lastPasswordChangedDate, global::System.DateTime lastLockoutDate, global::System.Int32 failedPasswordAttemptCount, global::System.DateTime failedPasswordAttemptWindowStart, global::System.Int32 failedPasswordAnswerAttemptCount, global::System.DateTime failedPasswordAnswerAttemptWindowStart)
        {
            aspnet_Membership aspnet_Membership = new aspnet_Membership();
            aspnet_Membership.ApplicationId = applicationId;
            aspnet_Membership.UserId = userId;
            aspnet_Membership.Password = password;
            aspnet_Membership.PasswordFormat = passwordFormat;
            aspnet_Membership.PasswordSalt = passwordSalt;
            aspnet_Membership.IsApproved = isApproved;
            aspnet_Membership.IsLockedOut = isLockedOut;
            aspnet_Membership.CreateDate = createDate;
            aspnet_Membership.LastLoginDate = lastLoginDate;
            aspnet_Membership.LastPasswordChangedDate = lastPasswordChangedDate;
            aspnet_Membership.LastLockoutDate = lastLockoutDate;
            aspnet_Membership.FailedPasswordAttemptCount = failedPasswordAttemptCount;
            aspnet_Membership.FailedPasswordAttemptWindowStart = failedPasswordAttemptWindowStart;
            aspnet_Membership.FailedPasswordAnswerAttemptCount = failedPasswordAnswerAttemptCount;
            aspnet_Membership.FailedPasswordAnswerAttemptWindowStart = failedPasswordAnswerAttemptWindowStart;
            return aspnet_Membership;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PasswordFormat
        {
            get
            {
                return _PasswordFormat;
            }
            set
            {
                OnPasswordFormatChanging(value);
                ReportPropertyChanging("PasswordFormat");
                _PasswordFormat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordFormat");
                OnPasswordFormatChanged();
            }
        }
        private global::System.Int32 _PasswordFormat;
        partial void OnPasswordFormatChanging(global::System.Int32 value);
        partial void OnPasswordFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobilePIN
        {
            get
            {
                return _MobilePIN;
            }
            set
            {
                OnMobilePINChanging(value);
                ReportPropertyChanging("MobilePIN");
                _MobilePIN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobilePIN");
                OnMobilePINChanged();
            }
        }
        private global::System.String _MobilePIN;
        partial void OnMobilePINChanging(global::System.String value);
        partial void OnMobilePINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoweredEmail
        {
            get
            {
                return _LoweredEmail;
            }
            set
            {
                OnLoweredEmailChanging(value);
                ReportPropertyChanging("LoweredEmail");
                _LoweredEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoweredEmail");
                OnLoweredEmailChanged();
            }
        }
        private global::System.String _LoweredEmail;
        partial void OnLoweredEmailChanging(global::System.String value);
        partial void OnLoweredEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordQuestion
        {
            get
            {
                return _PasswordQuestion;
            }
            set
            {
                OnPasswordQuestionChanging(value);
                ReportPropertyChanging("PasswordQuestion");
                _PasswordQuestion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordQuestion");
                OnPasswordQuestionChanged();
            }
        }
        private global::System.String _PasswordQuestion;
        partial void OnPasswordQuestionChanging(global::System.String value);
        partial void OnPasswordQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordAnswer
        {
            get
            {
                return _PasswordAnswer;
            }
            set
            {
                OnPasswordAnswerChanging(value);
                ReportPropertyChanging("PasswordAnswer");
                _PasswordAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordAnswer");
                OnPasswordAnswerChanged();
            }
        }
        private global::System.String _PasswordAnswer;
        partial void OnPasswordAnswerChanging(global::System.String value);
        partial void OnPasswordAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLockedOut
        {
            get
            {
                return _IsLockedOut;
            }
            set
            {
                OnIsLockedOutChanging(value);
                ReportPropertyChanging("IsLockedOut");
                _IsLockedOut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLockedOut");
                OnIsLockedOutChanged();
            }
        }
        private global::System.Boolean _IsLockedOut;
        partial void OnIsLockedOutChanging(global::System.Boolean value);
        partial void OnIsLockedOutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private global::System.DateTime _LastLoginDate;
        partial void OnLastLoginDateChanging(global::System.DateTime value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastPasswordChangedDate
        {
            get
            {
                return _LastPasswordChangedDate;
            }
            set
            {
                OnLastPasswordChangedDateChanging(value);
                ReportPropertyChanging("LastPasswordChangedDate");
                _LastPasswordChangedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPasswordChangedDate");
                OnLastPasswordChangedDateChanged();
            }
        }
        private global::System.DateTime _LastPasswordChangedDate;
        partial void OnLastPasswordChangedDateChanging(global::System.DateTime value);
        partial void OnLastPasswordChangedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLockoutDate
        {
            get
            {
                return _LastLockoutDate;
            }
            set
            {
                OnLastLockoutDateChanging(value);
                ReportPropertyChanging("LastLockoutDate");
                _LastLockoutDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLockoutDate");
                OnLastLockoutDateChanged();
            }
        }
        private global::System.DateTime _LastLockoutDate;
        partial void OnLastLockoutDateChanging(global::System.DateTime value);
        partial void OnLastLockoutDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAttemptCount
        {
            get
            {
                return _FailedPasswordAttemptCount;
            }
            set
            {
                OnFailedPasswordAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptCount");
                _FailedPasswordAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptCount");
                OnFailedPasswordAttemptCountChanged();
            }
        }
        private global::System.Int32 _FailedPasswordAttemptCount;
        partial void OnFailedPasswordAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptWindowStart");
                _FailedPasswordAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptWindowStart");
                OnFailedPasswordAttemptWindowStartChanged();
            }
        }
        private global::System.DateTime _FailedPasswordAttemptWindowStart;
        partial void OnFailedPasswordAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAnswerAttemptCount
        {
            get
            {
                return _FailedPasswordAnswerAttemptCount;
            }
            set
            {
                OnFailedPasswordAnswerAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptCount");
                _FailedPasswordAnswerAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptCount");
                OnFailedPasswordAnswerAttemptCountChanged();
            }
        }
        private global::System.Int32 _FailedPasswordAnswerAttemptCount;
        partial void OnFailedPasswordAnswerAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAnswerAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAnswerAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAnswerAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAnswerAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptWindowStart");
                _FailedPasswordAnswerAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
                OnFailedPasswordAnswerAttemptWindowStartChanged();
            }
        }
        private global::System.DateTime _FailedPasswordAnswerAttemptWindowStart;
        partial void OnFailedPasswordAnswerAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_UserCity_aspnet_Membership", "UserCity")]
        public EntityCollection<UserCity> UserCities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserCity>("Marketing.CraigslistScraperModel.FK_UserCity_aspnet_Membership", "UserCity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserCity>("Marketing.CraigslistScraperModel.FK_UserCity_aspnet_Membership", "UserCity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_UserListingCategory_aspnet_Membership", "UserListingCategory")]
        public EntityCollection<UserListingCategory> UserListingCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserListingCategory>("Marketing.CraigslistScraperModel.FK_UserListingCategory_aspnet_Membership", "UserListingCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserListingCategory>("Marketing.CraigslistScraperModel.FK_UserListingCategory_aspnet_Membership", "UserListingCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_UserKeyword_aspnet_Membership", "UserKeyword")]
        public EntityCollection<UserKeyword> UserKeywords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserKeyword>("Marketing.CraigslistScraperModel.FK_UserKeyword_aspnet_Membership", "UserKeyword");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserKeyword>("Marketing.CraigslistScraperModel.FK_UserKeyword_aspnet_Membership", "UserKeyword", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_UserListingUrl_aspnet_Membership", "UserListingUrl")]
        public EntityCollection<UserListingUrl> UserListingUrls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserListingUrl>("Marketing.CraigslistScraperModel.FK_UserListingUrl_aspnet_Membership", "UserListingUrl");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserListingUrl>("Marketing.CraigslistScraperModel.FK_UserListingUrl_aspnet_Membership", "UserListingUrl", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_UserPreference_aspnet_Membership", "UserPreference")]
        public EntityCollection<UserPreference> UserPreferences
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserPreference>("Marketing.CraigslistScraperModel.FK_UserPreference_aspnet_Membership", "UserPreference");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserPreference>("Marketing.CraigslistScraperModel.FK_UserPreference_aspnet_Membership", "UserPreference", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_UserListingKeywordScore_aspnet_Membership", "UserListingKeywordScore")]
        public EntityCollection<UserListingKeywordScore> UserListingKeywordScores
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserListingKeywordScore>("Marketing.CraigslistScraperModel.FK_UserListingKeywordScore_aspnet_Membership", "UserListingKeywordScore");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserListingKeywordScore>("Marketing.CraigslistScraperModel.FK_UserListingKeywordScore_aspnet_Membership", "UserListingKeywordScore", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_UserTemplate_aspnet_Membership", "UserTemplate")]
        public EntityCollection<UserTemplate> UserTemplates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserTemplate>("Marketing.CraigslistScraperModel.FK_UserTemplate_aspnet_Membership", "UserTemplate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserTemplate>("Marketing.CraigslistScraperModel.FK_UserTemplate_aspnet_Membership", "UserTemplate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_UserFilter_aspnet_Membership", "UserFilter")]
        public EntityCollection<UserFilter> UserFilters
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserFilter>("Marketing.CraigslistScraperModel.FK_UserFilter_aspnet_Membership", "UserFilter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserFilter>("Marketing.CraigslistScraperModel.FK_UserFilter_aspnet_Membership", "UserFilter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_UserFile_aspnet_Membership", "UserFile")]
        public EntityCollection<UserFile> UserFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserFile>("Marketing.CraigslistScraperModel.FK_UserFile_aspnet_Membership", "UserFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserFile>("Marketing.CraigslistScraperModel.FK_UserFile_aspnet_Membership", "UserFile", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Marketing.CraigslistScraperModel", Name="BugReport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BugReport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BugReport object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="reported">Initial value of the Reported property.</param>
        public static BugReport CreateBugReport(global::System.Guid id, global::System.String description, global::System.DateTime reported)
        {
            BugReport bugReport = new BugReport();
            bugReport.Id = id;
            bugReport.Description = description;
            bugReport.Reported = reported;
            return bugReport;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Resolution
        {
            get
            {
                return _Resolution;
            }
            set
            {
                OnResolutionChanging(value);
                ReportPropertyChanging("Resolution");
                _Resolution = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Resolution");
                OnResolutionChanged();
            }
        }
        private global::System.String _Resolution;
        partial void OnResolutionChanging(global::System.String value);
        partial void OnResolutionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReproductionSteps
        {
            get
            {
                return _ReproductionSteps;
            }
            set
            {
                OnReproductionStepsChanging(value);
                ReportPropertyChanging("ReproductionSteps");
                _ReproductionSteps = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReproductionSteps");
                OnReproductionStepsChanged();
            }
        }
        private global::System.String _ReproductionSteps;
        partial void OnReproductionStepsChanging(global::System.String value);
        partial void OnReproductionStepsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Reported
        {
            get
            {
                return _Reported;
            }
            set
            {
                OnReportedChanging(value);
                ReportPropertyChanging("Reported");
                _Reported = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Reported");
                OnReportedChanged();
            }
        }
        private global::System.DateTime _Reported;
        partial void OnReportedChanging(global::System.DateTime value);
        partial void OnReportedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Resolved
        {
            get
            {
                return _Resolved;
            }
            set
            {
                OnResolvedChanging(value);
                ReportPropertyChanging("Resolved");
                _Resolved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Resolved");
                OnResolvedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Resolved;
        partial void OnResolvedChanging(Nullable<global::System.DateTime> value);
        partial void OnResolvedChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Marketing.CraigslistScraperModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="categoryName">Initial value of the CategoryName property.</param>
        public static Category CreateCategory(global::System.Int32 categoryID, global::System.String categoryName)
        {
            Category category = new Category();
            category.CategoryID = categoryID;
            category.CategoryName = categoryName;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                if (_CategoryID != value)
                {
                    OnCategoryIDChanging(value);
                    ReportPropertyChanging("CategoryID");
                    _CategoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryID");
                    OnCategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_CategoryLog_Category", "CategoryLog")]
        public EntityCollection<CategoryLog> CategoryLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CategoryLog>("Marketing.CraigslistScraperModel.FK_CategoryLog_Category", "CategoryLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CategoryLog>("Marketing.CraigslistScraperModel.FK_CategoryLog_Category", "CategoryLog", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Marketing.CraigslistScraperModel", Name="CategoryLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CategoryLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CategoryLog object.
        /// </summary>
        /// <param name="categoryLogID">Initial value of the CategoryLogID property.</param>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="logID">Initial value of the LogID property.</param>
        public static CategoryLog CreateCategoryLog(global::System.Int32 categoryLogID, global::System.Int32 categoryID, global::System.Int32 logID)
        {
            CategoryLog categoryLog = new CategoryLog();
            categoryLog.CategoryLogID = categoryLogID;
            categoryLog.CategoryID = categoryID;
            categoryLog.LogID = logID;
            return categoryLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryLogID
        {
            get
            {
                return _CategoryLogID;
            }
            set
            {
                if (_CategoryLogID != value)
                {
                    OnCategoryLogIDChanging(value);
                    ReportPropertyChanging("CategoryLogID");
                    _CategoryLogID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryLogID");
                    OnCategoryLogIDChanged();
                }
            }
        }
        private global::System.Int32 _CategoryLogID;
        partial void OnCategoryLogIDChanging(global::System.Int32 value);
        partial void OnCategoryLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private global::System.Int32 _CategoryID;
        partial void OnCategoryIDChanging(global::System.Int32 value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LogID
        {
            get
            {
                return _LogID;
            }
            set
            {
                OnLogIDChanging(value);
                ReportPropertyChanging("LogID");
                _LogID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogID");
                OnLogIDChanged();
            }
        }
        private global::System.Int32 _LogID;
        partial void OnLogIDChanging(global::System.Int32 value);
        partial void OnLogIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_CategoryLog_Category", "Category")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Marketing.CraigslistScraperModel.FK_CategoryLog_Category", "Category").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Marketing.CraigslistScraperModel.FK_CategoryLog_Category", "Category").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("Marketing.CraigslistScraperModel.FK_CategoryLog_Category", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("Marketing.CraigslistScraperModel.FK_CategoryLog_Category", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_CategoryLog_Log", "Log")]
        public Log Log
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Log>("Marketing.CraigslistScraperModel.FK_CategoryLog_Log", "Log").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Log>("Marketing.CraigslistScraperModel.FK_CategoryLog_Log", "Log").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Log> LogReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Log>("Marketing.CraigslistScraperModel.FK_CategoryLog_Log", "Log");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Log>("Marketing.CraigslistScraperModel.FK_CategoryLog_Log", "Log", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Marketing.CraigslistScraperModel", Name="City")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class City : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new City object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="regionName">Initial value of the RegionName property.</param>
        /// <param name="cityName">Initial value of the CityName property.</param>
        /// <param name="cityBaseUrl">Initial value of the CityBaseUrl property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static City CreateCity(global::System.Guid id, global::System.String regionName, global::System.String cityName, global::System.String cityBaseUrl, global::System.Boolean active)
        {
            City city = new City();
            city.Id = id;
            city.RegionName = regionName;
            city.CityName = cityName;
            city.CityBaseUrl = cityBaseUrl;
            city.Active = active;
            return city;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RegionName
        {
            get
            {
                return _RegionName;
            }
            set
            {
                OnRegionNameChanging(value);
                ReportPropertyChanging("RegionName");
                _RegionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RegionName");
                OnRegionNameChanged();
            }
        }
        private global::System.String _RegionName;
        partial void OnRegionNameChanging(global::System.String value);
        partial void OnRegionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CityName
        {
            get
            {
                return _CityName;
            }
            set
            {
                OnCityNameChanging(value);
                ReportPropertyChanging("CityName");
                _CityName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CityName");
                OnCityNameChanged();
            }
        }
        private global::System.String _CityName;
        partial void OnCityNameChanging(global::System.String value);
        partial void OnCityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CityBaseUrl
        {
            get
            {
                return _CityBaseUrl;
            }
            set
            {
                OnCityBaseUrlChanging(value);
                ReportPropertyChanging("CityBaseUrl");
                _CityBaseUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CityBaseUrl");
                OnCityBaseUrlChanged();
            }
        }
        private global::System.String _CityBaseUrl;
        partial void OnCityBaseUrlChanging(global::System.String value);
        partial void OnCityBaseUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StateProvince
        {
            get
            {
                return _StateProvince;
            }
            set
            {
                OnStateProvinceChanging(value);
                ReportPropertyChanging("StateProvince");
                _StateProvince = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StateProvince");
                OnStateProvinceChanged();
            }
        }
        private global::System.String _StateProvince;
        partial void OnStateProvinceChanging(global::System.String value);
        partial void OnStateProvinceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "UserCityCity", "UserCity")]
        public EntityCollection<UserCity> UserCity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserCity>("Marketing.CraigslistScraperModel.UserCityCity", "UserCity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserCity>("Marketing.CraigslistScraperModel.UserCityCity", "UserCity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_ListingUrl_City", "ListingUrl")]
        public EntityCollection<ListingUrl> ListingUrls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListingUrl>("Marketing.CraigslistScraperModel.FK_ListingUrl_City", "ListingUrl");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListingUrl>("Marketing.CraigslistScraperModel.FK_ListingUrl_City", "ListingUrl", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Marketing.CraigslistScraperModel", Name="ListingCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ListingCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListingCategory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="listingGroupId">Initial value of the ListingGroupId property.</param>
        /// <param name="listingCategoryName">Initial value of the ListingCategoryName property.</param>
        /// <param name="categoryBaseUrl">Initial value of the CategoryBaseUrl property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static ListingCategory CreateListingCategory(global::System.Guid id, global::System.Guid listingGroupId, global::System.String listingCategoryName, global::System.String categoryBaseUrl, global::System.Boolean active)
        {
            ListingCategory listingCategory = new ListingCategory();
            listingCategory.Id = id;
            listingCategory.ListingGroupId = listingGroupId;
            listingCategory.ListingCategoryName = listingCategoryName;
            listingCategory.CategoryBaseUrl = categoryBaseUrl;
            listingCategory.Active = active;
            return listingCategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ListingGroupId
        {
            get
            {
                return _ListingGroupId;
            }
            set
            {
                OnListingGroupIdChanging(value);
                ReportPropertyChanging("ListingGroupId");
                _ListingGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListingGroupId");
                OnListingGroupIdChanged();
            }
        }
        private global::System.Guid _ListingGroupId;
        partial void OnListingGroupIdChanging(global::System.Guid value);
        partial void OnListingGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ListingCategoryName
        {
            get
            {
                return _ListingCategoryName;
            }
            set
            {
                OnListingCategoryNameChanging(value);
                ReportPropertyChanging("ListingCategoryName");
                _ListingCategoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ListingCategoryName");
                OnListingCategoryNameChanged();
            }
        }
        private global::System.String _ListingCategoryName;
        partial void OnListingCategoryNameChanging(global::System.String value);
        partial void OnListingCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryBaseUrl
        {
            get
            {
                return _CategoryBaseUrl;
            }
            set
            {
                OnCategoryBaseUrlChanging(value);
                ReportPropertyChanging("CategoryBaseUrl");
                _CategoryBaseUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryBaseUrl");
                OnCategoryBaseUrlChanged();
            }
        }
        private global::System.String _CategoryBaseUrl;
        partial void OnCategoryBaseUrlChanging(global::System.String value);
        partial void OnCategoryBaseUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_ListingCategory_ListingGroup", "ListingGroup")]
        public ListingGroup ListingGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListingGroup>("Marketing.CraigslistScraperModel.FK_ListingCategory_ListingGroup", "ListingGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListingGroup>("Marketing.CraigslistScraperModel.FK_ListingCategory_ListingGroup", "ListingGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ListingGroup> ListingGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListingGroup>("Marketing.CraigslistScraperModel.FK_ListingCategory_ListingGroup", "ListingGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ListingGroup>("Marketing.CraigslistScraperModel.FK_ListingCategory_ListingGroup", "ListingGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_UserListingCategory_ListingCategory", "UserListingCategory")]
        public EntityCollection<UserListingCategory> UserListingCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserListingCategory>("Marketing.CraigslistScraperModel.FK_UserListingCategory_ListingCategory", "UserListingCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserListingCategory>("Marketing.CraigslistScraperModel.FK_UserListingCategory_ListingCategory", "UserListingCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_ListingUrl_ListingCategory", "ListingUrl")]
        public EntityCollection<ListingUrl> ListingUrls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListingUrl>("Marketing.CraigslistScraperModel.FK_ListingUrl_ListingCategory", "ListingUrl");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListingUrl>("Marketing.CraigslistScraperModel.FK_ListingUrl_ListingCategory", "ListingUrl", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Marketing.CraigslistScraperModel", Name="ListingContent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ListingContent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListingContent object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="listingUrlId">Initial value of the ListingUrlId property.</param>
        /// <param name="postContent">Initial value of the PostContent property.</param>
        /// <param name="postElement">Initial value of the PostElement property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="postDate">Initial value of the PostDate property.</param>
        /// <param name="replyTo">Initial value of the ReplyTo property.</param>
        public static ListingContent CreateListingContent(global::System.Guid id, global::System.Guid listingUrlId, global::System.String postContent, global::System.String postElement, global::System.DateTime created, global::System.DateTime postDate, global::System.String replyTo)
        {
            ListingContent listingContent = new ListingContent();
            listingContent.Id = id;
            listingContent.ListingUrlId = listingUrlId;
            listingContent.PostContent = postContent;
            listingContent.PostElement = postElement;
            listingContent.Created = created;
            listingContent.PostDate = postDate;
            listingContent.ReplyTo = replyTo;
            return listingContent;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ListingUrlId
        {
            get
            {
                return _ListingUrlId;
            }
            set
            {
                OnListingUrlIdChanging(value);
                ReportPropertyChanging("ListingUrlId");
                _ListingUrlId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListingUrlId");
                OnListingUrlIdChanged();
            }
        }
        private global::System.Guid _ListingUrlId;
        partial void OnListingUrlIdChanging(global::System.Guid value);
        partial void OnListingUrlIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PostContent
        {
            get
            {
                return _PostContent;
            }
            set
            {
                OnPostContentChanging(value);
                ReportPropertyChanging("PostContent");
                _PostContent = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PostContent");
                OnPostContentChanged();
            }
        }
        private global::System.String _PostContent;
        partial void OnPostContentChanging(global::System.String value);
        partial void OnPostContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PostElement
        {
            get
            {
                return _PostElement;
            }
            set
            {
                OnPostElementChanging(value);
                ReportPropertyChanging("PostElement");
                _PostElement = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PostElement");
                OnPostElementChanged();
            }
        }
        private global::System.String _PostElement;
        partial void OnPostElementChanging(global::System.String value);
        partial void OnPostElementChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PostDate
        {
            get
            {
                return _PostDate;
            }
            set
            {
                OnPostDateChanging(value);
                ReportPropertyChanging("PostDate");
                _PostDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostDate");
                OnPostDateChanged();
            }
        }
        private global::System.DateTime _PostDate;
        partial void OnPostDateChanging(global::System.DateTime value);
        partial void OnPostDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReplyTo
        {
            get
            {
                return _ReplyTo;
            }
            set
            {
                OnReplyToChanging(value);
                ReportPropertyChanging("ReplyTo");
                _ReplyTo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReplyTo");
                OnReplyToChanged();
            }
        }
        private global::System.String _ReplyTo;
        partial void OnReplyToChanging(global::System.String value);
        partial void OnReplyToChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_ListingContent_ListingUrl", "ListingUrl")]
        public ListingUrl ListingUrl
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListingUrl>("Marketing.CraigslistScraperModel.FK_ListingContent_ListingUrl", "ListingUrl").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListingUrl>("Marketing.CraigslistScraperModel.FK_ListingContent_ListingUrl", "ListingUrl").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ListingUrl> ListingUrlReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListingUrl>("Marketing.CraigslistScraperModel.FK_ListingContent_ListingUrl", "ListingUrl");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ListingUrl>("Marketing.CraigslistScraperModel.FK_ListingContent_ListingUrl", "ListingUrl", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Marketing.CraigslistScraperModel", Name="ListingGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ListingGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListingGroup object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="listingGroupName">Initial value of the ListingGroupName property.</param>
        /// <param name="listingBaseUrl">Initial value of the ListingBaseUrl property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static ListingGroup CreateListingGroup(global::System.Guid id, global::System.String listingGroupName, global::System.String listingBaseUrl, global::System.Boolean active)
        {
            ListingGroup listingGroup = new ListingGroup();
            listingGroup.Id = id;
            listingGroup.ListingGroupName = listingGroupName;
            listingGroup.ListingBaseUrl = listingBaseUrl;
            listingGroup.Active = active;
            return listingGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ListingGroupName
        {
            get
            {
                return _ListingGroupName;
            }
            set
            {
                OnListingGroupNameChanging(value);
                ReportPropertyChanging("ListingGroupName");
                _ListingGroupName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ListingGroupName");
                OnListingGroupNameChanged();
            }
        }
        private global::System.String _ListingGroupName;
        partial void OnListingGroupNameChanging(global::System.String value);
        partial void OnListingGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ListingBaseUrl
        {
            get
            {
                return _ListingBaseUrl;
            }
            set
            {
                OnListingBaseUrlChanging(value);
                ReportPropertyChanging("ListingBaseUrl");
                _ListingBaseUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ListingBaseUrl");
                OnListingBaseUrlChanged();
            }
        }
        private global::System.String _ListingBaseUrl;
        partial void OnListingBaseUrlChanging(global::System.String value);
        partial void OnListingBaseUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_ListingCategory_ListingGroup", "ListingCategory")]
        public EntityCollection<ListingCategory> ListingCategories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListingCategory>("Marketing.CraigslistScraperModel.FK_ListingCategory_ListingGroup", "ListingCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListingCategory>("Marketing.CraigslistScraperModel.FK_ListingCategory_ListingGroup", "ListingCategory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Marketing.CraigslistScraperModel", Name="ListingUrl")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ListingUrl : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListingUrl object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="listingCategoryId">Initial value of the ListingCategoryId property.</param>
        /// <param name="cityId">Initial value of the CityId property.</param>
        /// <param name="url">Initial value of the Url property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="postId">Initial value of the PostId property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        public static ListingUrl CreateListingUrl(global::System.Guid id, global::System.Guid listingCategoryId, global::System.Guid cityId, global::System.String url, global::System.String title, global::System.Int64 postId, global::System.DateTime created)
        {
            ListingUrl listingUrl = new ListingUrl();
            listingUrl.Id = id;
            listingUrl.ListingCategoryId = listingCategoryId;
            listingUrl.CityId = cityId;
            listingUrl.Url = url;
            listingUrl.Title = title;
            listingUrl.PostId = postId;
            listingUrl.Created = created;
            return listingUrl;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ListingCategoryId
        {
            get
            {
                return _ListingCategoryId;
            }
            set
            {
                OnListingCategoryIdChanging(value);
                ReportPropertyChanging("ListingCategoryId");
                _ListingCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListingCategoryId");
                OnListingCategoryIdChanged();
            }
        }
        private global::System.Guid _ListingCategoryId;
        partial void OnListingCategoryIdChanging(global::System.Guid value);
        partial void OnListingCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                OnCityIdChanging(value);
                ReportPropertyChanging("CityId");
                _CityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityId");
                OnCityIdChanged();
            }
        }
        private global::System.Guid _CityId;
        partial void OnCityIdChanging(global::System.Guid value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PostId
        {
            get
            {
                return _PostId;
            }
            set
            {
                OnPostIdChanging(value);
                ReportPropertyChanging("PostId");
                _PostId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostId");
                OnPostIdChanged();
            }
        }
        private global::System.Int64 _PostId;
        partial void OnPostIdChanging(global::System.Int64 value);
        partial void OnPostIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_ListingUrl_ListingCategory", "ListingCategory")]
        public ListingCategory ListingCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListingCategory>("Marketing.CraigslistScraperModel.FK_ListingUrl_ListingCategory", "ListingCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListingCategory>("Marketing.CraigslistScraperModel.FK_ListingUrl_ListingCategory", "ListingCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ListingCategory> ListingCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListingCategory>("Marketing.CraigslistScraperModel.FK_ListingUrl_ListingCategory", "ListingCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ListingCategory>("Marketing.CraigslistScraperModel.FK_ListingUrl_ListingCategory", "ListingCategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_ListingContent_ListingUrl", "ListingContent")]
        public EntityCollection<ListingContent> ListingContents
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListingContent>("Marketing.CraigslistScraperModel.FK_ListingContent_ListingUrl", "ListingContent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListingContent>("Marketing.CraigslistScraperModel.FK_ListingContent_ListingUrl", "ListingContent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_UserListingUrl_ListingUrl", "UserListingUrl")]
        public EntityCollection<UserListingUrl> UserListingUrls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserListingUrl>("Marketing.CraigslistScraperModel.FK_UserListingUrl_ListingUrl", "UserListingUrl");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserListingUrl>("Marketing.CraigslistScraperModel.FK_UserListingUrl_ListingUrl", "UserListingUrl", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_ListingUrl_City", "City")]
        public City City
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("Marketing.CraigslistScraperModel.FK_ListingUrl_City", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("Marketing.CraigslistScraperModel.FK_ListingUrl_City", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("Marketing.CraigslistScraperModel.FK_ListingUrl_City", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("Marketing.CraigslistScraperModel.FK_ListingUrl_City", "City", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Marketing.CraigslistScraperModel", Name="Log")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Log : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Log object.
        /// </summary>
        /// <param name="logID">Initial value of the LogID property.</param>
        /// <param name="priority">Initial value of the Priority property.</param>
        /// <param name="severity">Initial value of the Severity property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="timestamp">Initial value of the Timestamp property.</param>
        /// <param name="machineName">Initial value of the MachineName property.</param>
        /// <param name="appDomainName">Initial value of the AppDomainName property.</param>
        /// <param name="processID">Initial value of the ProcessID property.</param>
        /// <param name="processName">Initial value of the ProcessName property.</param>
        public static Log CreateLog(global::System.Int32 logID, global::System.Int32 priority, global::System.String severity, global::System.String title, global::System.DateTime timestamp, global::System.String machineName, global::System.String appDomainName, global::System.String processID, global::System.String processName)
        {
            Log log = new Log();
            log.LogID = logID;
            log.Priority = priority;
            log.Severity = severity;
            log.Title = title;
            log.Timestamp = timestamp;
            log.MachineName = machineName;
            log.AppDomainName = appDomainName;
            log.ProcessID = processID;
            log.ProcessName = processName;
            return log;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LogID
        {
            get
            {
                return _LogID;
            }
            set
            {
                if (_LogID != value)
                {
                    OnLogIDChanging(value);
                    ReportPropertyChanging("LogID");
                    _LogID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LogID");
                    OnLogIDChanged();
                }
            }
        }
        private global::System.Int32 _LogID;
        partial void OnLogIDChanging(global::System.Int32 value);
        partial void OnLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EventID
        {
            get
            {
                return _EventID;
            }
            set
            {
                OnEventIDChanging(value);
                ReportPropertyChanging("EventID");
                _EventID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventID");
                OnEventIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EventID;
        partial void OnEventIDChanging(Nullable<global::System.Int32> value);
        partial void OnEventIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.Int32 _Priority;
        partial void OnPriorityChanging(global::System.Int32 value);
        partial void OnPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Severity
        {
            get
            {
                return _Severity;
            }
            set
            {
                OnSeverityChanging(value);
                ReportPropertyChanging("Severity");
                _Severity = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Severity");
                OnSeverityChanged();
            }
        }
        private global::System.String _Severity;
        partial void OnSeverityChanging(global::System.String value);
        partial void OnSeverityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Timestamp
        {
            get
            {
                return _Timestamp;
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.DateTime _Timestamp;
        partial void OnTimestampChanging(global::System.DateTime value);
        partial void OnTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MachineName
        {
            get
            {
                return _MachineName;
            }
            set
            {
                OnMachineNameChanging(value);
                ReportPropertyChanging("MachineName");
                _MachineName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MachineName");
                OnMachineNameChanged();
            }
        }
        private global::System.String _MachineName;
        partial void OnMachineNameChanging(global::System.String value);
        partial void OnMachineNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AppDomainName
        {
            get
            {
                return _AppDomainName;
            }
            set
            {
                OnAppDomainNameChanging(value);
                ReportPropertyChanging("AppDomainName");
                _AppDomainName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AppDomainName");
                OnAppDomainNameChanged();
            }
        }
        private global::System.String _AppDomainName;
        partial void OnAppDomainNameChanging(global::System.String value);
        partial void OnAppDomainNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProcessID
        {
            get
            {
                return _ProcessID;
            }
            set
            {
                OnProcessIDChanging(value);
                ReportPropertyChanging("ProcessID");
                _ProcessID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProcessID");
                OnProcessIDChanged();
            }
        }
        private global::System.String _ProcessID;
        partial void OnProcessIDChanging(global::System.String value);
        partial void OnProcessIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProcessName
        {
            get
            {
                return _ProcessName;
            }
            set
            {
                OnProcessNameChanging(value);
                ReportPropertyChanging("ProcessName");
                _ProcessName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProcessName");
                OnProcessNameChanged();
            }
        }
        private global::System.String _ProcessName;
        partial void OnProcessNameChanging(global::System.String value);
        partial void OnProcessNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ThreadName
        {
            get
            {
                return _ThreadName;
            }
            set
            {
                OnThreadNameChanging(value);
                ReportPropertyChanging("ThreadName");
                _ThreadName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ThreadName");
                OnThreadNameChanged();
            }
        }
        private global::System.String _ThreadName;
        partial void OnThreadNameChanging(global::System.String value);
        partial void OnThreadNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Win32ThreadId
        {
            get
            {
                return _Win32ThreadId;
            }
            set
            {
                OnWin32ThreadIdChanging(value);
                ReportPropertyChanging("Win32ThreadId");
                _Win32ThreadId = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Win32ThreadId");
                OnWin32ThreadIdChanged();
            }
        }
        private global::System.String _Win32ThreadId;
        partial void OnWin32ThreadIdChanging(global::System.String value);
        partial void OnWin32ThreadIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FormattedMessage
        {
            get
            {
                return _FormattedMessage;
            }
            set
            {
                OnFormattedMessageChanging(value);
                ReportPropertyChanging("FormattedMessage");
                _FormattedMessage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FormattedMessage");
                OnFormattedMessageChanged();
            }
        }
        private global::System.String _FormattedMessage;
        partial void OnFormattedMessageChanging(global::System.String value);
        partial void OnFormattedMessageChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_CategoryLog_Log", "CategoryLog")]
        public EntityCollection<CategoryLog> CategoryLogs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CategoryLog>("Marketing.CraigslistScraperModel.FK_CategoryLog_Log", "CategoryLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CategoryLog>("Marketing.CraigslistScraperModel.FK_CategoryLog_Log", "CategoryLog", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Marketing.CraigslistScraperModel", Name="UserCity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserCity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserCity object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="cityId">Initial value of the CityId property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static UserCity CreateUserCity(global::System.Guid id, global::System.Guid userId, global::System.Guid cityId, global::System.Boolean active)
        {
            UserCity userCity = new UserCity();
            userCity.Id = id;
            userCity.UserId = userId;
            userCity.CityId = cityId;
            userCity.Active = active;
            return userCity;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                OnCityIdChanging(value);
                ReportPropertyChanging("CityId");
                _CityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityId");
                OnCityIdChanged();
            }
        }
        private global::System.Guid _CityId;
        partial void OnCityIdChanging(global::System.Guid value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_UserCity_aspnet_Membership", "aspnet_Membership")]
        public aspnet_Membership aspnet_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserCity_aspnet_Membership", "aspnet_Membership").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserCity_aspnet_Membership", "aspnet_Membership").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Membership> aspnet_MembershipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserCity_aspnet_Membership", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserCity_aspnet_Membership", "aspnet_Membership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "UserCityCity", "City")]
        public City Cities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("Marketing.CraigslistScraperModel.UserCityCity", "City").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("Marketing.CraigslistScraperModel.UserCityCity", "City").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<City> CitiesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<City>("Marketing.CraigslistScraperModel.UserCityCity", "City");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<City>("Marketing.CraigslistScraperModel.UserCityCity", "City", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Marketing.CraigslistScraperModel", Name="UserFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserFile object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="filename">Initial value of the Filename property.</param>
        /// <param name="extension">Initial value of the Extension property.</param>
        /// <param name="rawFile">Initial value of the RawFile property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="byteCount">Initial value of the ByteCount property.</param>
        public static UserFile CreateUserFile(global::System.Guid id, global::System.Guid userId, global::System.String filename, global::System.String extension, global::System.Byte[] rawFile, global::System.DateTime created, global::System.Int64 byteCount)
        {
            UserFile userFile = new UserFile();
            userFile.Id = id;
            userFile.UserId = userId;
            userFile.Filename = filename;
            userFile.Extension = extension;
            userFile.RawFile = rawFile;
            userFile.Created = created;
            userFile.ByteCount = byteCount;
            return userFile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Filename
        {
            get
            {
                return _Filename;
            }
            set
            {
                OnFilenameChanging(value);
                ReportPropertyChanging("Filename");
                _Filename = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Filename");
                OnFilenameChanged();
            }
        }
        private global::System.String _Filename;
        partial void OnFilenameChanging(global::System.String value);
        partial void OnFilenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Extension
        {
            get
            {
                return _Extension;
            }
            set
            {
                OnExtensionChanging(value);
                ReportPropertyChanging("Extension");
                _Extension = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Extension");
                OnExtensionChanged();
            }
        }
        private global::System.String _Extension;
        partial void OnExtensionChanging(global::System.String value);
        partial void OnExtensionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] RawFile
        {
            get
            {
                return StructuralObject.GetValidValue(_RawFile);
            }
            set
            {
                OnRawFileChanging(value);
                ReportPropertyChanging("RawFile");
                _RawFile = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RawFile");
                OnRawFileChanged();
            }
        }
        private global::System.Byte[] _RawFile;
        partial void OnRawFileChanging(global::System.Byte[] value);
        partial void OnRawFileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ByteCount
        {
            get
            {
                return _ByteCount;
            }
            set
            {
                OnByteCountChanging(value);
                ReportPropertyChanging("ByteCount");
                _ByteCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ByteCount");
                OnByteCountChanged();
            }
        }
        private global::System.Int64 _ByteCount;
        partial void OnByteCountChanging(global::System.Int64 value);
        partial void OnByteCountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_UserFile_aspnet_Membership", "aspnet_Membership")]
        public aspnet_Membership aspnet_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserFile_aspnet_Membership", "aspnet_Membership").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserFile_aspnet_Membership", "aspnet_Membership").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Membership> aspnet_MembershipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserFile_aspnet_Membership", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserFile_aspnet_Membership", "aspnet_Membership", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Marketing.CraigslistScraperModel", Name="UserFilter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserFilter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserFilter object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="showResponded">Initial value of the ShowResponded property.</param>
        /// <param name="showNotResponded">Initial value of the ShowNotResponded property.</param>
        /// <param name="filtersEnabled">Initial value of the FiltersEnabled property.</param>
        public static UserFilter CreateUserFilter(global::System.Guid id, global::System.Guid userId, global::System.Boolean showResponded, global::System.Boolean showNotResponded, global::System.Boolean filtersEnabled)
        {
            UserFilter userFilter = new UserFilter();
            userFilter.Id = id;
            userFilter.UserId = userId;
            userFilter.ShowResponded = showResponded;
            userFilter.ShowNotResponded = showNotResponded;
            userFilter.FiltersEnabled = filtersEnabled;
            return userFilter;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PostStart
        {
            get
            {
                return _PostStart;
            }
            set
            {
                OnPostStartChanging(value);
                ReportPropertyChanging("PostStart");
                _PostStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostStart");
                OnPostStartChanged();
            }
        }
        private Nullable<global::System.DateTime> _PostStart;
        partial void OnPostStartChanging(Nullable<global::System.DateTime> value);
        partial void OnPostStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PostEnd
        {
            get
            {
                return _PostEnd;
            }
            set
            {
                OnPostEndChanging(value);
                ReportPropertyChanging("PostEnd");
                _PostEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostEnd");
                OnPostEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _PostEnd;
        partial void OnPostEndChanging(Nullable<global::System.DateTime> value);
        partial void OnPostEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ResponseStart
        {
            get
            {
                return _ResponseStart;
            }
            set
            {
                OnResponseStartChanging(value);
                ReportPropertyChanging("ResponseStart");
                _ResponseStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResponseStart");
                OnResponseStartChanged();
            }
        }
        private Nullable<global::System.DateTime> _ResponseStart;
        partial void OnResponseStartChanging(Nullable<global::System.DateTime> value);
        partial void OnResponseStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ResponseEnd
        {
            get
            {
                return _ResponseEnd;
            }
            set
            {
                OnResponseEndChanging(value);
                ReportPropertyChanging("ResponseEnd");
                _ResponseEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResponseEnd");
                OnResponseEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _ResponseEnd;
        partial void OnResponseEndChanging(Nullable<global::System.DateTime> value);
        partial void OnResponseEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FilteredCities
        {
            get
            {
                return _FilteredCities;
            }
            set
            {
                OnFilteredCitiesChanging(value);
                ReportPropertyChanging("FilteredCities");
                _FilteredCities = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FilteredCities");
                OnFilteredCitiesChanged();
            }
        }
        private global::System.String _FilteredCities;
        partial void OnFilteredCitiesChanging(global::System.String value);
        partial void OnFilteredCitiesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FilteredStates
        {
            get
            {
                return _FilteredStates;
            }
            set
            {
                OnFilteredStatesChanging(value);
                ReportPropertyChanging("FilteredStates");
                _FilteredStates = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FilteredStates");
                OnFilteredStatesChanged();
            }
        }
        private global::System.String _FilteredStates;
        partial void OnFilteredStatesChanging(global::System.String value);
        partial void OnFilteredStatesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FilteredCountries
        {
            get
            {
                return _FilteredCountries;
            }
            set
            {
                OnFilteredCountriesChanging(value);
                ReportPropertyChanging("FilteredCountries");
                _FilteredCountries = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FilteredCountries");
                OnFilteredCountriesChanged();
            }
        }
        private global::System.String _FilteredCountries;
        partial void OnFilteredCountriesChanging(global::System.String value);
        partial void OnFilteredCountriesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FilteredKeywords
        {
            get
            {
                return _FilteredKeywords;
            }
            set
            {
                OnFilteredKeywordsChanging(value);
                ReportPropertyChanging("FilteredKeywords");
                _FilteredKeywords = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FilteredKeywords");
                OnFilteredKeywordsChanged();
            }
        }
        private global::System.String _FilteredKeywords;
        partial void OnFilteredKeywordsChanging(global::System.String value);
        partial void OnFilteredKeywordsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShowResponded
        {
            get
            {
                return _ShowResponded;
            }
            set
            {
                OnShowRespondedChanging(value);
                ReportPropertyChanging("ShowResponded");
                _ShowResponded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShowResponded");
                OnShowRespondedChanged();
            }
        }
        private global::System.Boolean _ShowResponded;
        partial void OnShowRespondedChanging(global::System.Boolean value);
        partial void OnShowRespondedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShowNotResponded
        {
            get
            {
                return _ShowNotResponded;
            }
            set
            {
                OnShowNotRespondedChanging(value);
                ReportPropertyChanging("ShowNotResponded");
                _ShowNotResponded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShowNotResponded");
                OnShowNotRespondedChanged();
            }
        }
        private global::System.Boolean _ShowNotResponded;
        partial void OnShowNotRespondedChanging(global::System.Boolean value);
        partial void OnShowNotRespondedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean FiltersEnabled
        {
            get
            {
                return _FiltersEnabled;
            }
            set
            {
                OnFiltersEnabledChanging(value);
                ReportPropertyChanging("FiltersEnabled");
                _FiltersEnabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FiltersEnabled");
                OnFiltersEnabledChanged();
            }
        }
        private global::System.Boolean _FiltersEnabled;
        partial void OnFiltersEnabledChanging(global::System.Boolean value);
        partial void OnFiltersEnabledChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_UserFilter_aspnet_Membership", "aspnet_Membership")]
        public aspnet_Membership aspnet_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserFilter_aspnet_Membership", "aspnet_Membership").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserFilter_aspnet_Membership", "aspnet_Membership").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Membership> aspnet_MembershipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserFilter_aspnet_Membership", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserFilter_aspnet_Membership", "aspnet_Membership", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Marketing.CraigslistScraperModel", Name="UserKeyword")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserKeyword : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserKeyword object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="keyword">Initial value of the Keyword property.</param>
        /// <param name="weightedScore">Initial value of the WeightedScore property.</param>
        public static UserKeyword CreateUserKeyword(global::System.Guid id, global::System.Guid userId, global::System.String keyword, global::System.Int32 weightedScore)
        {
            UserKeyword userKeyword = new UserKeyword();
            userKeyword.Id = id;
            userKeyword.UserId = userId;
            userKeyword.Keyword = keyword;
            userKeyword.WeightedScore = weightedScore;
            return userKeyword;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Keyword
        {
            get
            {
                return _Keyword;
            }
            set
            {
                OnKeywordChanging(value);
                ReportPropertyChanging("Keyword");
                _Keyword = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Keyword");
                OnKeywordChanged();
            }
        }
        private global::System.String _Keyword;
        partial void OnKeywordChanging(global::System.String value);
        partial void OnKeywordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WeightedScore
        {
            get
            {
                return _WeightedScore;
            }
            set
            {
                OnWeightedScoreChanging(value);
                ReportPropertyChanging("WeightedScore");
                _WeightedScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WeightedScore");
                OnWeightedScoreChanged();
            }
        }
        private global::System.Int32 _WeightedScore;
        partial void OnWeightedScoreChanging(global::System.Int32 value);
        partial void OnWeightedScoreChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_UserKeyword_aspnet_Membership", "aspnet_Membership")]
        public aspnet_Membership aspnet_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserKeyword_aspnet_Membership", "aspnet_Membership").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserKeyword_aspnet_Membership", "aspnet_Membership").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Membership> aspnet_MembershipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserKeyword_aspnet_Membership", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserKeyword_aspnet_Membership", "aspnet_Membership", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Marketing.CraigslistScraperModel", Name="UserListingCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserListingCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserListingCategory object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="listingCategoryId">Initial value of the ListingCategoryId property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static UserListingCategory CreateUserListingCategory(global::System.Guid id, global::System.Guid userId, global::System.Guid listingCategoryId, global::System.Boolean active)
        {
            UserListingCategory userListingCategory = new UserListingCategory();
            userListingCategory.Id = id;
            userListingCategory.UserId = userId;
            userListingCategory.ListingCategoryId = listingCategoryId;
            userListingCategory.Active = active;
            return userListingCategory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ListingCategoryId
        {
            get
            {
                return _ListingCategoryId;
            }
            set
            {
                OnListingCategoryIdChanging(value);
                ReportPropertyChanging("ListingCategoryId");
                _ListingCategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListingCategoryId");
                OnListingCategoryIdChanged();
            }
        }
        private global::System.Guid _ListingCategoryId;
        partial void OnListingCategoryIdChanging(global::System.Guid value);
        partial void OnListingCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_UserListingCategory_aspnet_Membership", "aspnet_Membership")]
        public aspnet_Membership aspnet_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserListingCategory_aspnet_Membership", "aspnet_Membership").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserListingCategory_aspnet_Membership", "aspnet_Membership").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Membership> aspnet_MembershipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserListingCategory_aspnet_Membership", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserListingCategory_aspnet_Membership", "aspnet_Membership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_UserListingCategory_ListingCategory", "ListingCategory")]
        public ListingCategory ListingCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListingCategory>("Marketing.CraigslistScraperModel.FK_UserListingCategory_ListingCategory", "ListingCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListingCategory>("Marketing.CraigslistScraperModel.FK_UserListingCategory_ListingCategory", "ListingCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ListingCategory> ListingCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListingCategory>("Marketing.CraigslistScraperModel.FK_UserListingCategory_ListingCategory", "ListingCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ListingCategory>("Marketing.CraigslistScraperModel.FK_UserListingCategory_ListingCategory", "ListingCategory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Marketing.CraigslistScraperModel", Name="UserListingData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserListingData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserListingData object.
        /// </summary>
        /// <param name="userListingUrlId">Initial value of the UserListingUrlId property.</param>
        /// <param name="listingUrlId">Initial value of the ListingUrlId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="url">Initial value of the Url property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="postId">Initial value of the PostId property.</param>
        /// <param name="listingUrlCreated">Initial value of the ListingUrlCreated property.</param>
        /// <param name="listingCategoryName">Initial value of the ListingCategoryName property.</param>
        /// <param name="categoryBaseUrl">Initial value of the CategoryBaseUrl property.</param>
        /// <param name="listingCategoryActive">Initial value of the ListingCategoryActive property.</param>
        /// <param name="listingGroupName">Initial value of the ListingGroupName property.</param>
        /// <param name="listingBaseUrl">Initial value of the ListingBaseUrl property.</param>
        /// <param name="listingGroupActive">Initial value of the ListingGroupActive property.</param>
        /// <param name="regionName">Initial value of the RegionName property.</param>
        /// <param name="cityName">Initial value of the CityName property.</param>
        /// <param name="cityBaseUrl">Initial value of the CityBaseUrl property.</param>
        /// <param name="cityActive">Initial value of the CityActive property.</param>
        /// <param name="userListingCategoryActive">Initial value of the UserListingCategoryActive property.</param>
        /// <param name="userCityActive">Initial value of the UserCityActive property.</param>
        /// <param name="cityId">Initial value of the CityId property.</param>
        /// <param name="userListingCategoryId">Initial value of the UserListingCategoryId property.</param>
        /// <param name="userCityId">Initial value of the UserCityId property.</param>
        /// <param name="listingCategoryId">Initial value of the ListingCategoryId property.</param>
        /// <param name="listingGroupId">Initial value of the ListingGroupId property.</param>
        /// <param name="listingContentId">Initial value of the ListingContentId property.</param>
        /// <param name="postDate">Initial value of the PostDate property.</param>
        /// <param name="replyTo">Initial value of the ReplyTo property.</param>
        /// <param name="listingContentCreated">Initial value of the ListingContentCreated property.</param>
        /// <param name="isHidden">Initial value of the IsHidden property.</param>
        public static UserListingData CreateUserListingData(global::System.Guid userListingUrlId, global::System.Guid listingUrlId, global::System.Guid userId, global::System.String url, global::System.String title, global::System.Int64 postId, global::System.DateTime listingUrlCreated, global::System.String listingCategoryName, global::System.String categoryBaseUrl, global::System.Boolean listingCategoryActive, global::System.String listingGroupName, global::System.String listingBaseUrl, global::System.Boolean listingGroupActive, global::System.String regionName, global::System.String cityName, global::System.String cityBaseUrl, global::System.Boolean cityActive, global::System.Boolean userListingCategoryActive, global::System.Boolean userCityActive, global::System.Guid cityId, global::System.Guid userListingCategoryId, global::System.Guid userCityId, global::System.Guid listingCategoryId, global::System.Guid listingGroupId, global::System.Guid listingContentId, global::System.DateTime postDate, global::System.String replyTo, global::System.DateTime listingContentCreated, global::System.Boolean isHidden)
        {
            UserListingData userListingData = new UserListingData();
            userListingData.UserListingUrlId = userListingUrlId;
            userListingData.ListingUrlId = listingUrlId;
            userListingData.UserId = userId;
            userListingData.Url = url;
            userListingData.Title = title;
            userListingData.PostId = postId;
            userListingData.ListingUrlCreated = listingUrlCreated;
            userListingData.ListingCategoryName = listingCategoryName;
            userListingData.CategoryBaseUrl = categoryBaseUrl;
            userListingData.ListingCategoryActive = listingCategoryActive;
            userListingData.ListingGroupName = listingGroupName;
            userListingData.ListingBaseUrl = listingBaseUrl;
            userListingData.ListingGroupActive = listingGroupActive;
            userListingData.RegionName = regionName;
            userListingData.CityName = cityName;
            userListingData.CityBaseUrl = cityBaseUrl;
            userListingData.CityActive = cityActive;
            userListingData.UserListingCategoryActive = userListingCategoryActive;
            userListingData.UserCityActive = userCityActive;
            userListingData.CityId = cityId;
            userListingData.UserListingCategoryId = userListingCategoryId;
            userListingData.UserCityId = userCityId;
            userListingData.ListingCategoryId = listingCategoryId;
            userListingData.ListingGroupId = listingGroupId;
            userListingData.ListingContentId = listingContentId;
            userListingData.PostDate = postDate;
            userListingData.ReplyTo = replyTo;
            userListingData.ListingContentCreated = listingContentCreated;
            userListingData.IsHidden = isHidden;
            return userListingData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserListingUrlId
        {
            get
            {
                return _UserListingUrlId;
            }
            set
            {
                if (_UserListingUrlId != value)
                {
                    OnUserListingUrlIdChanging(value);
                    ReportPropertyChanging("UserListingUrlId");
                    _UserListingUrlId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserListingUrlId");
                    OnUserListingUrlIdChanged();
                }
            }
        }
        private global::System.Guid _UserListingUrlId;
        partial void OnUserListingUrlIdChanging(global::System.Guid value);
        partial void OnUserListingUrlIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ListingUrlId
        {
            get
            {
                return _ListingUrlId;
            }
            set
            {
                if (_ListingUrlId != value)
                {
                    OnListingUrlIdChanging(value);
                    ReportPropertyChanging("ListingUrlId");
                    _ListingUrlId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListingUrlId");
                    OnListingUrlIdChanged();
                }
            }
        }
        private global::System.Guid _ListingUrlId;
        partial void OnListingUrlIdChanging(global::System.Guid value);
        partial void OnListingUrlIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                if (_Url != value)
                {
                    OnUrlChanging(value);
                    ReportPropertyChanging("Url");
                    _Url = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Url");
                    OnUrlChanged();
                }
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                if (_Title != value)
                {
                    OnTitleChanging(value);
                    ReportPropertyChanging("Title");
                    _Title = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Title");
                    OnTitleChanged();
                }
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PostId
        {
            get
            {
                return _PostId;
            }
            set
            {
                if (_PostId != value)
                {
                    OnPostIdChanging(value);
                    ReportPropertyChanging("PostId");
                    _PostId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PostId");
                    OnPostIdChanged();
                }
            }
        }
        private global::System.Int64 _PostId;
        partial void OnPostIdChanging(global::System.Int64 value);
        partial void OnPostIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ListingUrlCreated
        {
            get
            {
                return _ListingUrlCreated;
            }
            set
            {
                if (_ListingUrlCreated != value)
                {
                    OnListingUrlCreatedChanging(value);
                    ReportPropertyChanging("ListingUrlCreated");
                    _ListingUrlCreated = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListingUrlCreated");
                    OnListingUrlCreatedChanged();
                }
            }
        }
        private global::System.DateTime _ListingUrlCreated;
        partial void OnListingUrlCreatedChanging(global::System.DateTime value);
        partial void OnListingUrlCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ListingCategoryName
        {
            get
            {
                return _ListingCategoryName;
            }
            set
            {
                if (_ListingCategoryName != value)
                {
                    OnListingCategoryNameChanging(value);
                    ReportPropertyChanging("ListingCategoryName");
                    _ListingCategoryName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ListingCategoryName");
                    OnListingCategoryNameChanged();
                }
            }
        }
        private global::System.String _ListingCategoryName;
        partial void OnListingCategoryNameChanging(global::System.String value);
        partial void OnListingCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryBaseUrl
        {
            get
            {
                return _CategoryBaseUrl;
            }
            set
            {
                if (_CategoryBaseUrl != value)
                {
                    OnCategoryBaseUrlChanging(value);
                    ReportPropertyChanging("CategoryBaseUrl");
                    _CategoryBaseUrl = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CategoryBaseUrl");
                    OnCategoryBaseUrlChanged();
                }
            }
        }
        private global::System.String _CategoryBaseUrl;
        partial void OnCategoryBaseUrlChanging(global::System.String value);
        partial void OnCategoryBaseUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ListingCategoryActive
        {
            get
            {
                return _ListingCategoryActive;
            }
            set
            {
                if (_ListingCategoryActive != value)
                {
                    OnListingCategoryActiveChanging(value);
                    ReportPropertyChanging("ListingCategoryActive");
                    _ListingCategoryActive = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListingCategoryActive");
                    OnListingCategoryActiveChanged();
                }
            }
        }
        private global::System.Boolean _ListingCategoryActive;
        partial void OnListingCategoryActiveChanging(global::System.Boolean value);
        partial void OnListingCategoryActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ListingGroupName
        {
            get
            {
                return _ListingGroupName;
            }
            set
            {
                if (_ListingGroupName != value)
                {
                    OnListingGroupNameChanging(value);
                    ReportPropertyChanging("ListingGroupName");
                    _ListingGroupName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ListingGroupName");
                    OnListingGroupNameChanged();
                }
            }
        }
        private global::System.String _ListingGroupName;
        partial void OnListingGroupNameChanging(global::System.String value);
        partial void OnListingGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ListingBaseUrl
        {
            get
            {
                return _ListingBaseUrl;
            }
            set
            {
                if (_ListingBaseUrl != value)
                {
                    OnListingBaseUrlChanging(value);
                    ReportPropertyChanging("ListingBaseUrl");
                    _ListingBaseUrl = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ListingBaseUrl");
                    OnListingBaseUrlChanged();
                }
            }
        }
        private global::System.String _ListingBaseUrl;
        partial void OnListingBaseUrlChanging(global::System.String value);
        partial void OnListingBaseUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ListingGroupActive
        {
            get
            {
                return _ListingGroupActive;
            }
            set
            {
                if (_ListingGroupActive != value)
                {
                    OnListingGroupActiveChanging(value);
                    ReportPropertyChanging("ListingGroupActive");
                    _ListingGroupActive = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListingGroupActive");
                    OnListingGroupActiveChanged();
                }
            }
        }
        private global::System.Boolean _ListingGroupActive;
        partial void OnListingGroupActiveChanging(global::System.Boolean value);
        partial void OnListingGroupActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RegionName
        {
            get
            {
                return _RegionName;
            }
            set
            {
                if (_RegionName != value)
                {
                    OnRegionNameChanging(value);
                    ReportPropertyChanging("RegionName");
                    _RegionName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("RegionName");
                    OnRegionNameChanged();
                }
            }
        }
        private global::System.String _RegionName;
        partial void OnRegionNameChanging(global::System.String value);
        partial void OnRegionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StateProvince
        {
            get
            {
                return _StateProvince;
            }
            set
            {
                OnStateProvinceChanging(value);
                ReportPropertyChanging("StateProvince");
                _StateProvince = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StateProvince");
                OnStateProvinceChanged();
            }
        }
        private global::System.String _StateProvince;
        partial void OnStateProvinceChanging(global::System.String value);
        partial void OnStateProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CityName
        {
            get
            {
                return _CityName;
            }
            set
            {
                if (_CityName != value)
                {
                    OnCityNameChanging(value);
                    ReportPropertyChanging("CityName");
                    _CityName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CityName");
                    OnCityNameChanged();
                }
            }
        }
        private global::System.String _CityName;
        partial void OnCityNameChanging(global::System.String value);
        partial void OnCityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CityBaseUrl
        {
            get
            {
                return _CityBaseUrl;
            }
            set
            {
                if (_CityBaseUrl != value)
                {
                    OnCityBaseUrlChanging(value);
                    ReportPropertyChanging("CityBaseUrl");
                    _CityBaseUrl = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CityBaseUrl");
                    OnCityBaseUrlChanged();
                }
            }
        }
        private global::System.String _CityBaseUrl;
        partial void OnCityBaseUrlChanging(global::System.String value);
        partial void OnCityBaseUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CityActive
        {
            get
            {
                return _CityActive;
            }
            set
            {
                if (_CityActive != value)
                {
                    OnCityActiveChanging(value);
                    ReportPropertyChanging("CityActive");
                    _CityActive = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CityActive");
                    OnCityActiveChanged();
                }
            }
        }
        private global::System.Boolean _CityActive;
        partial void OnCityActiveChanging(global::System.Boolean value);
        partial void OnCityActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Response
        {
            get
            {
                return _Response;
            }
            set
            {
                OnResponseChanging(value);
                ReportPropertyChanging("Response");
                _Response = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Response");
                OnResponseChanged();
            }
        }
        private global::System.String _Response;
        partial void OnResponseChanging(global::System.String value);
        partial void OnResponseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResponseText
        {
            get
            {
                return _ResponseText;
            }
            set
            {
                OnResponseTextChanging(value);
                ReportPropertyChanging("ResponseText");
                _ResponseText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResponseText");
                OnResponseTextChanged();
            }
        }
        private global::System.String _ResponseText;
        partial void OnResponseTextChanging(global::System.String value);
        partial void OnResponseTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ResponseSent
        {
            get
            {
                return _ResponseSent;
            }
            set
            {
                OnResponseSentChanging(value);
                ReportPropertyChanging("ResponseSent");
                _ResponseSent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResponseSent");
                OnResponseSentChanged();
            }
        }
        private Nullable<global::System.DateTime> _ResponseSent;
        partial void OnResponseSentChanging(Nullable<global::System.DateTime> value);
        partial void OnResponseSentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean UserListingCategoryActive
        {
            get
            {
                return _UserListingCategoryActive;
            }
            set
            {
                if (_UserListingCategoryActive != value)
                {
                    OnUserListingCategoryActiveChanging(value);
                    ReportPropertyChanging("UserListingCategoryActive");
                    _UserListingCategoryActive = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserListingCategoryActive");
                    OnUserListingCategoryActiveChanged();
                }
            }
        }
        private global::System.Boolean _UserListingCategoryActive;
        partial void OnUserListingCategoryActiveChanging(global::System.Boolean value);
        partial void OnUserListingCategoryActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean UserCityActive
        {
            get
            {
                return _UserCityActive;
            }
            set
            {
                if (_UserCityActive != value)
                {
                    OnUserCityActiveChanging(value);
                    ReportPropertyChanging("UserCityActive");
                    _UserCityActive = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserCityActive");
                    OnUserCityActiveChanged();
                }
            }
        }
        private global::System.Boolean _UserCityActive;
        partial void OnUserCityActiveChanging(global::System.Boolean value);
        partial void OnUserCityActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Responded
        {
            get
            {
                return _Responded;
            }
            set
            {
                OnRespondedChanging(value);
                ReportPropertyChanging("Responded");
                _Responded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Responded");
                OnRespondedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Responded;
        partial void OnRespondedChanging(Nullable<global::System.DateTime> value);
        partial void OnRespondedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                if (_CityId != value)
                {
                    OnCityIdChanging(value);
                    ReportPropertyChanging("CityId");
                    _CityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CityId");
                    OnCityIdChanged();
                }
            }
        }
        private global::System.Guid _CityId;
        partial void OnCityIdChanging(global::System.Guid value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserListingCategoryId
        {
            get
            {
                return _UserListingCategoryId;
            }
            set
            {
                if (_UserListingCategoryId != value)
                {
                    OnUserListingCategoryIdChanging(value);
                    ReportPropertyChanging("UserListingCategoryId");
                    _UserListingCategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserListingCategoryId");
                    OnUserListingCategoryIdChanged();
                }
            }
        }
        private global::System.Guid _UserListingCategoryId;
        partial void OnUserListingCategoryIdChanging(global::System.Guid value);
        partial void OnUserListingCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserCityId
        {
            get
            {
                return _UserCityId;
            }
            set
            {
                if (_UserCityId != value)
                {
                    OnUserCityIdChanging(value);
                    ReportPropertyChanging("UserCityId");
                    _UserCityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserCityId");
                    OnUserCityIdChanged();
                }
            }
        }
        private global::System.Guid _UserCityId;
        partial void OnUserCityIdChanging(global::System.Guid value);
        partial void OnUserCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ListingCategoryId
        {
            get
            {
                return _ListingCategoryId;
            }
            set
            {
                if (_ListingCategoryId != value)
                {
                    OnListingCategoryIdChanging(value);
                    ReportPropertyChanging("ListingCategoryId");
                    _ListingCategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListingCategoryId");
                    OnListingCategoryIdChanged();
                }
            }
        }
        private global::System.Guid _ListingCategoryId;
        partial void OnListingCategoryIdChanging(global::System.Guid value);
        partial void OnListingCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ListingGroupId
        {
            get
            {
                return _ListingGroupId;
            }
            set
            {
                if (_ListingGroupId != value)
                {
                    OnListingGroupIdChanging(value);
                    ReportPropertyChanging("ListingGroupId");
                    _ListingGroupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListingGroupId");
                    OnListingGroupIdChanged();
                }
            }
        }
        private global::System.Guid _ListingGroupId;
        partial void OnListingGroupIdChanging(global::System.Guid value);
        partial void OnListingGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserListingResponseId
        {
            get
            {
                return _UserListingResponseId;
            }
            set
            {
                OnUserListingResponseIdChanging(value);
                ReportPropertyChanging("UserListingResponseId");
                _UserListingResponseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserListingResponseId");
                OnUserListingResponseIdChanged();
            }
        }
        private Nullable<global::System.Guid> _UserListingResponseId;
        partial void OnUserListingResponseIdChanging(Nullable<global::System.Guid> value);
        partial void OnUserListingResponseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ListingContentId
        {
            get
            {
                return _ListingContentId;
            }
            set
            {
                if (_ListingContentId != value)
                {
                    OnListingContentIdChanging(value);
                    ReportPropertyChanging("ListingContentId");
                    _ListingContentId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListingContentId");
                    OnListingContentIdChanged();
                }
            }
        }
        private global::System.Guid _ListingContentId;
        partial void OnListingContentIdChanging(global::System.Guid value);
        partial void OnListingContentIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostText
        {
            get
            {
                return _PostText;
            }
            set
            {
                OnPostTextChanging(value);
                ReportPropertyChanging("PostText");
                _PostText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostText");
                OnPostTextChanged();
            }
        }
        private global::System.String _PostText;
        partial void OnPostTextChanging(global::System.String value);
        partial void OnPostTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostContent
        {
            get
            {
                return _PostContent;
            }
            set
            {
                OnPostContentChanging(value);
                ReportPropertyChanging("PostContent");
                _PostContent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostContent");
                OnPostContentChanged();
            }
        }
        private global::System.String _PostContent;
        partial void OnPostContentChanging(global::System.String value);
        partial void OnPostContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostElement
        {
            get
            {
                return _PostElement;
            }
            set
            {
                OnPostElementChanging(value);
                ReportPropertyChanging("PostElement");
                _PostElement = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostElement");
                OnPostElementChanged();
            }
        }
        private global::System.String _PostElement;
        partial void OnPostElementChanging(global::System.String value);
        partial void OnPostElementChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PostDate
        {
            get
            {
                return _PostDate;
            }
            set
            {
                if (_PostDate != value)
                {
                    OnPostDateChanging(value);
                    ReportPropertyChanging("PostDate");
                    _PostDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PostDate");
                    OnPostDateChanged();
                }
            }
        }
        private global::System.DateTime _PostDate;
        partial void OnPostDateChanging(global::System.DateTime value);
        partial void OnPostDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReplyTo
        {
            get
            {
                return _ReplyTo;
            }
            set
            {
                if (_ReplyTo != value)
                {
                    OnReplyToChanging(value);
                    ReportPropertyChanging("ReplyTo");
                    _ReplyTo = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ReplyTo");
                    OnReplyToChanged();
                }
            }
        }
        private global::System.String _ReplyTo;
        partial void OnReplyToChanging(global::System.String value);
        partial void OnReplyToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ListingContentCreated
        {
            get
            {
                return _ListingContentCreated;
            }
            set
            {
                if (_ListingContentCreated != value)
                {
                    OnListingContentCreatedChanging(value);
                    ReportPropertyChanging("ListingContentCreated");
                    _ListingContentCreated = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListingContentCreated");
                    OnListingContentCreatedChanged();
                }
            }
        }
        private global::System.DateTime _ListingContentCreated;
        partial void OnListingContentCreatedChanging(global::System.DateTime value);
        partial void OnListingContentCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> KeywordScore
        {
            get
            {
                return _KeywordScore;
            }
            set
            {
                OnKeywordScoreChanging(value);
                ReportPropertyChanging("KeywordScore");
                _KeywordScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KeywordScore");
                OnKeywordScoreChanged();
            }
        }
        private Nullable<global::System.Int32> _KeywordScore;
        partial void OnKeywordScoreChanging(Nullable<global::System.Int32> value);
        partial void OnKeywordScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String KeywordDisplay
        {
            get
            {
                return _KeywordDisplay;
            }
            set
            {
                OnKeywordDisplayChanging(value);
                ReportPropertyChanging("KeywordDisplay");
                _KeywordDisplay = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("KeywordDisplay");
                OnKeywordDisplayChanged();
            }
        }
        private global::System.String _KeywordDisplay;
        partial void OnKeywordDisplayChanging(global::System.String value);
        partial void OnKeywordDisplayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsHidden
        {
            get
            {
                return _IsHidden;
            }
            set
            {
                if (_IsHidden != value)
                {
                    OnIsHiddenChanging(value);
                    ReportPropertyChanging("IsHidden");
                    _IsHidden = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsHidden");
                    OnIsHiddenChanged();
                }
            }
        }
        private global::System.Boolean _IsHidden;
        partial void OnIsHiddenChanging(global::System.Boolean value);
        partial void OnIsHiddenChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Marketing.CraigslistScraperModel", Name="UserListingKeywordScore")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserListingKeywordScore : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserListingKeywordScore object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userListingId">Initial value of the UserListingId property.</param>
        /// <param name="keywordScore">Initial value of the KeywordScore property.</param>
        public static UserListingKeywordScore CreateUserListingKeywordScore(global::System.Guid id, global::System.Guid userId, global::System.Guid userListingId, global::System.Int32 keywordScore)
        {
            UserListingKeywordScore userListingKeywordScore = new UserListingKeywordScore();
            userListingKeywordScore.Id = id;
            userListingKeywordScore.UserId = userId;
            userListingKeywordScore.UserListingId = userListingId;
            userListingKeywordScore.KeywordScore = keywordScore;
            return userListingKeywordScore;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserListingId
        {
            get
            {
                return _UserListingId;
            }
            set
            {
                OnUserListingIdChanging(value);
                ReportPropertyChanging("UserListingId");
                _UserListingId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserListingId");
                OnUserListingIdChanged();
            }
        }
        private global::System.Guid _UserListingId;
        partial void OnUserListingIdChanging(global::System.Guid value);
        partial void OnUserListingIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 KeywordScore
        {
            get
            {
                return _KeywordScore;
            }
            set
            {
                OnKeywordScoreChanging(value);
                ReportPropertyChanging("KeywordScore");
                _KeywordScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KeywordScore");
                OnKeywordScoreChanged();
            }
        }
        private global::System.Int32 _KeywordScore;
        partial void OnKeywordScoreChanging(global::System.Int32 value);
        partial void OnKeywordScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String KeywordDisplay
        {
            get
            {
                return _KeywordDisplay;
            }
            set
            {
                OnKeywordDisplayChanging(value);
                ReportPropertyChanging("KeywordDisplay");
                _KeywordDisplay = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("KeywordDisplay");
                OnKeywordDisplayChanged();
            }
        }
        private global::System.String _KeywordDisplay;
        partial void OnKeywordDisplayChanging(global::System.String value);
        partial void OnKeywordDisplayChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_UserListingKeywordScore_aspnet_Membership", "aspnet_Membership")]
        public aspnet_Membership aspnet_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserListingKeywordScore_aspnet_Membership", "aspnet_Membership").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserListingKeywordScore_aspnet_Membership", "aspnet_Membership").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Membership> aspnet_MembershipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserListingKeywordScore_aspnet_Membership", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserListingKeywordScore_aspnet_Membership", "aspnet_Membership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_UserListingKeywordScore_UserListingUrl", "UserListingUrl")]
        public UserListingUrl UserListingUrl
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserListingUrl>("Marketing.CraigslistScraperModel.FK_UserListingKeywordScore_UserListingUrl", "UserListingUrl").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserListingUrl>("Marketing.CraigslistScraperModel.FK_UserListingKeywordScore_UserListingUrl", "UserListingUrl").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserListingUrl> UserListingUrlReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserListingUrl>("Marketing.CraigslistScraperModel.FK_UserListingKeywordScore_UserListingUrl", "UserListingUrl");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserListingUrl>("Marketing.CraigslistScraperModel.FK_UserListingKeywordScore_UserListingUrl", "UserListingUrl", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Marketing.CraigslistScraperModel", Name="UserListingRefresh")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserListingRefresh : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserListingRefresh object.
        /// </summary>
        /// <param name="listingUrl">Initial value of the ListingUrl property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="listingCategoryId">Initial value of the ListingCategoryId property.</param>
        /// <param name="listingGroupId">Initial value of the ListingGroupId property.</param>
        /// <param name="cityId">Initial value of the CityId property.</param>
        public static UserListingRefresh CreateUserListingRefresh(global::System.String listingUrl, global::System.Guid userId, global::System.Guid listingCategoryId, global::System.Guid listingGroupId, global::System.Guid cityId)
        {
            UserListingRefresh userListingRefresh = new UserListingRefresh();
            userListingRefresh.ListingUrl = listingUrl;
            userListingRefresh.UserId = userId;
            userListingRefresh.ListingCategoryId = listingCategoryId;
            userListingRefresh.ListingGroupId = listingGroupId;
            userListingRefresh.CityId = cityId;
            return userListingRefresh;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ListingUrl
        {
            get
            {
                return _ListingUrl;
            }
            set
            {
                if (_ListingUrl != value)
                {
                    OnListingUrlChanging(value);
                    ReportPropertyChanging("ListingUrl");
                    _ListingUrl = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ListingUrl");
                    OnListingUrlChanged();
                }
            }
        }
        private global::System.String _ListingUrl;
        partial void OnListingUrlChanging(global::System.String value);
        partial void OnListingUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ListingCategoryId
        {
            get
            {
                return _ListingCategoryId;
            }
            set
            {
                if (_ListingCategoryId != value)
                {
                    OnListingCategoryIdChanging(value);
                    ReportPropertyChanging("ListingCategoryId");
                    _ListingCategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListingCategoryId");
                    OnListingCategoryIdChanged();
                }
            }
        }
        private global::System.Guid _ListingCategoryId;
        partial void OnListingCategoryIdChanging(global::System.Guid value);
        partial void OnListingCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ListingGroupId
        {
            get
            {
                return _ListingGroupId;
            }
            set
            {
                if (_ListingGroupId != value)
                {
                    OnListingGroupIdChanging(value);
                    ReportPropertyChanging("ListingGroupId");
                    _ListingGroupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ListingGroupId");
                    OnListingGroupIdChanged();
                }
            }
        }
        private global::System.Guid _ListingGroupId;
        partial void OnListingGroupIdChanging(global::System.Guid value);
        partial void OnListingGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                if (_CityId != value)
                {
                    OnCityIdChanging(value);
                    ReportPropertyChanging("CityId");
                    _CityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CityId");
                    OnCityIdChanged();
                }
            }
        }
        private global::System.Guid _CityId;
        partial void OnCityIdChanging(global::System.Guid value);
        partial void OnCityIdChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Marketing.CraigslistScraperModel", Name="UserListingResponse")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserListingResponse : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserListingResponse object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userListingUrlId">Initial value of the UserListingUrlId property.</param>
        /// <param name="response">Initial value of the Response property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="responseText">Initial value of the ResponseText property.</param>
        public static UserListingResponse CreateUserListingResponse(global::System.Guid id, global::System.Guid userListingUrlId, global::System.String response, global::System.DateTime created, global::System.String responseText)
        {
            UserListingResponse userListingResponse = new UserListingResponse();
            userListingResponse.Id = id;
            userListingResponse.UserListingUrlId = userListingUrlId;
            userListingResponse.Response = response;
            userListingResponse.Created = created;
            userListingResponse.ResponseText = responseText;
            return userListingResponse;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserListingUrlId
        {
            get
            {
                return _UserListingUrlId;
            }
            set
            {
                OnUserListingUrlIdChanging(value);
                ReportPropertyChanging("UserListingUrlId");
                _UserListingUrlId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserListingUrlId");
                OnUserListingUrlIdChanged();
            }
        }
        private global::System.Guid _UserListingUrlId;
        partial void OnUserListingUrlIdChanging(global::System.Guid value);
        partial void OnUserListingUrlIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Response
        {
            get
            {
                return _Response;
            }
            set
            {
                OnResponseChanging(value);
                ReportPropertyChanging("Response");
                _Response = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Response");
                OnResponseChanged();
            }
        }
        private global::System.String _Response;
        partial void OnResponseChanging(global::System.String value);
        partial void OnResponseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ResponseSent
        {
            get
            {
                return _ResponseSent;
            }
            set
            {
                OnResponseSentChanging(value);
                ReportPropertyChanging("ResponseSent");
                _ResponseSent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResponseSent");
                OnResponseSentChanged();
            }
        }
        private Nullable<global::System.DateTime> _ResponseSent;
        partial void OnResponseSentChanging(Nullable<global::System.DateTime> value);
        partial void OnResponseSentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ResponseText
        {
            get
            {
                return _ResponseText;
            }
            set
            {
                OnResponseTextChanging(value);
                ReportPropertyChanging("ResponseText");
                _ResponseText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ResponseText");
                OnResponseTextChanged();
            }
        }
        private global::System.String _ResponseText;
        partial void OnResponseTextChanging(global::System.String value);
        partial void OnResponseTextChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_UserListingResponse_UserListingUrl", "UserListingUrl")]
        public UserListingUrl UserListingUrl
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserListingUrl>("Marketing.CraigslistScraperModel.FK_UserListingResponse_UserListingUrl", "UserListingUrl").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserListingUrl>("Marketing.CraigslistScraperModel.FK_UserListingResponse_UserListingUrl", "UserListingUrl").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserListingUrl> UserListingUrlReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserListingUrl>("Marketing.CraigslistScraperModel.FK_UserListingResponse_UserListingUrl", "UserListingUrl");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserListingUrl>("Marketing.CraigslistScraperModel.FK_UserListingResponse_UserListingUrl", "UserListingUrl", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Marketing.CraigslistScraperModel", Name="UserListingUrl")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserListingUrl : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserListingUrl object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="listingUrlId">Initial value of the ListingUrlId property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        /// <param name="isHidden">Initial value of the IsHidden property.</param>
        public static UserListingUrl CreateUserListingUrl(global::System.Guid id, global::System.Guid userId, global::System.Guid listingUrlId, global::System.DateTime created, global::System.Boolean isHidden)
        {
            UserListingUrl userListingUrl = new UserListingUrl();
            userListingUrl.Id = id;
            userListingUrl.UserId = userId;
            userListingUrl.ListingUrlId = listingUrlId;
            userListingUrl.Created = created;
            userListingUrl.IsHidden = isHidden;
            return userListingUrl;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ListingUrlId
        {
            get
            {
                return _ListingUrlId;
            }
            set
            {
                OnListingUrlIdChanging(value);
                ReportPropertyChanging("ListingUrlId");
                _ListingUrlId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListingUrlId");
                OnListingUrlIdChanged();
            }
        }
        private global::System.Guid _ListingUrlId;
        partial void OnListingUrlIdChanging(global::System.Guid value);
        partial void OnListingUrlIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsHidden
        {
            get
            {
                return _IsHidden;
            }
            set
            {
                OnIsHiddenChanging(value);
                ReportPropertyChanging("IsHidden");
                _IsHidden = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsHidden");
                OnIsHiddenChanged();
            }
        }
        private global::System.Boolean _IsHidden;
        partial void OnIsHiddenChanging(global::System.Boolean value);
        partial void OnIsHiddenChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_UserListingUrl_aspnet_Membership", "aspnet_Membership")]
        public aspnet_Membership aspnet_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserListingUrl_aspnet_Membership", "aspnet_Membership").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserListingUrl_aspnet_Membership", "aspnet_Membership").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Membership> aspnet_MembershipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserListingUrl_aspnet_Membership", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserListingUrl_aspnet_Membership", "aspnet_Membership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_UserListingUrl_ListingUrl", "ListingUrl")]
        public ListingUrl ListingUrl
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListingUrl>("Marketing.CraigslistScraperModel.FK_UserListingUrl_ListingUrl", "ListingUrl").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListingUrl>("Marketing.CraigslistScraperModel.FK_UserListingUrl_ListingUrl", "ListingUrl").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ListingUrl> ListingUrlReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListingUrl>("Marketing.CraigslistScraperModel.FK_UserListingUrl_ListingUrl", "ListingUrl");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ListingUrl>("Marketing.CraigslistScraperModel.FK_UserListingUrl_ListingUrl", "ListingUrl", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_UserListingResponse_UserListingUrl", "UserListingResponse")]
        public EntityCollection<UserListingResponse> UserListingResponses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserListingResponse>("Marketing.CraigslistScraperModel.FK_UserListingResponse_UserListingUrl", "UserListingResponse");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserListingResponse>("Marketing.CraigslistScraperModel.FK_UserListingResponse_UserListingUrl", "UserListingResponse", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_UserListingKeywordScore_UserListingUrl", "UserListingKeywordScore")]
        public EntityCollection<UserListingKeywordScore> UserListingKeywordScores
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserListingKeywordScore>("Marketing.CraigslistScraperModel.FK_UserListingKeywordScore_UserListingUrl", "UserListingKeywordScore");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserListingKeywordScore>("Marketing.CraigslistScraperModel.FK_UserListingKeywordScore_UserListingUrl", "UserListingKeywordScore", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Marketing.CraigslistScraperModel", Name="UserPreference")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserPreference : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserPreference object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="liveMode">Initial value of the LiveMode property.</param>
        /// <param name="bCCEmailAddress">Initial value of the BCCEmailAddress property.</param>
        /// <param name="sMTPPort">Initial value of the SMTPPort property.</param>
        /// <param name="requiresSSL">Initial value of the RequiresSSL property.</param>
        /// <param name="minimumKeywordScore">Initial value of the MinimumKeywordScore property.</param>
        public static UserPreference CreateUserPreference(global::System.Guid id, global::System.Guid userId, global::System.Boolean liveMode, global::System.String bCCEmailAddress, global::System.Int32 sMTPPort, global::System.Boolean requiresSSL, global::System.Int32 minimumKeywordScore)
        {
            UserPreference userPreference = new UserPreference();
            userPreference.Id = id;
            userPreference.UserId = userId;
            userPreference.LiveMode = liveMode;
            userPreference.BCCEmailAddress = bCCEmailAddress;
            userPreference.SMTPPort = sMTPPort;
            userPreference.RequiresSSL = requiresSSL;
            userPreference.MinimumKeywordScore = minimumKeywordScore;
            return userPreference;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean LiveMode
        {
            get
            {
                return _LiveMode;
            }
            set
            {
                OnLiveModeChanging(value);
                ReportPropertyChanging("LiveMode");
                _LiveMode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LiveMode");
                OnLiveModeChanged();
            }
        }
        private global::System.Boolean _LiveMode;
        partial void OnLiveModeChanging(global::System.Boolean value);
        partial void OnLiveModeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BCCEmailAddress
        {
            get
            {
                return _BCCEmailAddress;
            }
            set
            {
                OnBCCEmailAddressChanging(value);
                ReportPropertyChanging("BCCEmailAddress");
                _BCCEmailAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BCCEmailAddress");
                OnBCCEmailAddressChanged();
            }
        }
        private global::System.String _BCCEmailAddress;
        partial void OnBCCEmailAddressChanging(global::System.String value);
        partial void OnBCCEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SMTPUser
        {
            get
            {
                return _SMTPUser;
            }
            set
            {
                OnSMTPUserChanging(value);
                ReportPropertyChanging("SMTPUser");
                _SMTPUser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SMTPUser");
                OnSMTPUserChanged();
            }
        }
        private global::System.String _SMTPUser;
        partial void OnSMTPUserChanging(global::System.String value);
        partial void OnSMTPUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SMTPServer
        {
            get
            {
                return _SMTPServer;
            }
            set
            {
                OnSMTPServerChanging(value);
                ReportPropertyChanging("SMTPServer");
                _SMTPServer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SMTPServer");
                OnSMTPServerChanged();
            }
        }
        private global::System.String _SMTPServer;
        partial void OnSMTPServerChanging(global::System.String value);
        partial void OnSMTPServerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SMTPPort
        {
            get
            {
                return _SMTPPort;
            }
            set
            {
                OnSMTPPortChanging(value);
                ReportPropertyChanging("SMTPPort");
                _SMTPPort = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SMTPPort");
                OnSMTPPortChanged();
            }
        }
        private global::System.Int32 _SMTPPort;
        partial void OnSMTPPortChanging(global::System.Int32 value);
        partial void OnSMTPPortChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SMTPPassword
        {
            get
            {
                return _SMTPPassword;
            }
            set
            {
                OnSMTPPasswordChanging(value);
                ReportPropertyChanging("SMTPPassword");
                _SMTPPassword = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SMTPPassword");
                OnSMTPPasswordChanged();
            }
        }
        private global::System.String _SMTPPassword;
        partial void OnSMTPPasswordChanging(global::System.String value);
        partial void OnSMTPPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean RequiresSSL
        {
            get
            {
                return _RequiresSSL;
            }
            set
            {
                OnRequiresSSLChanging(value);
                ReportPropertyChanging("RequiresSSL");
                _RequiresSSL = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequiresSSL");
                OnRequiresSSLChanged();
            }
        }
        private global::System.Boolean _RequiresSSL;
        partial void OnRequiresSSLChanging(global::System.Boolean value);
        partial void OnRequiresSSLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MinimumKeywordScore
        {
            get
            {
                return _MinimumKeywordScore;
            }
            set
            {
                OnMinimumKeywordScoreChanging(value);
                ReportPropertyChanging("MinimumKeywordScore");
                _MinimumKeywordScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinimumKeywordScore");
                OnMinimumKeywordScoreChanged();
            }
        }
        private global::System.Int32 _MinimumKeywordScore;
        partial void OnMinimumKeywordScoreChanging(global::System.Int32 value);
        partial void OnMinimumKeywordScoreChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_UserPreference_aspnet_Membership", "aspnet_Membership")]
        public aspnet_Membership aspnet_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserPreference_aspnet_Membership", "aspnet_Membership").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserPreference_aspnet_Membership", "aspnet_Membership").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Membership> aspnet_MembershipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserPreference_aspnet_Membership", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserPreference_aspnet_Membership", "aspnet_Membership", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Marketing.CraigslistScraperModel", Name="UserTemplate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserTemplate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserTemplate object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="isDefault">Initial value of the IsDefault property.</param>
        /// <param name="templateName">Initial value of the TemplateName property.</param>
        /// <param name="templateHtml">Initial value of the TemplateHtml property.</param>
        /// <param name="templateText">Initial value of the TemplateText property.</param>
        /// <param name="created">Initial value of the Created property.</param>
        public static UserTemplate CreateUserTemplate(global::System.Guid id, global::System.Guid userId, global::System.Boolean isDefault, global::System.String templateName, global::System.String templateHtml, global::System.String templateText, global::System.DateTime created)
        {
            UserTemplate userTemplate = new UserTemplate();
            userTemplate.Id = id;
            userTemplate.UserId = userId;
            userTemplate.IsDefault = isDefault;
            userTemplate.TemplateName = templateName;
            userTemplate.TemplateHtml = templateHtml;
            userTemplate.TemplateText = templateText;
            userTemplate.Created = created;
            return userTemplate;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDefault
        {
            get
            {
                return _IsDefault;
            }
            set
            {
                OnIsDefaultChanging(value);
                ReportPropertyChanging("IsDefault");
                _IsDefault = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDefault");
                OnIsDefaultChanged();
            }
        }
        private global::System.Boolean _IsDefault;
        partial void OnIsDefaultChanging(global::System.Boolean value);
        partial void OnIsDefaultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TemplateName
        {
            get
            {
                return _TemplateName;
            }
            set
            {
                OnTemplateNameChanging(value);
                ReportPropertyChanging("TemplateName");
                _TemplateName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TemplateName");
                OnTemplateNameChanged();
            }
        }
        private global::System.String _TemplateName;
        partial void OnTemplateNameChanging(global::System.String value);
        partial void OnTemplateNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TemplateHtml
        {
            get
            {
                return _TemplateHtml;
            }
            set
            {
                OnTemplateHtmlChanging(value);
                ReportPropertyChanging("TemplateHtml");
                _TemplateHtml = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TemplateHtml");
                OnTemplateHtmlChanged();
            }
        }
        private global::System.String _TemplateHtml;
        partial void OnTemplateHtmlChanging(global::System.String value);
        partial void OnTemplateHtmlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TemplateText
        {
            get
            {
                return _TemplateText;
            }
            set
            {
                OnTemplateTextChanging(value);
                ReportPropertyChanging("TemplateText");
                _TemplateText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TemplateText");
                OnTemplateTextChanged();
            }
        }
        private global::System.String _TemplateText;
        partial void OnTemplateTextChanging(global::System.String value);
        partial void OnTemplateTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Created
        {
            get
            {
                return _Created;
            }
            set
            {
                OnCreatedChanging(value);
                ReportPropertyChanging("Created");
                _Created = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Created");
                OnCreatedChanged();
            }
        }
        private global::System.DateTime _Created;
        partial void OnCreatedChanging(global::System.DateTime value);
        partial void OnCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Updated
        {
            get
            {
                return _Updated;
            }
            set
            {
                OnUpdatedChanging(value);
                ReportPropertyChanging("Updated");
                _Updated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Updated");
                OnUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _Updated;
        partial void OnUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Marketing.CraigslistScraperModel", "FK_UserTemplate_aspnet_Membership", "aspnet_Membership")]
        public aspnet_Membership aspnet_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserTemplate_aspnet_Membership", "aspnet_Membership").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserTemplate_aspnet_Membership", "aspnet_Membership").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Membership> aspnet_MembershipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserTemplate_aspnet_Membership", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Membership>("Marketing.CraigslistScraperModel.FK_UserTemplate_aspnet_Membership", "aspnet_Membership", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Marketing.CraigslistScraperModel", Name="vw_aspnet_MembershipUsers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vw_aspnet_MembershipUsers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vw_aspnet_MembershipUsers object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="passwordFormat">Initial value of the PasswordFormat property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="isLockedOut">Initial value of the IsLockedOut property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="lastLoginDate">Initial value of the LastLoginDate property.</param>
        /// <param name="lastPasswordChangedDate">Initial value of the LastPasswordChangedDate property.</param>
        /// <param name="lastLockoutDate">Initial value of the LastLockoutDate property.</param>
        /// <param name="failedPasswordAttemptCount">Initial value of the FailedPasswordAttemptCount property.</param>
        /// <param name="failedPasswordAttemptWindowStart">Initial value of the FailedPasswordAttemptWindowStart property.</param>
        /// <param name="failedPasswordAnswerAttemptCount">Initial value of the FailedPasswordAnswerAttemptCount property.</param>
        /// <param name="failedPasswordAnswerAttemptWindowStart">Initial value of the FailedPasswordAnswerAttemptWindowStart property.</param>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static vw_aspnet_MembershipUsers Createvw_aspnet_MembershipUsers(global::System.Guid userId, global::System.Int32 passwordFormat, global::System.Boolean isApproved, global::System.Boolean isLockedOut, global::System.DateTime createDate, global::System.DateTime lastLoginDate, global::System.DateTime lastPasswordChangedDate, global::System.DateTime lastLockoutDate, global::System.Int32 failedPasswordAttemptCount, global::System.DateTime failedPasswordAttemptWindowStart, global::System.Int32 failedPasswordAnswerAttemptCount, global::System.DateTime failedPasswordAnswerAttemptWindowStart, global::System.Guid applicationId, global::System.String userName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate)
        {
            vw_aspnet_MembershipUsers vw_aspnet_MembershipUsers = new vw_aspnet_MembershipUsers();
            vw_aspnet_MembershipUsers.UserId = userId;
            vw_aspnet_MembershipUsers.PasswordFormat = passwordFormat;
            vw_aspnet_MembershipUsers.IsApproved = isApproved;
            vw_aspnet_MembershipUsers.IsLockedOut = isLockedOut;
            vw_aspnet_MembershipUsers.CreateDate = createDate;
            vw_aspnet_MembershipUsers.LastLoginDate = lastLoginDate;
            vw_aspnet_MembershipUsers.LastPasswordChangedDate = lastPasswordChangedDate;
            vw_aspnet_MembershipUsers.LastLockoutDate = lastLockoutDate;
            vw_aspnet_MembershipUsers.FailedPasswordAttemptCount = failedPasswordAttemptCount;
            vw_aspnet_MembershipUsers.FailedPasswordAttemptWindowStart = failedPasswordAttemptWindowStart;
            vw_aspnet_MembershipUsers.FailedPasswordAnswerAttemptCount = failedPasswordAnswerAttemptCount;
            vw_aspnet_MembershipUsers.FailedPasswordAnswerAttemptWindowStart = failedPasswordAnswerAttemptWindowStart;
            vw_aspnet_MembershipUsers.ApplicationId = applicationId;
            vw_aspnet_MembershipUsers.UserName = userName;
            vw_aspnet_MembershipUsers.IsAnonymous = isAnonymous;
            vw_aspnet_MembershipUsers.LastActivityDate = lastActivityDate;
            return vw_aspnet_MembershipUsers;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PasswordFormat
        {
            get
            {
                return _PasswordFormat;
            }
            set
            {
                if (_PasswordFormat != value)
                {
                    OnPasswordFormatChanging(value);
                    ReportPropertyChanging("PasswordFormat");
                    _PasswordFormat = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PasswordFormat");
                    OnPasswordFormatChanged();
                }
            }
        }
        private global::System.Int32 _PasswordFormat;
        partial void OnPasswordFormatChanging(global::System.Int32 value);
        partial void OnPasswordFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobilePIN
        {
            get
            {
                return _MobilePIN;
            }
            set
            {
                OnMobilePINChanging(value);
                ReportPropertyChanging("MobilePIN");
                _MobilePIN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobilePIN");
                OnMobilePINChanged();
            }
        }
        private global::System.String _MobilePIN;
        partial void OnMobilePINChanging(global::System.String value);
        partial void OnMobilePINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoweredEmail
        {
            get
            {
                return _LoweredEmail;
            }
            set
            {
                OnLoweredEmailChanging(value);
                ReportPropertyChanging("LoweredEmail");
                _LoweredEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoweredEmail");
                OnLoweredEmailChanged();
            }
        }
        private global::System.String _LoweredEmail;
        partial void OnLoweredEmailChanging(global::System.String value);
        partial void OnLoweredEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordQuestion
        {
            get
            {
                return _PasswordQuestion;
            }
            set
            {
                OnPasswordQuestionChanging(value);
                ReportPropertyChanging("PasswordQuestion");
                _PasswordQuestion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordQuestion");
                OnPasswordQuestionChanged();
            }
        }
        private global::System.String _PasswordQuestion;
        partial void OnPasswordQuestionChanging(global::System.String value);
        partial void OnPasswordQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordAnswer
        {
            get
            {
                return _PasswordAnswer;
            }
            set
            {
                OnPasswordAnswerChanging(value);
                ReportPropertyChanging("PasswordAnswer");
                _PasswordAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordAnswer");
                OnPasswordAnswerChanged();
            }
        }
        private global::System.String _PasswordAnswer;
        partial void OnPasswordAnswerChanging(global::System.String value);
        partial void OnPasswordAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                if (_IsApproved != value)
                {
                    OnIsApprovedChanging(value);
                    ReportPropertyChanging("IsApproved");
                    _IsApproved = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsApproved");
                    OnIsApprovedChanged();
                }
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLockedOut
        {
            get
            {
                return _IsLockedOut;
            }
            set
            {
                if (_IsLockedOut != value)
                {
                    OnIsLockedOutChanging(value);
                    ReportPropertyChanging("IsLockedOut");
                    _IsLockedOut = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsLockedOut");
                    OnIsLockedOutChanged();
                }
            }
        }
        private global::System.Boolean _IsLockedOut;
        partial void OnIsLockedOutChanging(global::System.Boolean value);
        partial void OnIsLockedOutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                if (_CreateDate != value)
                {
                    OnCreateDateChanging(value);
                    ReportPropertyChanging("CreateDate");
                    _CreateDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CreateDate");
                    OnCreateDateChanged();
                }
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                if (_LastLoginDate != value)
                {
                    OnLastLoginDateChanging(value);
                    ReportPropertyChanging("LastLoginDate");
                    _LastLoginDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastLoginDate");
                    OnLastLoginDateChanged();
                }
            }
        }
        private global::System.DateTime _LastLoginDate;
        partial void OnLastLoginDateChanging(global::System.DateTime value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastPasswordChangedDate
        {
            get
            {
                return _LastPasswordChangedDate;
            }
            set
            {
                if (_LastPasswordChangedDate != value)
                {
                    OnLastPasswordChangedDateChanging(value);
                    ReportPropertyChanging("LastPasswordChangedDate");
                    _LastPasswordChangedDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastPasswordChangedDate");
                    OnLastPasswordChangedDateChanged();
                }
            }
        }
        private global::System.DateTime _LastPasswordChangedDate;
        partial void OnLastPasswordChangedDateChanging(global::System.DateTime value);
        partial void OnLastPasswordChangedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLockoutDate
        {
            get
            {
                return _LastLockoutDate;
            }
            set
            {
                if (_LastLockoutDate != value)
                {
                    OnLastLockoutDateChanging(value);
                    ReportPropertyChanging("LastLockoutDate");
                    _LastLockoutDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastLockoutDate");
                    OnLastLockoutDateChanged();
                }
            }
        }
        private global::System.DateTime _LastLockoutDate;
        partial void OnLastLockoutDateChanging(global::System.DateTime value);
        partial void OnLastLockoutDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAttemptCount
        {
            get
            {
                return _FailedPasswordAttemptCount;
            }
            set
            {
                if (_FailedPasswordAttemptCount != value)
                {
                    OnFailedPasswordAttemptCountChanging(value);
                    ReportPropertyChanging("FailedPasswordAttemptCount");
                    _FailedPasswordAttemptCount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FailedPasswordAttemptCount");
                    OnFailedPasswordAttemptCountChanged();
                }
            }
        }
        private global::System.Int32 _FailedPasswordAttemptCount;
        partial void OnFailedPasswordAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAttemptWindowStart;
            }
            set
            {
                if (_FailedPasswordAttemptWindowStart != value)
                {
                    OnFailedPasswordAttemptWindowStartChanging(value);
                    ReportPropertyChanging("FailedPasswordAttemptWindowStart");
                    _FailedPasswordAttemptWindowStart = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FailedPasswordAttemptWindowStart");
                    OnFailedPasswordAttemptWindowStartChanged();
                }
            }
        }
        private global::System.DateTime _FailedPasswordAttemptWindowStart;
        partial void OnFailedPasswordAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAnswerAttemptCount
        {
            get
            {
                return _FailedPasswordAnswerAttemptCount;
            }
            set
            {
                if (_FailedPasswordAnswerAttemptCount != value)
                {
                    OnFailedPasswordAnswerAttemptCountChanging(value);
                    ReportPropertyChanging("FailedPasswordAnswerAttemptCount");
                    _FailedPasswordAnswerAttemptCount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FailedPasswordAnswerAttemptCount");
                    OnFailedPasswordAnswerAttemptCountChanged();
                }
            }
        }
        private global::System.Int32 _FailedPasswordAnswerAttemptCount;
        partial void OnFailedPasswordAnswerAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAnswerAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAnswerAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAnswerAttemptWindowStart;
            }
            set
            {
                if (_FailedPasswordAnswerAttemptWindowStart != value)
                {
                    OnFailedPasswordAnswerAttemptWindowStartChanging(value);
                    ReportPropertyChanging("FailedPasswordAnswerAttemptWindowStart");
                    _FailedPasswordAnswerAttemptWindowStart = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
                    OnFailedPasswordAnswerAttemptWindowStartChanged();
                }
            }
        }
        private global::System.DateTime _FailedPasswordAnswerAttemptWindowStart;
        partial void OnFailedPasswordAnswerAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                if (_ApplicationId != value)
                {
                    OnApplicationIdChanging(value);
                    ReportPropertyChanging("ApplicationId");
                    _ApplicationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApplicationId");
                    OnApplicationIdChanged();
                }
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                if (_UserName != value)
                {
                    OnUserNameChanging(value);
                    ReportPropertyChanging("UserName");
                    _UserName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserName");
                    OnUserNameChanged();
                }
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileAlias
        {
            get
            {
                return _MobileAlias;
            }
            set
            {
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
            }
        }
        private global::System.String _MobileAlias;
        partial void OnMobileAliasChanging(global::System.String value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                if (_IsAnonymous != value)
                {
                    OnIsAnonymousChanging(value);
                    ReportPropertyChanging("IsAnonymous");
                    _IsAnonymous = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IsAnonymous");
                    OnIsAnonymousChanged();
                }
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                if (_LastActivityDate != value)
                {
                    OnLastActivityDateChanging(value);
                    ReportPropertyChanging("LastActivityDate");
                    _LastActivityDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LastActivityDate");
                    OnLastActivityDateChanged();
                }
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion
    
    }

    #endregion
    
}
