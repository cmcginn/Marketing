//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication.Implementation
{
    
    #region UserCitySelection
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/MarketingDomainServiceData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class UserCitySelection :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.UserCitySelection.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._CityId;
        }
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool Selected
        {
            get
            {
                return this._Selected;
            }
            set
            {
                if (this._Selected != value)
                {
                    this.RaiseDataMemberChanging("Selected");
                    this.ValidateProperty("Selected", value);
                    this._Selected = value;
                    this.RaiseDataMemberChanged("Selected");
                }
            }
        }
        private bool _Selected;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid UserId
        {
            get
            {
                return this._UserId;
            }
            set
            {
                if (this._UserId != value)
                {
                    this.RaiseDataMemberChanging("UserId");
                    this.ValidateProperty("UserId", value);
                    this._UserId = value;
                    this.RaiseDataMemberChanged("UserId");
                }
            }
        }
        private global::System.Guid _UserId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string CityName
        {
            get
            {
                return this._CityName;
            }
            set
            {
                if (this._CityName != value)
                {
                    this.RaiseDataMemberChanging("CityName");
                    this.ValidateProperty("CityName", value);
                    this._CityName = value;
                    this.RaiseDataMemberChanged("CityName");
                }
            }
        }
        private string _CityName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string RegionName
        {
            get
            {
                return this._RegionName;
            }
            set
            {
                if (this._RegionName != value)
                {
                    this.RaiseDataMemberChanging("RegionName");
                    this.ValidateProperty("RegionName", value);
                    this._RegionName = value;
                    this.RaiseDataMemberChanged("RegionName");
                }
            }
        }
        private string _RegionName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool Active
        {
            get
            {
                return this._Active;
            }
            set
            {
                if (this._Active != value)
                {
                    this.RaiseDataMemberChanging("Active");
                    this.ValidateProperty("Active", value);
                    this._Active = value;
                    this.RaiseDataMemberChanged("Active");
                }
            }
        }
        private bool _Active;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string StateProvince
        {
            get
            {
                return this._StateProvince;
            }
            set
            {
                if (this._StateProvince != value)
                {
                    this.RaiseDataMemberChanging("StateProvince");
                    this.ValidateProperty("StateProvince", value);
                    this._StateProvince = value;
                    this.RaiseDataMemberChanged("StateProvince");
                }
            }
        }
        private string _StateProvince;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid CityId
        {
            get
            {
                return this._CityId;
            }
            set
            {
                if (this._CityId != value)
                {
                    this.ValidateProperty("CityId", value);
                    this._CityId = value;
                    this.RaisePropertyChanged("CityId");
                }
            }
        }
        private global::System.Guid _CityId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.RaiseDataMemberChanging("Id");
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaiseDataMemberChanged("Id");
                }
            }
        }
        private global::System.Guid _Id;
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region UserListingCategorySelection
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/MarketingDomainServiceData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class UserListingCategorySelection :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.UserListingCategorySelection.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private global::System.Guid _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool Selected
        {
            get
            {
                return this._Selected;
            }
            set
            {
                if (this._Selected != value)
                {
                    this.RaiseDataMemberChanging("Selected");
                    this.ValidateProperty("Selected", value);
                    this._Selected = value;
                    this.RaiseDataMemberChanged("Selected");
                }
            }
        }
        private bool _Selected;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string CategoryName
        {
            get
            {
                return this._CategoryName;
            }
            set
            {
                if (this._CategoryName != value)
                {
                    this.RaiseDataMemberChanging("CategoryName");
                    this.ValidateProperty("CategoryName", value);
                    this._CategoryName = value;
                    this.RaiseDataMemberChanged("CategoryName");
                }
            }
        }
        private string _CategoryName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string GroupName
        {
            get
            {
                return this._GroupName;
            }
            set
            {
                if (this._GroupName != value)
                {
                    this.RaiseDataMemberChanging("GroupName");
                    this.ValidateProperty("GroupName", value);
                    this._GroupName = value;
                    this.RaiseDataMemberChanged("GroupName");
                }
            }
        }
        private string _GroupName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool Active
        {
            get
            {
                return this._Active;
            }
            set
            {
                if (this._Active != value)
                {
                    this.RaiseDataMemberChanging("Active");
                    this.ValidateProperty("Active", value);
                    this._Active = value;
                    this.RaiseDataMemberChanged("Active");
                }
            }
        }
        private bool _Active;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid UserId
        {
            get
            {
                return this._UserId;
            }
            set
            {
                if (this._UserId != value)
                {
                    this.RaiseDataMemberChanging("UserId");
                    this.ValidateProperty("UserId", value);
                    this._UserId = value;
                    this.RaiseDataMemberChanged("UserId");
                }
            }
        }
        private global::System.Guid _UserId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid CategoryId
        {
            get
            {
                return this._CategoryId;
            }
            set
            {
                if (this._CategoryId != value)
                {
                    this.RaiseDataMemberChanging("CategoryId");
                    this.ValidateProperty("CategoryId", value);
                    this._CategoryId = value;
                    this.RaiseDataMemberChanged("CategoryId");
                }
            }
        }
        private global::System.Guid _CategoryId;
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region UserKeywordSelection
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/MarketingDomainServiceData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class UserKeywordSelection :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.UserKeywordSelection.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private global::System.Guid _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Keyword
        {
            get
            {
                return this._Keyword;
            }
            set
            {
                if (this._Keyword != value)
                {
                    this.RaiseDataMemberChanging("Keyword");
                    this.ValidateProperty("Keyword", value);
                    this._Keyword = value;
                    this.RaiseDataMemberChanged("Keyword");
                }
            }
        }
        private string _Keyword;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int WeightedScore
        {
            get
            {
                return this._WeightedScore;
            }
            set
            {
                if (this._WeightedScore != value)
                {
                    this.RaiseDataMemberChanging("WeightedScore");
                    this.ValidateProperty("WeightedScore", value);
                    this._WeightedScore = value;
                    this.RaiseDataMemberChanged("WeightedScore");
                }
            }
        }
        private int _WeightedScore;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid UserId
        {
            get
            {
                return this._UserId;
            }
            set
            {
                if (this._UserId != value)
                {
                    this.RaiseDataMemberChanging("UserId");
                    this.ValidateProperty("UserId", value);
                    this._UserId = value;
                    this.RaiseDataMemberChanged("UserId");
                }
            }
        }
        private global::System.Guid _UserId;
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region UserPreferenceSelection
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/MarketingDomainServiceData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class UserPreferenceSelection :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private global::System.Guid _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid UserId
        {
            get
            {
                return this._UserId;
            }
            set
            {
                if (this._UserId != value)
                {
                    this.RaiseDataMemberChanging("UserId");
                    this.ValidateProperty("UserId", value);
                    this._UserId = value;
                    this.RaiseDataMemberChanged("UserId");
                }
            }
        }
        private global::System.Guid _UserId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool LiveMode
        {
            get
            {
                return this._LiveMode;
            }
            set
            {
                if (this._LiveMode != value)
                {
                    this.RaiseDataMemberChanging("LiveMode");
                    this.ValidateProperty("LiveMode", value);
                    this._LiveMode = value;
                    this.RaiseDataMemberChanged("LiveMode");
                }
            }
        }
        private bool _LiveMode;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string BCCEmailAddress
        {
            get
            {
                return this._BCCEmailAddress;
            }
            set
            {
                if (this._BCCEmailAddress != value)
                {
                    this.RaiseDataMemberChanging("BCCEmailAddress");
                    this.ValidateProperty("BCCEmailAddress", value);
                    this._BCCEmailAddress = value;
                    this.RaiseDataMemberChanged("BCCEmailAddress");
                }
            }
        }
        private string _BCCEmailAddress;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string SMTPUsername
        {
            get
            {
                return this._SMTPUsername;
            }
            set
            {
                if (this._SMTPUsername != value)
                {
                    this.RaiseDataMemberChanging("SMTPUsername");
                    this.ValidateProperty("SMTPUsername", value);
                    this._SMTPUsername = value;
                    this.RaiseDataMemberChanged("SMTPUsername");
                }
            }
        }
        private string _SMTPUsername;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string SMTPServer
        {
            get
            {
                return this._SMTPServer;
            }
            set
            {
                if (this._SMTPServer != value)
                {
                    this.RaiseDataMemberChanging("SMTPServer");
                    this.ValidateProperty("SMTPServer", value);
                    this._SMTPServer = value;
                    this.RaiseDataMemberChanged("SMTPServer");
                }
            }
        }
        private string _SMTPServer;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int SMTPPort
        {
            get
            {
                return this._SMTPPort;
            }
            set
            {
                if (this._SMTPPort != value)
                {
                    this.RaiseDataMemberChanging("SMTPPort");
                    this.ValidateProperty("SMTPPort", value);
                    this._SMTPPort = value;
                    this.RaiseDataMemberChanged("SMTPPort");
                }
            }
        }
        private int _SMTPPort;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool RequiresSSL
        {
            get
            {
                return this._RequiresSSL;
            }
            set
            {
                if (this._RequiresSSL != value)
                {
                    this.RaiseDataMemberChanging("RequiresSSL");
                    this.ValidateProperty("RequiresSSL", value);
                    this._RequiresSSL = value;
                    this.RaiseDataMemberChanged("RequiresSSL");
                }
            }
        }
        private bool _RequiresSSL;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string SMTPPassword
        {
            get
            {
                return this._SMTPPassword;
            }
            set
            {
                if (this._SMTPPassword != value)
                {
                    this.RaiseDataMemberChanging("SMTPPassword");
                    this.ValidateProperty("SMTPPassword", value);
                    this._SMTPPassword = value;
                    this.RaiseDataMemberChanged("SMTPPassword");
                }
            }
        }
        private string _SMTPPassword;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int MinimumKeywordScore
        {
            get
            {
                return this._MinimumKeywordScore;
            }
            set
            {
                if (this._MinimumKeywordScore != value)
                {
                    this.RaiseDataMemberChanging("MinimumKeywordScore");
                    this.ValidateProperty("MinimumKeywordScore", value);
                    this._MinimumKeywordScore = value;
                    this.RaiseDataMemberChanged("MinimumKeywordScore");
                }
            }
        }
        private int _MinimumKeywordScore;
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region UserListingItem
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/MarketingDomainServiceData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class UserListingItem :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.UserListingItem.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private global::System.Guid _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Title
        {
            get
            {
                return this._Title;
            }
            set
            {
                if (this._Title != value)
                {
                    this.RaiseDataMemberChanging("Title");
                    this.ValidateProperty("Title", value);
                    this._Title = value;
                    this.RaiseDataMemberChanged("Title");
                }
            }
        }
        private string _Title;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string CategoryName
        {
            get
            {
                return this._CategoryName;
            }
            set
            {
                if (this._CategoryName != value)
                {
                    this.RaiseDataMemberChanging("CategoryName");
                    this.ValidateProperty("CategoryName", value);
                    this._CategoryName = value;
                    this.RaiseDataMemberChanged("CategoryName");
                }
            }
        }
        private string _CategoryName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string GroupName
        {
            get
            {
                return this._GroupName;
            }
            set
            {
                if (this._GroupName != value)
                {
                    this.RaiseDataMemberChanging("GroupName");
                    this.ValidateProperty("GroupName", value);
                    this._GroupName = value;
                    this.RaiseDataMemberChanged("GroupName");
                }
            }
        }
        private string _GroupName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string RegionName
        {
            get
            {
                return this._RegionName;
            }
            set
            {
                if (this._RegionName != value)
                {
                    this.RaiseDataMemberChanging("RegionName");
                    this.ValidateProperty("RegionName", value);
                    this._RegionName = value;
                    this.RaiseDataMemberChanged("RegionName");
                }
            }
        }
        private string _RegionName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string CityName
        {
            get
            {
                return this._CityName;
            }
            set
            {
                if (this._CityName != value)
                {
                    this.RaiseDataMemberChanging("CityName");
                    this.ValidateProperty("CityName", value);
                    this._CityName = value;
                    this.RaiseDataMemberChanged("CityName");
                }
            }
        }
        private string _CityName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime Created
        {
            get
            {
                return this._Created;
            }
            set
            {
                if (this._Created != value)
                {
                    this.RaiseDataMemberChanging("Created");
                    this.ValidateProperty("Created", value);
                    this._Created = value;
                    this.RaiseDataMemberChanged("Created");
                }
            }
        }
        private global::System.DateTime _Created;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string PostElement
        {
            get
            {
                return this._PostElement;
            }
            set
            {
                if (this._PostElement != value)
                {
                    this.RaiseDataMemberChanging("PostElement");
                    this.ValidateProperty("PostElement", value);
                    this._PostElement = value;
                    this.RaiseDataMemberChanged("PostElement");
                }
            }
        }
        private string _PostElement;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid UserId
        {
            get
            {
                return this._UserId;
            }
            set
            {
                if (this._UserId != value)
                {
                    this.RaiseDataMemberChanging("UserId");
                    this.ValidateProperty("UserId", value);
                    this._UserId = value;
                    this.RaiseDataMemberChanged("UserId");
                }
            }
        }
        private global::System.Guid _UserId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<global::System.DateTime> Responded
        {
            get
            {
                return this._Responded;
            }
            set
            {
                if (this._Responded != value)
                {
                    this.RaiseDataMemberChanging("Responded");
                    this.ValidateProperty("Responded", value);
                    this._Responded = value;
                    this.RaiseDataMemberChanged("Responded");
                }
            }
        }
        private global::System.Nullable<global::System.DateTime> _Responded;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<global::System.Guid> ResponseId
        {
            get
            {
                return this._ResponseId;
            }
            set
            {
                if (this._ResponseId != value)
                {
                    this.RaiseDataMemberChanging("ResponseId");
                    this.ValidateProperty("ResponseId", value);
                    this._ResponseId = value;
                    this.RaiseDataMemberChanged("ResponseId");
                }
            }
        }
        private global::System.Nullable<global::System.Guid> _ResponseId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Response
        {
            get
            {
                return this._Response;
            }
            set
            {
                if (this._Response != value)
                {
                    this.RaiseDataMemberChanging("Response");
                    this.ValidateProperty("Response", value);
                    this._Response = value;
                    this.RaiseDataMemberChanged("Response");
                }
            }
        }
        private string _Response;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string ResponseText
        {
            get
            {
                return this._ResponseText;
            }
            set
            {
                if (this._ResponseText != value)
                {
                    this.RaiseDataMemberChanging("ResponseText");
                    this.ValidateProperty("ResponseText", value);
                    this._ResponseText = value;
                    this.RaiseDataMemberChanged("ResponseText");
                }
            }
        }
        private string _ResponseText;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string PostHtml
        {
            get
            {
                return this._PostHtml;
            }
            set
            {
                if (this._PostHtml != value)
                {
                    this.RaiseDataMemberChanging("PostHtml");
                    this.ValidateProperty("PostHtml", value);
                    this._PostHtml = value;
                    this.RaiseDataMemberChanged("PostHtml");
                }
            }
        }
        private string _PostHtml;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<global::System.DateTime> ResponseSent
        {
            get
            {
                return this._ResponseSent;
            }
            set
            {
                if (this._ResponseSent != value)
                {
                    this.RaiseDataMemberChanging("ResponseSent");
                    this.ValidateProperty("ResponseSent", value);
                    this._ResponseSent = value;
                    this.RaiseDataMemberChanged("ResponseSent");
                }
            }
        }
        private global::System.Nullable<global::System.DateTime> _ResponseSent;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string StateProvince
        {
            get
            {
                return this._StateProvince;
            }
            set
            {
                if (this._StateProvince != value)
                {
                    this.RaiseDataMemberChanging("StateProvince");
                    this.ValidateProperty("StateProvince", value);
                    this._StateProvince = value;
                    this.RaiseDataMemberChanged("StateProvince");
                }
            }
        }
        private string _StateProvince;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool CityActive
        {
            get
            {
                return this._CityActive;
            }
            set
            {
                if (this._CityActive != value)
                {
                    this.RaiseDataMemberChanging("CityActive");
                    this.ValidateProperty("CityActive", value);
                    this._CityActive = value;
                    this.RaiseDataMemberChanged("CityActive");
                }
            }
        }
        private bool _CityActive;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool UserCityActive
        {
            get
            {
                return this._UserCityActive;
            }
            set
            {
                if (this._UserCityActive != value)
                {
                    this.RaiseDataMemberChanging("UserCityActive");
                    this.ValidateProperty("UserCityActive", value);
                    this._UserCityActive = value;
                    this.RaiseDataMemberChanged("UserCityActive");
                }
            }
        }
        private bool _UserCityActive;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool ListingCategoryActive
        {
            get
            {
                return this._ListingCategoryActive;
            }
            set
            {
                if (this._ListingCategoryActive != value)
                {
                    this.RaiseDataMemberChanging("ListingCategoryActive");
                    this.ValidateProperty("ListingCategoryActive", value);
                    this._ListingCategoryActive = value;
                    this.RaiseDataMemberChanged("ListingCategoryActive");
                }
            }
        }
        private bool _ListingCategoryActive;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int KeywordScore
        {
            get
            {
                return this._KeywordScore;
            }
            set
            {
                if (this._KeywordScore != value)
                {
                    this.RaiseDataMemberChanging("KeywordScore");
                    this.ValidateProperty("KeywordScore", value);
                    this._KeywordScore = value;
                    this.RaiseDataMemberChanged("KeywordScore");
                }
            }
        }
        private int _KeywordScore;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string KeywordDisplay
        {
            get
            {
                return this._KeywordDisplay;
            }
            set
            {
                if (this._KeywordDisplay != value)
                {
                    this.RaiseDataMemberChanging("KeywordDisplay");
                    this.ValidateProperty("KeywordDisplay", value);
                    this._KeywordDisplay = value;
                    this.RaiseDataMemberChanged("KeywordDisplay");
                }
            }
        }
        private string _KeywordDisplay;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool UseDefaultResponse
        {
            get
            {
                return this._UseDefaultResponse;
            }
            set
            {
                if (this._UseDefaultResponse != value)
                {
                    this.RaiseDataMemberChanging("UseDefaultResponse");
                    this.ValidateProperty("UseDefaultResponse", value);
                    this._UseDefaultResponse = value;
                    this.RaiseDataMemberChanged("UseDefaultResponse");
                }
            }
        }
        private bool _UseDefaultResponse;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime PostDate
        {
            get
            {
                return this._PostDate;
            }
            set
            {
                if (this._PostDate != value)
                {
                    this.RaiseDataMemberChanging("PostDate");
                    this.ValidateProperty("PostDate", value);
                    this._PostDate = value;
                    this.RaiseDataMemberChanged("PostDate");
                }
            }
        }
        private global::System.DateTime _PostDate;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string PostText
        {
            get
            {
                return this._PostText;
            }
            set
            {
                if (this._PostText != value)
                {
                    this.RaiseDataMemberChanging("PostText");
                    this.ValidateProperty("PostText", value);
                    this._PostText = value;
                    this.RaiseDataMemberChanged("PostText");
                }
            }
        }
        private string _PostText;
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region UserListingResponseItem
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/MarketingDomainServiceData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class UserListingResponseItem :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.UserListingResponseItem.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private global::System.Guid _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid UserListingUrlId
        {
            get
            {
                return this._UserListingUrlId;
            }
            set
            {
                if (this._UserListingUrlId != value)
                {
                    this.RaiseDataMemberChanging("UserListingUrlId");
                    this.ValidateProperty("UserListingUrlId", value);
                    this._UserListingUrlId = value;
                    this.RaiseDataMemberChanged("UserListingUrlId");
                }
            }
        }
        private global::System.Guid _UserListingUrlId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid UserId
        {
            get
            {
                return this._UserId;
            }
            set
            {
                if (this._UserId != value)
                {
                    this.RaiseDataMemberChanging("UserId");
                    this.ValidateProperty("UserId", value);
                    this._UserId = value;
                    this.RaiseDataMemberChanged("UserId");
                }
            }
        }
        private global::System.Guid _UserId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime Created
        {
            get
            {
                return this._Created;
            }
            set
            {
                if (this._Created != value)
                {
                    this.RaiseDataMemberChanging("Created");
                    this.ValidateProperty("Created", value);
                    this._Created = value;
                    this.RaiseDataMemberChanged("Created");
                }
            }
        }
        private global::System.DateTime _Created;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Response
        {
            get
            {
                return this._Response;
            }
            set
            {
                if (this._Response != value)
                {
                    this.RaiseDataMemberChanging("Response");
                    this.ValidateProperty("Response", value);
                    this._Response = value;
                    this.RaiseDataMemberChanged("Response");
                }
            }
        }
        private string _Response;
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region Operation
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/MarketingDomainServiceData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class Operation :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.Operation.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private int _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime Created
        {
            get
            {
                return this._Created;
            }
            set
            {
                if (this._Created != value)
                {
                    this.RaiseDataMemberChanging("Created");
                    this.ValidateProperty("Created", value);
                    this._Created = value;
                    this.RaiseDataMemberChanged("Created");
                }
            }
        }
        private global::System.DateTime _Created;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string OperationName
        {
            get
            {
                return this._OperationName;
            }
            set
            {
                if (this._OperationName != value)
                {
                    this.RaiseDataMemberChanging("OperationName");
                    this.ValidateProperty("OperationName", value);
                    this._OperationName = value;
                    this.RaiseDataMemberChanged("OperationName");
                }
            }
        }
        private string _OperationName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Parameters
        {
            get
            {
                return this._Parameters;
            }
            set
            {
                if (this._Parameters != value)
                {
                    this.RaiseDataMemberChanging("Parameters");
                    this.ValidateProperty("Parameters", value);
                    this._Parameters = value;
                    this.RaiseDataMemberChanged("Parameters");
                }
            }
        }
        private string _Parameters;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid UserId
        {
            get
            {
                return this._UserId;
            }
            set
            {
                if (this._UserId != value)
                {
                    this.RaiseDataMemberChanging("UserId");
                    this.ValidateProperty("UserId", value);
                    this._UserId = value;
                    this.RaiseDataMemberChanged("UserId");
                }
            }
        }
        private global::System.Guid _UserId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool Visible
        {
            get
            {
                return this._Visible;
            }
            set
            {
                if (this._Visible != value)
                {
                    this.RaiseDataMemberChanging("Visible");
                    this.ValidateProperty("Visible", value);
                    this._Visible = value;
                    this.RaiseDataMemberChanged("Visible");
                }
            }
        }
        private bool _Visible;
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region User
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/MarketingDomainServiceData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class User :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.User.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private global::System.Guid _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Username
        {
            get
            {
                return this._Username;
            }
            set
            {
                if (this._Username != value)
                {
                    this.RaiseDataMemberChanging("Username");
                    this.ValidateProperty("Username", value);
                    this._Username = value;
                    this.RaiseDataMemberChanged("Username");
                }
            }
        }
        private string _Username;
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region UserTemplateItem
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/MarketingDomainServiceData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class UserTemplateItem :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.UserTemplateItem.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private global::System.Guid _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid UserId
        {
            get
            {
                return this._UserId;
            }
            set
            {
                if (this._UserId != value)
                {
                    this.RaiseDataMemberChanging("UserId");
                    this.ValidateProperty("UserId", value);
                    this._UserId = value;
                    this.RaiseDataMemberChanged("UserId");
                }
            }
        }
        private global::System.Guid _UserId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime Created
        {
            get
            {
                return this._Created;
            }
            set
            {
                if (this._Created != value)
                {
                    this.RaiseDataMemberChanging("Created");
                    this.ValidateProperty("Created", value);
                    this._Created = value;
                    this.RaiseDataMemberChanged("Created");
                }
            }
        }
        private global::System.DateTime _Created;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<global::System.DateTime> LastUpdated
        {
            get
            {
                return this._LastUpdated;
            }
            set
            {
                if (this._LastUpdated != value)
                {
                    this.RaiseDataMemberChanging("LastUpdated");
                    this.ValidateProperty("LastUpdated", value);
                    this._LastUpdated = value;
                    this.RaiseDataMemberChanged("LastUpdated");
                }
            }
        }
        private global::System.Nullable<global::System.DateTime> _LastUpdated;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool IsDefault
        {
            get
            {
                return this._IsDefault;
            }
            set
            {
                if (this._IsDefault != value)
                {
                    this.RaiseDataMemberChanging("IsDefault");
                    this.ValidateProperty("IsDefault", value);
                    this._IsDefault = value;
                    this.RaiseDataMemberChanged("IsDefault");
                }
            }
        }
        private bool _IsDefault;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string TemplateName
        {
            get
            {
                return this._TemplateName;
            }
            set
            {
                if (this._TemplateName != value)
                {
                    this.RaiseDataMemberChanging("TemplateName");
                    this.ValidateProperty("TemplateName", value);
                    this._TemplateName = value;
                    this.RaiseDataMemberChanged("TemplateName");
                }
            }
        }
        private string _TemplateName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string TemplateHtml
        {
            get
            {
                return this._TemplateHtml;
            }
            set
            {
                if (this._TemplateHtml != value)
                {
                    this.RaiseDataMemberChanging("TemplateHtml");
                    this.ValidateProperty("TemplateHtml", value);
                    this._TemplateHtml = value;
                    this.RaiseDataMemberChanged("TemplateHtml");
                }
            }
        }
        private string _TemplateHtml;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string TemplateText
        {
            get
            {
                return this._TemplateText;
            }
            set
            {
                if (this._TemplateText != value)
                {
                    this.RaiseDataMemberChanging("TemplateText");
                    this.ValidateProperty("TemplateText", value);
                    this._TemplateText = value;
                    this.RaiseDataMemberChanged("TemplateText");
                }
            }
        }
        private string _TemplateText;
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region UserPostListFilterItem
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/MarketingDomainServiceData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class UserPostListFilterItem :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.UserPostListFilterItem.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private global::System.Guid _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid UserId
        {
            get
            {
                return this._UserId;
            }
            set
            {
                if (this._UserId != value)
                {
                    this.RaiseDataMemberChanging("UserId");
                    this.ValidateProperty("UserId", value);
                    this._UserId = value;
                    this.RaiseDataMemberChanged("UserId");
                }
            }
        }
        private global::System.Guid _UserId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<global::System.DateTime> PostStartDate
        {
            get
            {
                return this._PostStartDate;
            }
            set
            {
                if (this._PostStartDate != value)
                {
                    this.RaiseDataMemberChanging("PostStartDate");
                    this.ValidateProperty("PostStartDate", value);
                    this._PostStartDate = value;
                    this.RaiseDataMemberChanged("PostStartDate");
                }
            }
        }
        private global::System.Nullable<global::System.DateTime> _PostStartDate;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<global::System.DateTime> PostEndDate
        {
            get
            {
                return this._PostEndDate;
            }
            set
            {
                if (this._PostEndDate != value)
                {
                    this.RaiseDataMemberChanging("PostEndDate");
                    this.ValidateProperty("PostEndDate", value);
                    this._PostEndDate = value;
                    this.RaiseDataMemberChanged("PostEndDate");
                }
            }
        }
        private global::System.Nullable<global::System.DateTime> _PostEndDate;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<global::System.DateTime> ResponseStartDate
        {
            get
            {
                return this._ResponseStartDate;
            }
            set
            {
                if (this._ResponseStartDate != value)
                {
                    this.RaiseDataMemberChanging("ResponseStartDate");
                    this.ValidateProperty("ResponseStartDate", value);
                    this._ResponseStartDate = value;
                    this.RaiseDataMemberChanged("ResponseStartDate");
                }
            }
        }
        private global::System.Nullable<global::System.DateTime> _ResponseStartDate;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<global::System.DateTime> ResponseEndDate
        {
            get
            {
                return this._ResponseEndDate;
            }
            set
            {
                if (this._ResponseEndDate != value)
                {
                    this.RaiseDataMemberChanging("ResponseEndDate");
                    this.ValidateProperty("ResponseEndDate", value);
                    this._ResponseEndDate = value;
                    this.RaiseDataMemberChanged("ResponseEndDate");
                }
            }
        }
        private global::System.Nullable<global::System.DateTime> _ResponseEndDate;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string FilteredKeywords
        {
            get
            {
                return this._FilteredKeywords;
            }
            set
            {
                if (this._FilteredKeywords != value)
                {
                    this.RaiseDataMemberChanging("FilteredKeywords");
                    this.ValidateProperty("FilteredKeywords", value);
                    this._FilteredKeywords = value;
                    this.RaiseDataMemberChanged("FilteredKeywords");
                }
            }
        }
        private string _FilteredKeywords;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string FilteredCities
        {
            get
            {
                return this._FilteredCities;
            }
            set
            {
                if (this._FilteredCities != value)
                {
                    this.RaiseDataMemberChanging("FilteredCities");
                    this.ValidateProperty("FilteredCities", value);
                    this._FilteredCities = value;
                    this.RaiseDataMemberChanged("FilteredCities");
                }
            }
        }
        private string _FilteredCities;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string FilteredStates
        {
            get
            {
                return this._FilteredStates;
            }
            set
            {
                if (this._FilteredStates != value)
                {
                    this.RaiseDataMemberChanging("FilteredStates");
                    this.ValidateProperty("FilteredStates", value);
                    this._FilteredStates = value;
                    this.RaiseDataMemberChanged("FilteredStates");
                }
            }
        }
        private string _FilteredStates;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string FilteredCountries
        {
            get
            {
                return this._FilteredCountries;
            }
            set
            {
                if (this._FilteredCountries != value)
                {
                    this.RaiseDataMemberChanging("FilteredCountries");
                    this.ValidateProperty("FilteredCountries", value);
                    this._FilteredCountries = value;
                    this.RaiseDataMemberChanged("FilteredCountries");
                }
            }
        }
        private string _FilteredCountries;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool ShowResponded
        {
            get
            {
                return this._ShowResponded;
            }
            set
            {
                if (this._ShowResponded != value)
                {
                    this.RaiseDataMemberChanging("ShowResponded");
                    this.ValidateProperty("ShowResponded", value);
                    this._ShowResponded = value;
                    this.RaiseDataMemberChanged("ShowResponded");
                }
            }
        }
        private bool _ShowResponded;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool ShowNotResponded
        {
            get
            {
                return this._ShowNotResponded;
            }
            set
            {
                if (this._ShowNotResponded != value)
                {
                    this.RaiseDataMemberChanging("ShowNotResponded");
                    this.ValidateProperty("ShowNotResponded", value);
                    this._ShowNotResponded = value;
                    this.RaiseDataMemberChanged("ShowNotResponded");
                }
            }
        }
        private bool _ShowNotResponded;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool FiltersEnabled
        {
            get
            {
                return this._FiltersEnabled;
            }
            set
            {
                if (this._FiltersEnabled != value)
                {
                    this.RaiseDataMemberChanging("FiltersEnabled");
                    this.ValidateProperty("FiltersEnabled", value);
                    this._FiltersEnabled = value;
                    this.RaiseDataMemberChanged("FiltersEnabled");
                }
            }
        }
        private bool _FiltersEnabled;
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region BugReportItem
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/MarketingDomainServiceData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class BugReportItem :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.BugReportItem.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private global::System.Guid _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Description
        {
            get
            {
                return this._Description;
            }
            set
            {
                if (this._Description != value)
                {
                    this.RaiseDataMemberChanging("Description");
                    this.ValidateProperty("Description", value);
                    this._Description = value;
                    this.RaiseDataMemberChanged("Description");
                }
            }
        }
        private string _Description;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Resolution
        {
            get
            {
                return this._Resolution;
            }
            set
            {
                if (this._Resolution != value)
                {
                    this.RaiseDataMemberChanging("Resolution");
                    this.ValidateProperty("Resolution", value);
                    this._Resolution = value;
                    this.RaiseDataMemberChanged("Resolution");
                }
            }
        }
        private string _Resolution;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string ReproductionSteps
        {
            get
            {
                return this._ReproductionSteps;
            }
            set
            {
                if (this._ReproductionSteps != value)
                {
                    this.RaiseDataMemberChanging("ReproductionSteps");
                    this.ValidateProperty("ReproductionSteps", value);
                    this._ReproductionSteps = value;
                    this.RaiseDataMemberChanged("ReproductionSteps");
                }
            }
        }
        private string _ReproductionSteps;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Nullable<global::System.DateTime> Resolved
        {
            get
            {
                return this._Resolved;
            }
            set
            {
                if (this._Resolved != value)
                {
                    this.RaiseDataMemberChanging("Resolved");
                    this.ValidateProperty("Resolved", value);
                    this._Resolved = value;
                    this.RaiseDataMemberChanged("Resolved");
                }
            }
        }
        private global::System.Nullable<global::System.DateTime> _Resolved;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime Reported
        {
            get
            {
                return this._Reported;
            }
            set
            {
                if (this._Reported != value)
                {
                    this.RaiseDataMemberChanging("Reported");
                    this.ValidateProperty("Reported", value);
                    this._Reported = value;
                    this.RaiseDataMemberChanged("Reported");
                }
            }
        }
        private global::System.DateTime _Reported;
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region MarketingDomainServiceData
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class MarketingDomainServiceData
        : global::Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext
    {
        public MarketingDomainServiceData(global::Microsoft.LightSwitch.IDataService dataService)
            : base(dataService, global::Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext.CreateWcfDomainClient<IMarketingDomainServiceDataContract>(new global::System.Uri("LightSwitchApplication-Implementation-MarketingDomainServiceDataDomainService.svc", global::System.UriKind.Relative)))
        {
        }
    
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.UserCitySelection> UserCitySelectionEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.UserCitySelection>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.UserListingCategorySelection> UserListingCategorySelectionEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.UserListingCategorySelection>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.UserKeywordSelection> UserKeywordSelectionEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.UserKeywordSelection>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.UserPreferenceSelection> UserPreferenceSelectionEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.UserPreferenceSelection>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.UserListingItem> UserListingItemEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.UserListingItem>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.UserListingResponseItem> UserListingResponseItemEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.UserListingResponseItem>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.Operation> OperationEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.Operation>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.User> UserEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.User>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.UserTemplateItem> UserTemplateItemEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.UserTemplateItem>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.UserPostListFilterItem> UserPostListFilterItemEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.UserPostListFilterItem>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.BugReportItem> BugReportItemEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.BugReportItem>();
            }
        }
        protected override global::System.ServiceModel.DomainServices.Client.EntityContainer CreateEntityContainer()
        {
            return new MarketingDomainServiceDataEntityContainer();
        }
    
        internal sealed class MarketingDomainServiceDataEntityContainer : global::System.ServiceModel.DomainServices.Client.EntityContainer
        {
            public MarketingDomainServiceDataEntityContainer()
            {
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.UserCitySelection>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.UserListingCategorySelection>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.UserKeywordSelection>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.UserPreferenceSelection>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.UserListingItem>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.UserListingResponseItem>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.Operation>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.User>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.UserTemplateItem>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.UserPostListFilterItem>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.BugReportItem>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
            }
        }
    
        #region Service Contract Interface
    
        [global::System.ServiceModel.ServiceContract]
        public interface IMarketingDomainServiceDataContract
        {
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserCitySelections_Single", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserCitySelections_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserCitySelections_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserCitySelections_Single(string frameworkOperators, global::System.Nullable<global::System.Guid> CityId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserCitySelection> EndUserCitySelections_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserCitySelections_SingleOrDefault", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserCitySelections_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserCitySelections_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserCitySelections_SingleOrDefault(string frameworkOperators, global::System.Nullable<global::System.Guid> CityId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserCitySelection> EndUserCitySelections_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserCitySelections_All", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserCitySelections_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserCitySelections_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserCitySelections_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserCitySelection> EndUserCitySelections_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserCitySelections", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserCitySelectionsResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserCitySelectionsDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginGetUserCitySelections(string frameworkOperators, global::System.Nullable<global::System.Guid> userId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserCitySelection> EndGetUserCitySelections(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingCategorySelections_Single", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingCategorySelections_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingCategorySelections_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserListingCategorySelections_Single(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserListingCategorySelection> EndUserListingCategorySelections_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingCategorySelections_SingleOrDefault", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingCategorySelections_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingCategorySelections_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserListingCategorySelections_SingleOrDefault(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserListingCategorySelection> EndUserListingCategorySelections_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingCategorySelections_All", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingCategorySelections_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingCategorySelections_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserListingCategorySelections_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserListingCategorySelection> EndUserListingCategorySelections_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserCategorySelections", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserCategorySelectionsResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserCategorySelectionsDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginGetUserCategorySelections(string frameworkOperators, global::System.Nullable<global::System.Guid> userId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserListingCategorySelection> EndGetUserCategorySelections(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserKeywordSelections_Single", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserKeywordSelections_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserKeywordSelections_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserKeywordSelections_Single(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserKeywordSelection> EndUserKeywordSelections_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserKeywordSelections_SingleOrDefault", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserKeywordSelections_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserKeywordSelections_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserKeywordSelections_SingleOrDefault(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserKeywordSelection> EndUserKeywordSelections_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserKeywordSelections_All", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserKeywordSelections_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserKeywordSelections_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserKeywordSelections_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserKeywordSelection> EndUserKeywordSelections_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserKeywordSelections", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserKeywordSelectionsResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserKeywordSelectionsDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginGetUserKeywordSelections(string frameworkOperators, global::System.Nullable<global::System.Guid> userId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserKeywordSelection> EndGetUserKeywordSelections(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserPreferenceSelections_Single", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserPreferenceSelections_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserPreferenceSelections_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserPreferenceSelections_Single(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserPreferenceSelection> EndUserPreferenceSelections_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserPreferenceSelections_SingleOrDefault", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserPreferenceSelections_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserPreferenceSelections_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserPreferenceSelections_SingleOrDefault(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserPreferenceSelection> EndUserPreferenceSelections_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserPreferenceSelections_All", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserPreferenceSelections_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserPreferenceSelections_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserPreferenceSelections_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserPreferenceSelection> EndUserPreferenceSelections_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingItems_Single", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingItems_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingItems_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserListingItems_Single(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserListingItem> EndUserListingItems_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingItems_SingleOrDefault", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingItems_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingItems_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserListingItems_SingleOrDefault(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserListingItem> EndUserListingItems_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingItems_All", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingItems_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingItems_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserListingItems_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserListingItem> EndUserListingItems_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserListingItems", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserListingItemsResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserListingItemsDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginGetUserListingItems(string frameworkOperators, global::System.Nullable<global::System.Guid> userId, string filterKeywords, global::System.Nullable<global::System.DateTime> filterStartDate, global::System.Nullable<global::System.DateTime> filterEndDate, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserListingItem> EndGetUserListingItems(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingResponseItems_Single", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingResponseItems_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingResponseItems_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserListingResponseItems_Single(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserListingResponseItem> EndUserListingResponseItems_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingResponseItems_SingleOrDefault", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingResponseItems_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingResponseItems_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserListingResponseItems_SingleOrDefault(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserListingResponseItem> EndUserListingResponseItems_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingResponseItems_All", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingResponseItems_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingResponseItems_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserListingResponseItems_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserListingResponseItem> EndUserListingResponseItems_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserListingResponseById", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserListingResponseByIdResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserListingResponseByIdDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginGetUserListingResponseById(string frameworkOperators, global::System.Nullable<global::System.Guid> responseId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserListingResponseItem> EndGetUserListingResponseById(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/Operations_Single", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/Operations_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/Operations_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginOperations_Single(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Operation> EndOperations_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/Operations_SingleOrDefault", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/Operations_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/Operations_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginOperations_SingleOrDefault(string frameworkOperators, global::System.Nullable<int> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Operation> EndOperations_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/Operations_All", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/Operations_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/Operations_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginOperations_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.Operation> EndOperations_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserListingCategorySelectionByUserId", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserListingCategorySelectionByUserIdResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserListingCategorySelectionByUserIdDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginGetUserListingCategorySelectionByUserId(string frameworkOperators, global::System.Nullable<global::System.Guid> userId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserListingCategorySelection> EndGetUserListingCategorySelectionByUserId(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserKeywordSelectionByUserId", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserKeywordSelectionByUserIdResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserKeywordSelectionByUserIdDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginGetUserKeywordSelectionByUserId(string frameworkOperators, global::System.Nullable<global::System.Guid> userId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserKeywordSelection> EndGetUserKeywordSelectionByUserId(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserPreferencesSelectionByUserId", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserPreferencesSelectionByUserIdResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserPreferencesSelectionByUserIdDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginGetUserPreferencesSelectionByUserId(string frameworkOperators, global::System.Nullable<global::System.Guid> userId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserPreferenceSelection> EndGetUserPreferencesSelectionByUserId(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserCitySelectionByUserId", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserCitySelectionByUserIdResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserCitySelectionByUserIdDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginGetUserCitySelectionByUserId(string frameworkOperators, global::System.Nullable<global::System.Guid> userId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserCitySelection> EndGetUserCitySelectionByUserId(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/Users_Single", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/Users_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/Users_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUsers_Single(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.User> EndUsers_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/Users_SingleOrDefault", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/Users_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/Users_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUsers_SingleOrDefault(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.User> EndUsers_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/Users_All", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/Users_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/Users_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUsers_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.User> EndUsers_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserTemplateItems_Single", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserTemplateItems_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserTemplateItems_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserTemplateItems_Single(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserTemplateItem> EndUserTemplateItems_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserTemplateItems_SingleOrDefault", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserTemplateItems_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserTemplateItems_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserTemplateItems_SingleOrDefault(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserTemplateItem> EndUserTemplateItems_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserTemplateItems_All", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserTemplateItems_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserTemplateItems_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserTemplateItems_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserTemplateItem> EndUserTemplateItems_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserTemplates", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserTemplatesResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserTemplatesDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginGetUserTemplates(string frameworkOperators, global::System.Nullable<global::System.Guid> userId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserTemplateItem> EndGetUserTemplates(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserTemplateItemById", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserTemplateItemByIdResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserTemplateItemByIdDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginGetUserTemplateItemById(string frameworkOperators, global::System.Nullable<global::System.Guid> id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserTemplateItem> EndGetUserTemplateItemById(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserPostListItemByUserId", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserPostListItemByUserIdResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserPostListItemByUserIdDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginGetUserPostListItemByUserId(string frameworkOperators, global::System.Nullable<global::System.Guid> userId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserPostListFilterItem> EndGetUserPostListItemByUserId(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserPostListFilterItems_Single", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserPostListFilterItems_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserPostListFilterItems_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserPostListFilterItems_Single(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserPostListFilterItem> EndUserPostListFilterItems_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserPostListFilterItems_SingleOrDefault", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserPostListFilterItems_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserPostListFilterItems_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserPostListFilterItems_SingleOrDefault(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserPostListFilterItem> EndUserPostListFilterItems_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserPostListFilterItems_All", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserPostListFilterItems_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserPostListFilterItems_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserPostListFilterItems_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserPostListFilterItem> EndUserPostListFilterItems_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetFilteredUserListingItems", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetFilteredUserListingItemsResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetFilteredUserListingItemsDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginGetFilteredUserListingItems(string frameworkOperators, global::System.Nullable<global::System.Guid> userId, global::System.Nullable<bool> filtersEnabled, global::System.Nullable<bool> showResponded, global::System.Nullable<bool> showNotResponded, global::System.Nullable<global::System.DateTime> postStartDate, global::System.Nullable<global::System.DateTime> postEndDate, global::System.Nullable<global::System.DateTime> responseStartDate, global::System.Nullable<global::System.DateTime> responseEndDate, string keywords, string regionsFilter, string statesFilter, string citiesFilter, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserListingItem> EndGetFilteredUserListingItems(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/BugReportItems_Single", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/BugReportItems_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/BugReportItems_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginBugReportItems_Single(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.BugReportItem> EndBugReportItems_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/BugReportItems_SingleOrDefault", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/BugReportItems_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/BugReportItems_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginBugReportItems_SingleOrDefault(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.BugReportItem> EndBugReportItems_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/BugReportItems_All", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/BugReportItems_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/BugReportItems_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginBugReportItems_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.BugReportItem> EndBugReportItems_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserListingItemById", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserListingItemByIdResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserListingItemByIdDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginGetUserListingItemById(string frameworkOperators, global::System.Nullable<global::System.Guid> id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserListingItem> EndGetUserListingItemById(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/SubmitChanges", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/SubmitChangesResponse"),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/SubmitChangesDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSubmitChanges(global::System.Collections.Generic.IEnumerable<global::System.ServiceModel.DomainServices.Client.ChangeSetEntry> changeSet, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.Collections.Generic.IEnumerable<global::System.ServiceModel.DomainServices.Client.ChangeSetEntry> EndSubmitChanges(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/__GetEntitySetCanInformation", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/__GetEntitySetCanInformationResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/__GetEntitySetCanInformationDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Begin__GetEntitySetCanInformation(string entitySetName, global::System.AsyncCallback callback, global::System.Object asyncState);
            int End__GetEntitySetCanInformation(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/__CanExecuteOperation", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/__CanExecuteOperationResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/__CanExecuteOperationDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Begin__CanExecuteOperation(string operationName, global::System.AsyncCallback callback, global::System.Object asyncState);
            bool End__CanExecuteOperation(global::System.IAsyncResult result);
            
        }
    
        #endregion
    
        protected override global::Microsoft.LightSwitch.Internal.IEntityImplementation CreateEntityImplementation<T>()
        {
            if (typeof(T) == typeof(global::LightSwitchApplication.UserCitySelection))
            {
                return new global::LightSwitchApplication.Implementation.UserCitySelection();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.UserListingCategorySelection))
            {
                return new global::LightSwitchApplication.Implementation.UserListingCategorySelection();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.UserKeywordSelection))
            {
                return new global::LightSwitchApplication.Implementation.UserKeywordSelection();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.UserPreferenceSelection))
            {
                return new global::LightSwitchApplication.Implementation.UserPreferenceSelection();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.UserListingItem))
            {
                return new global::LightSwitchApplication.Implementation.UserListingItem();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.UserListingResponseItem))
            {
                return new global::LightSwitchApplication.Implementation.UserListingResponseItem();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.Operation))
            {
                return new global::LightSwitchApplication.Implementation.Operation();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.User))
            {
                return new global::LightSwitchApplication.Implementation.User();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.UserTemplateItem))
            {
                return new global::LightSwitchApplication.Implementation.UserTemplateItem();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.UserPostListFilterItem))
            {
                return new global::LightSwitchApplication.Implementation.UserPostListFilterItem();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.BugReportItem))
            {
                return new global::LightSwitchApplication.Implementation.BugReportItem();
            }
            return null;
        }
    }
    #endregion
    
    #region DataServiceImplementationFactory
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.IDataServiceFactory))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class DataServiceFactory :
        global::Microsoft.LightSwitch.ClientGenerated.Implementation.DataServiceFactory
    {
    
        protected override global::Microsoft.LightSwitch.IDataService CreateDataService(global::System.Type dataServiceType)
        {
            if (dataServiceType == typeof(global::LightSwitchApplication.MarketingDomainServiceData))
            {
                return new global::LightSwitchApplication.MarketingDomainServiceData();
            }
            return base.CreateDataService(dataServiceType);
        }
    
        protected override global::Microsoft.LightSwitch.Internal.IDataServiceImplementation CreateDataServiceImplementation<TDataService>(TDataService dataService)
        {
            if (typeof(TDataService) == typeof(global::LightSwitchApplication.MarketingDomainServiceData))
            {
                return new global::LightSwitchApplication.Implementation.MarketingDomainServiceData(dataService);
            }
            return base.CreateDataServiceImplementation(dataService);
        }
    }
    #endregion
    
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.ITypeMappingProvider))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class __TypeMapping
        : global::Microsoft.LightSwitch.Internal.ITypeMappingProvider
    {
        global::System.Type global::Microsoft.LightSwitch.Internal.ITypeMappingProvider.GetImplementationType(global::System.Type definitionType)
        {
            if (typeof(global::LightSwitchApplication.UserCitySelection) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.UserCitySelection);
            }
            if (typeof(global::LightSwitchApplication.UserListingCategorySelection) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.UserListingCategorySelection);
            }
            if (typeof(global::LightSwitchApplication.UserKeywordSelection) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.UserKeywordSelection);
            }
            if (typeof(global::LightSwitchApplication.UserPreferenceSelection) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.UserPreferenceSelection);
            }
            if (typeof(global::LightSwitchApplication.UserListingItem) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.UserListingItem);
            }
            if (typeof(global::LightSwitchApplication.UserListingResponseItem) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.UserListingResponseItem);
            }
            if (typeof(global::LightSwitchApplication.Operation) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.Operation);
            }
            if (typeof(global::LightSwitchApplication.User) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.User);
            }
            if (typeof(global::LightSwitchApplication.UserTemplateItem) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.UserTemplateItem);
            }
            if (typeof(global::LightSwitchApplication.UserPostListFilterItem) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.UserPostListFilterItem);
            }
            if (typeof(global::LightSwitchApplication.BugReportItem) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.BugReportItem);
            }
            return null;
        }
    }
}
