//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication.Implementation
{
    
    #region City
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/Marketing_CraigslistScraperData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class City :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.City.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string CityBaseUrl
        {
            get
            {
                return this._CityBaseUrl;
            }
            set
            {
                if (this._CityBaseUrl != value)
                {
                    this.RaiseDataMemberChanging("CityBaseUrl");
                    this.ValidateProperty("CityBaseUrl", value);
                    this._CityBaseUrl = value;
                    this.RaiseDataMemberChanged("CityBaseUrl");
                }
            }
        }
        private string _CityBaseUrl;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool Active
        {
            get
            {
                return this._Active;
            }
            set
            {
                if (this._Active != value)
                {
                    this.RaiseDataMemberChanging("Active");
                    this.ValidateProperty("Active", value);
                    this._Active = value;
                    this.RaiseDataMemberChanged("Active");
                }
            }
        }
        private bool _Active;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private global::System.Guid _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string RegionName
        {
            get
            {
                return this._RegionName;
            }
            set
            {
                if (this._RegionName != value)
                {
                    this.RaiseDataMemberChanging("RegionName");
                    this.ValidateProperty("RegionName", value);
                    this._RegionName = value;
                    this.RaiseDataMemberChanged("RegionName");
                }
            }
        }
        private string _RegionName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string CityName
        {
            get
            {
                return this._CityName;
            }
            set
            {
                if (this._CityName != value)
                {
                    this.RaiseDataMemberChanging("CityName");
                    this.ValidateProperty("CityName", value);
                    this._CityName = value;
                    this.RaiseDataMemberChanged("CityName");
                }
            }
        }
        private string _CityName;
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region UserCity
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/Marketing_CraigslistScraperData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class UserCity :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.UserCity.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool Active
        {
            get
            {
                return this._Active;
            }
            set
            {
                if (this._Active != value)
                {
                    this.RaiseDataMemberChanging("Active");
                    this.ValidateProperty("Active", value);
                    this._Active = value;
                    this.RaiseDataMemberChanged("Active");
                }
            }
        }
        private bool _Active;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private global::System.Guid _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid UserId
        {
            get
            {
                return this._UserId;
            }
            set
            {
                if (this._UserId != value)
                {
                    this.RaiseDataMemberChanging("UserId");
                    this.ValidateProperty("UserId", value);
                    this._UserId = value;
                    this.RaiseDataMemberChanged("UserId");
                }
            }
        }
        private global::System.Guid _UserId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid CityId
        {
            get
            {
                return this._CityId;
            }
            set
            {
                if (this._CityId != value)
                {
                    this.RaiseDataMemberChanging("CityId");
                    this.ValidateProperty("CityId", value);
                    this._CityId = value;
                    this.RaiseDataMemberChanged("CityId");
                }
            }
        }
        private global::System.Guid _CityId;
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region vw_aspnet_MembershipUser
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/Marketing_CraigslistScraperData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class vw_aspnet_MembershipUser :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.vw_aspnet_MembershipUser.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            if (this._UserName == null)
            {
                return null;
            }
    
            return global::System.ServiceModel.DomainServices.Client.EntityKey.Create(this._UserId, this._PasswordFormat, this._IsApproved, this._IsLockedOut, this._CreateDate, this._LastLoginDate, this._LastPasswordChangedDate, this._LastLockoutDate, this._FailedPasswordAttemptCount, this._FailedPasswordAttemptWindowStart, this._FailedPasswordAnswerAttemptCount, this._FailedPasswordAnswerAttemptWindowStart, this._ApplicationId, this._UserName, this._IsAnonymous, this._LastActivityDate);
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid UserId
        {
            get
            {
                return this._UserId;
            }
            set
            {
                if (this._UserId != value)
                {
                    this.ValidateProperty("UserId", value);
                    this._UserId = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        private global::System.Guid _UserId;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int PasswordFormat
        {
            get
            {
                return this._PasswordFormat;
            }
            set
            {
                if (this._PasswordFormat != value)
                {
                    this.ValidateProperty("PasswordFormat", value);
                    this._PasswordFormat = value;
                    this.RaisePropertyChanged("PasswordFormat");
                }
            }
        }
        private int _PasswordFormat;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string MobilePIN
        {
            get
            {
                return this._MobilePIN;
            }
            set
            {
                if (this._MobilePIN != value)
                {
                    this.RaiseDataMemberChanging("MobilePIN");
                    this.ValidateProperty("MobilePIN", value);
                    this._MobilePIN = value;
                    this.RaiseDataMemberChanged("MobilePIN");
                }
            }
        }
        private string _MobilePIN;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Email
        {
            get
            {
                return this._Email;
            }
            set
            {
                if (this._Email != value)
                {
                    this.RaiseDataMemberChanging("Email");
                    this.ValidateProperty("Email", value);
                    this._Email = value;
                    this.RaiseDataMemberChanged("Email");
                }
            }
        }
        private string _Email;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string LoweredEmail
        {
            get
            {
                return this._LoweredEmail;
            }
            set
            {
                if (this._LoweredEmail != value)
                {
                    this.RaiseDataMemberChanging("LoweredEmail");
                    this.ValidateProperty("LoweredEmail", value);
                    this._LoweredEmail = value;
                    this.RaiseDataMemberChanged("LoweredEmail");
                }
            }
        }
        private string _LoweredEmail;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string PasswordQuestion
        {
            get
            {
                return this._PasswordQuestion;
            }
            set
            {
                if (this._PasswordQuestion != value)
                {
                    this.RaiseDataMemberChanging("PasswordQuestion");
                    this.ValidateProperty("PasswordQuestion", value);
                    this._PasswordQuestion = value;
                    this.RaiseDataMemberChanged("PasswordQuestion");
                }
            }
        }
        private string _PasswordQuestion;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string PasswordAnswer
        {
            get
            {
                return this._PasswordAnswer;
            }
            set
            {
                if (this._PasswordAnswer != value)
                {
                    this.RaiseDataMemberChanging("PasswordAnswer");
                    this.ValidateProperty("PasswordAnswer", value);
                    this._PasswordAnswer = value;
                    this.RaiseDataMemberChanged("PasswordAnswer");
                }
            }
        }
        private string _PasswordAnswer;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool IsApproved
        {
            get
            {
                return this._IsApproved;
            }
            set
            {
                if (this._IsApproved != value)
                {
                    this.ValidateProperty("IsApproved", value);
                    this._IsApproved = value;
                    this.RaisePropertyChanged("IsApproved");
                }
            }
        }
        private bool _IsApproved;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool IsLockedOut
        {
            get
            {
                return this._IsLockedOut;
            }
            set
            {
                if (this._IsLockedOut != value)
                {
                    this.ValidateProperty("IsLockedOut", value);
                    this._IsLockedOut = value;
                    this.RaisePropertyChanged("IsLockedOut");
                }
            }
        }
        private bool _IsLockedOut;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return this._CreateDate;
            }
            set
            {
                if (this._CreateDate != value)
                {
                    this.ValidateProperty("CreateDate", value);
                    this._CreateDate = value;
                    this.RaisePropertyChanged("CreateDate");
                }
            }
        }
        private global::System.DateTime _CreateDate;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime LastLoginDate
        {
            get
            {
                return this._LastLoginDate;
            }
            set
            {
                if (this._LastLoginDate != value)
                {
                    this.ValidateProperty("LastLoginDate", value);
                    this._LastLoginDate = value;
                    this.RaisePropertyChanged("LastLoginDate");
                }
            }
        }
        private global::System.DateTime _LastLoginDate;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime LastPasswordChangedDate
        {
            get
            {
                return this._LastPasswordChangedDate;
            }
            set
            {
                if (this._LastPasswordChangedDate != value)
                {
                    this.ValidateProperty("LastPasswordChangedDate", value);
                    this._LastPasswordChangedDate = value;
                    this.RaisePropertyChanged("LastPasswordChangedDate");
                }
            }
        }
        private global::System.DateTime _LastPasswordChangedDate;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime LastLockoutDate
        {
            get
            {
                return this._LastLockoutDate;
            }
            set
            {
                if (this._LastLockoutDate != value)
                {
                    this.ValidateProperty("LastLockoutDate", value);
                    this._LastLockoutDate = value;
                    this.RaisePropertyChanged("LastLockoutDate");
                }
            }
        }
        private global::System.DateTime _LastLockoutDate;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int FailedPasswordAttemptCount
        {
            get
            {
                return this._FailedPasswordAttemptCount;
            }
            set
            {
                if (this._FailedPasswordAttemptCount != value)
                {
                    this.ValidateProperty("FailedPasswordAttemptCount", value);
                    this._FailedPasswordAttemptCount = value;
                    this.RaisePropertyChanged("FailedPasswordAttemptCount");
                }
            }
        }
        private int _FailedPasswordAttemptCount;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime FailedPasswordAttemptWindowStart
        {
            get
            {
                return this._FailedPasswordAttemptWindowStart;
            }
            set
            {
                if (this._FailedPasswordAttemptWindowStart != value)
                {
                    this.ValidateProperty("FailedPasswordAttemptWindowStart", value);
                    this._FailedPasswordAttemptWindowStart = value;
                    this.RaisePropertyChanged("FailedPasswordAttemptWindowStart");
                }
            }
        }
        private global::System.DateTime _FailedPasswordAttemptWindowStart;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int FailedPasswordAnswerAttemptCount
        {
            get
            {
                return this._FailedPasswordAnswerAttemptCount;
            }
            set
            {
                if (this._FailedPasswordAnswerAttemptCount != value)
                {
                    this.ValidateProperty("FailedPasswordAnswerAttemptCount", value);
                    this._FailedPasswordAnswerAttemptCount = value;
                    this.RaisePropertyChanged("FailedPasswordAnswerAttemptCount");
                }
            }
        }
        private int _FailedPasswordAnswerAttemptCount;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime FailedPasswordAnswerAttemptWindowStart
        {
            get
            {
                return this._FailedPasswordAnswerAttemptWindowStart;
            }
            set
            {
                if (this._FailedPasswordAnswerAttemptWindowStart != value)
                {
                    this.ValidateProperty("FailedPasswordAnswerAttemptWindowStart", value);
                    this._FailedPasswordAnswerAttemptWindowStart = value;
                    this.RaisePropertyChanged("FailedPasswordAnswerAttemptWindowStart");
                }
            }
        }
        private global::System.DateTime _FailedPasswordAnswerAttemptWindowStart;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Comment
        {
            get
            {
                return this._Comment;
            }
            set
            {
                if (this._Comment != value)
                {
                    this.RaiseDataMemberChanging("Comment");
                    this.ValidateProperty("Comment", value);
                    this._Comment = value;
                    this.RaiseDataMemberChanged("Comment");
                }
            }
        }
        private string _Comment;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return this._ApplicationId;
            }
            set
            {
                if (this._ApplicationId != value)
                {
                    this.ValidateProperty("ApplicationId", value);
                    this._ApplicationId = value;
                    this.RaisePropertyChanged("ApplicationId");
                }
            }
        }
        private global::System.Guid _ApplicationId;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string UserName
        {
            get
            {
                return this._UserName;
            }
            set
            {
                if (this._UserName != value)
                {
                    this.ValidateProperty("UserName", value);
                    this._UserName = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        private string _UserName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string MobileAlias
        {
            get
            {
                return this._MobileAlias;
            }
            set
            {
                if (this._MobileAlias != value)
                {
                    this.RaiseDataMemberChanging("MobileAlias");
                    this.ValidateProperty("MobileAlias", value);
                    this._MobileAlias = value;
                    this.RaiseDataMemberChanged("MobileAlias");
                }
            }
        }
        private string _MobileAlias;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool IsAnonymous
        {
            get
            {
                return this._IsAnonymous;
            }
            set
            {
                if (this._IsAnonymous != value)
                {
                    this.ValidateProperty("IsAnonymous", value);
                    this._IsAnonymous = value;
                    this.RaisePropertyChanged("IsAnonymous");
                }
            }
        }
        private bool _IsAnonymous;
        
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return this._LastActivityDate;
            }
            set
            {
                if (this._LastActivityDate != value)
                {
                    this.ValidateProperty("LastActivityDate", value);
                    this._LastActivityDate = value;
                    this.RaisePropertyChanged("LastActivityDate");
                }
            }
        }
        private global::System.DateTime _LastActivityDate;
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region UserCitySelection
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/MarketingDomainServiceData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class UserCitySelection :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.UserCitySelection.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private global::System.Guid _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool Selected
        {
            get
            {
                return this._Selected;
            }
            set
            {
                if (this._Selected != value)
                {
                    this.RaiseDataMemberChanging("Selected");
                    this.ValidateProperty("Selected", value);
                    this._Selected = value;
                    this.RaiseDataMemberChanged("Selected");
                }
            }
        }
        private bool _Selected;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid CityId
        {
            get
            {
                return this._CityId;
            }
            set
            {
                if (this._CityId != value)
                {
                    this.RaiseDataMemberChanging("CityId");
                    this.ValidateProperty("CityId", value);
                    this._CityId = value;
                    this.RaiseDataMemberChanged("CityId");
                }
            }
        }
        private global::System.Guid _CityId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid UserId
        {
            get
            {
                return this._UserId;
            }
            set
            {
                if (this._UserId != value)
                {
                    this.RaiseDataMemberChanging("UserId");
                    this.ValidateProperty("UserId", value);
                    this._UserId = value;
                    this.RaiseDataMemberChanged("UserId");
                }
            }
        }
        private global::System.Guid _UserId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string CityName
        {
            get
            {
                return this._CityName;
            }
            set
            {
                if (this._CityName != value)
                {
                    this.RaiseDataMemberChanging("CityName");
                    this.ValidateProperty("CityName", value);
                    this._CityName = value;
                    this.RaiseDataMemberChanged("CityName");
                }
            }
        }
        private string _CityName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string RegionName
        {
            get
            {
                return this._RegionName;
            }
            set
            {
                if (this._RegionName != value)
                {
                    this.RaiseDataMemberChanging("RegionName");
                    this.ValidateProperty("RegionName", value);
                    this._RegionName = value;
                    this.RaiseDataMemberChanged("RegionName");
                }
            }
        }
        private string _RegionName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool Active
        {
            get
            {
                return this._Active;
            }
            set
            {
                if (this._Active != value)
                {
                    this.RaiseDataMemberChanging("Active");
                    this.ValidateProperty("Active", value);
                    this._Active = value;
                    this.RaiseDataMemberChanged("Active");
                }
            }
        }
        private bool _Active;
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region UserListingCategorySelection
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/MarketingDomainServiceData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class UserListingCategorySelection :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.UserListingCategorySelection.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private global::System.Guid _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool Selected
        {
            get
            {
                return this._Selected;
            }
            set
            {
                if (this._Selected != value)
                {
                    this.RaiseDataMemberChanging("Selected");
                    this.ValidateProperty("Selected", value);
                    this._Selected = value;
                    this.RaiseDataMemberChanged("Selected");
                }
            }
        }
        private bool _Selected;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string CategoryName
        {
            get
            {
                return this._CategoryName;
            }
            set
            {
                if (this._CategoryName != value)
                {
                    this.RaiseDataMemberChanging("CategoryName");
                    this.ValidateProperty("CategoryName", value);
                    this._CategoryName = value;
                    this.RaiseDataMemberChanged("CategoryName");
                }
            }
        }
        private string _CategoryName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string GroupName
        {
            get
            {
                return this._GroupName;
            }
            set
            {
                if (this._GroupName != value)
                {
                    this.RaiseDataMemberChanging("GroupName");
                    this.ValidateProperty("GroupName", value);
                    this._GroupName = value;
                    this.RaiseDataMemberChanged("GroupName");
                }
            }
        }
        private string _GroupName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool Active
        {
            get
            {
                return this._Active;
            }
            set
            {
                if (this._Active != value)
                {
                    this.RaiseDataMemberChanging("Active");
                    this.ValidateProperty("Active", value);
                    this._Active = value;
                    this.RaiseDataMemberChanged("Active");
                }
            }
        }
        private bool _Active;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid UserId
        {
            get
            {
                return this._UserId;
            }
            set
            {
                if (this._UserId != value)
                {
                    this.RaiseDataMemberChanging("UserId");
                    this.ValidateProperty("UserId", value);
                    this._UserId = value;
                    this.RaiseDataMemberChanged("UserId");
                }
            }
        }
        private global::System.Guid _UserId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid CategoryId
        {
            get
            {
                return this._CategoryId;
            }
            set
            {
                if (this._CategoryId != value)
                {
                    this.RaiseDataMemberChanging("CategoryId");
                    this.ValidateProperty("CategoryId", value);
                    this._CategoryId = value;
                    this.RaiseDataMemberChanged("CategoryId");
                }
            }
        }
        private global::System.Guid _CategoryId;
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region UserKeywordSelection
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/MarketingDomainServiceData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class UserKeywordSelection :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.UserKeywordSelection.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private global::System.Guid _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Keyword
        {
            get
            {
                return this._Keyword;
            }
            set
            {
                if (this._Keyword != value)
                {
                    this.RaiseDataMemberChanging("Keyword");
                    this.ValidateProperty("Keyword", value);
                    this._Keyword = value;
                    this.RaiseDataMemberChanged("Keyword");
                }
            }
        }
        private string _Keyword;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public int WeightedScore
        {
            get
            {
                return this._WeightedScore;
            }
            set
            {
                if (this._WeightedScore != value)
                {
                    this.RaiseDataMemberChanging("WeightedScore");
                    this.ValidateProperty("WeightedScore", value);
                    this._WeightedScore = value;
                    this.RaiseDataMemberChanged("WeightedScore");
                }
            }
        }
        private int _WeightedScore;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid UserId
        {
            get
            {
                return this._UserId;
            }
            set
            {
                if (this._UserId != value)
                {
                    this.RaiseDataMemberChanging("UserId");
                    this.ValidateProperty("UserId", value);
                    this._UserId = value;
                    this.RaiseDataMemberChanged("UserId");
                }
            }
        }
        private global::System.Guid _UserId;
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region UserPreferenceSelection
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/MarketingDomainServiceData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class UserPreferenceSelection :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private global::System.Guid _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid UserId
        {
            get
            {
                return this._UserId;
            }
            set
            {
                if (this._UserId != value)
                {
                    this.RaiseDataMemberChanging("UserId");
                    this.ValidateProperty("UserId", value);
                    this._UserId = value;
                    this.RaiseDataMemberChanged("UserId");
                }
            }
        }
        private global::System.Guid _UserId;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public bool LiveMode
        {
            get
            {
                return this._LiveMode;
            }
            set
            {
                if (this._LiveMode != value)
                {
                    this.RaiseDataMemberChanging("LiveMode");
                    this.ValidateProperty("LiveMode", value);
                    this._LiveMode = value;
                    this.RaiseDataMemberChanged("LiveMode");
                }
            }
        }
        private bool _LiveMode;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string BCCEmailAddress
        {
            get
            {
                return this._BCCEmailAddress;
            }
            set
            {
                if (this._BCCEmailAddress != value)
                {
                    this.RaiseDataMemberChanging("BCCEmailAddress");
                    this.ValidateProperty("BCCEmailAddress", value);
                    this._BCCEmailAddress = value;
                    this.RaiseDataMemberChanged("BCCEmailAddress");
                }
            }
        }
        private string _BCCEmailAddress;
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region UserListingItem
    [global::System.Runtime.Serialization.DataContract(Namespace = "http://schemas.datacontract.org/2004/07/MarketingDomainServiceData.Implementation")]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class UserListingItem :
        global::System.ServiceModel.DomainServices.Client.Entity,
        global::LightSwitchApplication.UserListingItem.DetailsClass.IImplementation
    {
        public override object GetIdentity()
        {
            if (this.__host != null && this.__host.IsNewlyAdded)
            {
                return null;
            }
    
            return this._Id;
        }
        [global::System.ComponentModel.DataAnnotations.Key()]
        [global::System.ComponentModel.DataAnnotations.Editable(false, AllowInitialValue = true)]
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid Id
        {
            get
            {
                return this._Id;
            }
            set
            {
                if (this._Id != value)
                {
                    this.ValidateProperty("Id", value);
                    this._Id = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        private global::System.Guid _Id;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string Title
        {
            get
            {
                return this._Title;
            }
            set
            {
                if (this._Title != value)
                {
                    this.RaiseDataMemberChanging("Title");
                    this.ValidateProperty("Title", value);
                    this._Title = value;
                    this.RaiseDataMemberChanged("Title");
                }
            }
        }
        private string _Title;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string CategoryName
        {
            get
            {
                return this._CategoryName;
            }
            set
            {
                if (this._CategoryName != value)
                {
                    this.RaiseDataMemberChanging("CategoryName");
                    this.ValidateProperty("CategoryName", value);
                    this._CategoryName = value;
                    this.RaiseDataMemberChanged("CategoryName");
                }
            }
        }
        private string _CategoryName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string GroupName
        {
            get
            {
                return this._GroupName;
            }
            set
            {
                if (this._GroupName != value)
                {
                    this.RaiseDataMemberChanging("GroupName");
                    this.ValidateProperty("GroupName", value);
                    this._GroupName = value;
                    this.RaiseDataMemberChanged("GroupName");
                }
            }
        }
        private string _GroupName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string RegionName
        {
            get
            {
                return this._RegionName;
            }
            set
            {
                if (this._RegionName != value)
                {
                    this.RaiseDataMemberChanging("RegionName");
                    this.ValidateProperty("RegionName", value);
                    this._RegionName = value;
                    this.RaiseDataMemberChanged("RegionName");
                }
            }
        }
        private string _RegionName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string CityName
        {
            get
            {
                return this._CityName;
            }
            set
            {
                if (this._CityName != value)
                {
                    this.RaiseDataMemberChanging("CityName");
                    this.ValidateProperty("CityName", value);
                    this._CityName = value;
                    this.RaiseDataMemberChanged("CityName");
                }
            }
        }
        private string _CityName;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.DateTime Created
        {
            get
            {
                return this._Created;
            }
            set
            {
                if (this._Created != value)
                {
                    this.RaiseDataMemberChanging("Created");
                    this.ValidateProperty("Created", value);
                    this._Created = value;
                    this.RaiseDataMemberChanged("Created");
                }
            }
        }
        private global::System.DateTime _Created;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public string PostElement
        {
            get
            {
                return this._PostElement;
            }
            set
            {
                if (this._PostElement != value)
                {
                    this.RaiseDataMemberChanging("PostElement");
                    this.ValidateProperty("PostElement", value);
                    this._PostElement = value;
                    this.RaiseDataMemberChanged("PostElement");
                }
            }
        }
        private string _PostElement;
        
        [global::System.Runtime.Serialization.DataMember()]
        [global::System.ComponentModel.DataAnnotations.RoundtripOriginal()]
        public global::System.Guid UserId
        {
            get
            {
                return this._UserId;
            }
            set
            {
                if (this._UserId != value)
                {
                    this.RaiseDataMemberChanging("UserId");
                    this.ValidateProperty("UserId", value);
                    this._UserId = value;
                    this.RaiseDataMemberChanged("UserId");
                }
            }
        }
        private global::System.Guid _UserId;
        
        #region IEntityImplementation Members
        private global::Microsoft.LightSwitch.Internal.IEntityImplementationHost __host;
        
        global::Microsoft.LightSwitch.Internal.IEntityImplementationHost global::Microsoft.LightSwitch.Internal.IEntityImplementation.Host
        {
            get
            {
                return this.__host;
            }
        }
        
        void global::Microsoft.LightSwitch.Internal.IEntityImplementation.Initialize(global::Microsoft.LightSwitch.Internal.IEntityImplementationHost host)
        {
            this.__host = host;
        }
        
        protected override void OnPropertyChanged(global::System.ComponentModel.PropertyChangedEventArgs e)
        {
            base.OnPropertyChanged(e);
            if (this.__host != null)
            {
                this.__host.RaisePropertyChanged(e.PropertyName);
            }
        }
        #endregion
    }
    #endregion
    
    #region Marketing_CraigslistScraperData
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class Marketing_CraigslistScraperData
        : global::Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext
    {
        public Marketing_CraigslistScraperData(global::Microsoft.LightSwitch.IDataService dataService)
            : base(dataService, global::Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext.CreateWcfDomainClient<IMarketing_CraigslistScraperDataContract>(new global::System.Uri("LightSwitchApplication-Implementation-Marketing_CraigslistScraperDataDomainService.svc", global::System.UriKind.Relative)))
        {
        }
    
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.City> CityEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.City>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.UserCity> UserCityEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.UserCity>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.vw_aspnet_MembershipUser> vw_aspnet_MembershipUserEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.vw_aspnet_MembershipUser>();
            }
        }
        protected override global::System.ServiceModel.DomainServices.Client.EntityContainer CreateEntityContainer()
        {
            return new Marketing_CraigslistScraperDataEntityContainer();
        }
    
        internal sealed class Marketing_CraigslistScraperDataEntityContainer : global::System.ServiceModel.DomainServices.Client.EntityContainer
        {
            public Marketing_CraigslistScraperDataEntityContainer()
            {
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.City>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.UserCity>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.vw_aspnet_MembershipUser>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
            }
        }
    
        #region Service Contract Interface
    
        [global::System.ServiceModel.ServiceContract]
        public interface IMarketing_CraigslistScraperDataContract
        {
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/Cities_Single", ReplyAction = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/Cities_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/Cities_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCities_Single(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.City> EndCities_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/Cities_SingleOrDefault", ReplyAction = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/Cities_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/Cities_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCities_SingleOrDefault(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.City> EndCities_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/Cities_All", ReplyAction = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/Cities_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/Cities_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginCities_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.City> EndCities_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/UserCities_Single", ReplyAction = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/UserCities_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/UserCities_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserCities_Single(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserCity> EndUserCities_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/UserCities_SingleOrDefault", ReplyAction = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/UserCities_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/UserCities_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserCities_SingleOrDefault(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserCity> EndUserCities_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/UserCities_All", ReplyAction = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/UserCities_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/UserCities_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserCities_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserCity> EndUserCities_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/vw_aspnet_MembershipUsers_Single", ReplyAction = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/vw_aspnet_MembershipUsers_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/vw_aspnet_MembershipUsers_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Beginvw_aspnet_MembershipUsers_Single(string frameworkOperators, global::System.Nullable<global::System.Guid> UserId, global::System.Nullable<int> PasswordFormat, global::System.Nullable<bool> IsApproved, global::System.Nullable<bool> IsLockedOut, global::System.Nullable<global::System.DateTime> CreateDate, global::System.Nullable<global::System.DateTime> LastLoginDate, global::System.Nullable<global::System.DateTime> LastPasswordChangedDate, global::System.Nullable<global::System.DateTime> LastLockoutDate, global::System.Nullable<int> FailedPasswordAttemptCount, global::System.Nullable<global::System.DateTime> FailedPasswordAttemptWindowStart, global::System.Nullable<int> FailedPasswordAnswerAttemptCount, global::System.Nullable<global::System.DateTime> FailedPasswordAnswerAttemptWindowStart, global::System.Nullable<global::System.Guid> ApplicationId, string UserName, global::System.Nullable<bool> IsAnonymous, global::System.Nullable<global::System.DateTime> LastActivityDate, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.vw_aspnet_MembershipUser> Endvw_aspnet_MembershipUsers_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/vw_aspnet_MembershipUsers_SingleOrDefault", ReplyAction = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/vw_aspnet_MembershipUsers_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/vw_aspnet_MembershipUsers_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Beginvw_aspnet_MembershipUsers_SingleOrDefault(string frameworkOperators, global::System.Nullable<global::System.Guid> UserId, global::System.Nullable<int> PasswordFormat, global::System.Nullable<bool> IsApproved, global::System.Nullable<bool> IsLockedOut, global::System.Nullable<global::System.DateTime> CreateDate, global::System.Nullable<global::System.DateTime> LastLoginDate, global::System.Nullable<global::System.DateTime> LastPasswordChangedDate, global::System.Nullable<global::System.DateTime> LastLockoutDate, global::System.Nullable<int> FailedPasswordAttemptCount, global::System.Nullable<global::System.DateTime> FailedPasswordAttemptWindowStart, global::System.Nullable<int> FailedPasswordAnswerAttemptCount, global::System.Nullable<global::System.DateTime> FailedPasswordAnswerAttemptWindowStart, global::System.Nullable<global::System.Guid> ApplicationId, string UserName, global::System.Nullable<bool> IsAnonymous, global::System.Nullable<global::System.DateTime> LastActivityDate, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.vw_aspnet_MembershipUser> Endvw_aspnet_MembershipUsers_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/vw_aspnet_MembershipUsers_All", ReplyAction = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/vw_aspnet_MembershipUsers_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/vw_aspnet_MembershipUsers_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Beginvw_aspnet_MembershipUsers_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.vw_aspnet_MembershipUser> Endvw_aspnet_MembershipUsers_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/SubmitChanges", ReplyAction = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/SubmitChangesResponse"),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/SubmitChangesDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSubmitChanges(global::System.Collections.Generic.IEnumerable<global::System.ServiceModel.DomainServices.Client.ChangeSetEntry> changeSet, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.Collections.Generic.IEnumerable<global::System.ServiceModel.DomainServices.Client.ChangeSetEntry> EndSubmitChanges(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/__GetEntitySetCanInformation", ReplyAction = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/__GetEntitySetCanInformationResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/__GetEntitySetCanInformationDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Begin__GetEntitySetCanInformation(string entitySetName, global::System.AsyncCallback callback, global::System.Object asyncState);
            int End__GetEntitySetCanInformation(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/__CanExecuteOperation", ReplyAction = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/__CanExecuteOperationResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/Marketing_CraigslistScraperDataDomainService/__CanExecuteOperationDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Begin__CanExecuteOperation(string operationName, global::System.AsyncCallback callback, global::System.Object asyncState);
            bool End__CanExecuteOperation(global::System.IAsyncResult result);
            
        }
    
        #endregion
    
        protected override global::Microsoft.LightSwitch.Internal.IEntityImplementation CreateEntityImplementation<T>()
        {
            if (typeof(T) == typeof(global::LightSwitchApplication.City))
            {
                return new global::LightSwitchApplication.Implementation.City();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.UserCity))
            {
                return new global::LightSwitchApplication.Implementation.UserCity();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.vw_aspnet_MembershipUser))
            {
                return new global::LightSwitchApplication.Implementation.vw_aspnet_MembershipUser();
            }
            return null;
        }
    }
    #endregion
    
    #region MarketingDomainServiceData
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class MarketingDomainServiceData
        : global::Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext
    {
        public MarketingDomainServiceData(global::Microsoft.LightSwitch.IDataService dataService)
            : base(dataService, global::Microsoft.LightSwitch.ClientGenerated.Implementation.DomainContext.CreateWcfDomainClient<IMarketingDomainServiceDataContract>(new global::System.Uri("LightSwitchApplication-Implementation-MarketingDomainServiceDataDomainService.svc", global::System.UriKind.Relative)))
        {
        }
    
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.UserCitySelection> UserCitySelectionEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.UserCitySelection>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.UserListingCategorySelection> UserListingCategorySelectionEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.UserListingCategorySelection>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.UserKeywordSelection> UserKeywordSelectionEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.UserKeywordSelection>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.UserPreferenceSelection> UserPreferenceSelectionEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.UserPreferenceSelection>();
            }
        }
        public global::System.ServiceModel.DomainServices.Client.EntitySet<global::LightSwitchApplication.Implementation.UserListingItem> UserListingItemEntityList
        {
            get
            {
                return base.EntityContainer.GetEntitySet<global::LightSwitchApplication.Implementation.UserListingItem>();
            }
        }
        protected override global::System.ServiceModel.DomainServices.Client.EntityContainer CreateEntityContainer()
        {
            return new MarketingDomainServiceDataEntityContainer();
        }
    
        internal sealed class MarketingDomainServiceDataEntityContainer : global::System.ServiceModel.DomainServices.Client.EntityContainer
        {
            public MarketingDomainServiceDataEntityContainer()
            {
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.UserCitySelection>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.UserListingCategorySelection>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.UserKeywordSelection>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.UserPreferenceSelection>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
                this.CreateEntitySet<global::LightSwitchApplication.Implementation.UserListingItem>(global::System.ServiceModel.DomainServices.Client.EntitySetOperations.All);
            }
        }
    
        #region Service Contract Interface
    
        [global::System.ServiceModel.ServiceContract]
        public interface IMarketingDomainServiceDataContract
        {
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserCitySelections_Single", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserCitySelections_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserCitySelections_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserCitySelections_Single(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserCitySelection> EndUserCitySelections_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserCitySelections_SingleOrDefault", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserCitySelections_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserCitySelections_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserCitySelections_SingleOrDefault(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserCitySelection> EndUserCitySelections_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserCitySelections_All", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserCitySelections_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserCitySelections_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserCitySelections_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserCitySelection> EndUserCitySelections_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserCitySelections", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserCitySelectionsResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserCitySelectionsDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginGetUserCitySelections(string frameworkOperators, global::System.Nullable<global::System.Guid> userId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserCitySelection> EndGetUserCitySelections(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingCategorySelections_Single", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingCategorySelections_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingCategorySelections_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserListingCategorySelections_Single(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserListingCategorySelection> EndUserListingCategorySelections_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingCategorySelections_SingleOrDefault", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingCategorySelections_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingCategorySelections_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserListingCategorySelections_SingleOrDefault(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserListingCategorySelection> EndUserListingCategorySelections_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingCategorySelections_All", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingCategorySelections_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingCategorySelections_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserListingCategorySelections_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserListingCategorySelection> EndUserListingCategorySelections_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserCategorySelections", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserCategorySelectionsResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserCategorySelectionsDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginGetUserCategorySelections(string frameworkOperators, global::System.Nullable<global::System.Guid> userId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserListingCategorySelection> EndGetUserCategorySelections(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserKeywordSelections_Single", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserKeywordSelections_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserKeywordSelections_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserKeywordSelections_Single(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserKeywordSelection> EndUserKeywordSelections_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserKeywordSelections_SingleOrDefault", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserKeywordSelections_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserKeywordSelections_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserKeywordSelections_SingleOrDefault(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserKeywordSelection> EndUserKeywordSelections_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserKeywordSelections_All", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserKeywordSelections_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserKeywordSelections_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserKeywordSelections_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserKeywordSelection> EndUserKeywordSelections_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserKeywordSelections", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserKeywordSelectionsResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserKeywordSelectionsDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginGetUserKeywordSelections(string frameworkOperators, global::System.Nullable<global::System.Guid> userId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserKeywordSelection> EndGetUserKeywordSelections(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserPreferenceSelectionByUserId", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserPreferenceSelectionByUserIdResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserPreferenceSelectionByUserIdDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginGetUserPreferenceSelectionByUserId(string frameworkOperators, global::System.Nullable<global::System.Guid> userId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserPreferenceSelection> EndGetUserPreferenceSelectionByUserId(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserPreferenceSelections_Single", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserPreferenceSelections_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserPreferenceSelections_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserPreferenceSelections_Single(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserPreferenceSelection> EndUserPreferenceSelections_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserPreferenceSelections_SingleOrDefault", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserPreferenceSelections_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserPreferenceSelections_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserPreferenceSelections_SingleOrDefault(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserPreferenceSelection> EndUserPreferenceSelections_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserPreferenceSelections_All", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserPreferenceSelections_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserPreferenceSelections_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserPreferenceSelections_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserPreferenceSelection> EndUserPreferenceSelections_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingItems_Single", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingItems_SingleResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingItems_SingleDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserListingItems_Single(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserListingItem> EndUserListingItems_Single(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingItems_SingleOrDefault", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingItems_SingleOrDefaultResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingItems_SingleOrDefaultDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserListingItems_SingleOrDefault(string frameworkOperators, global::System.Nullable<global::System.Guid> Id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserListingItem> EndUserListingItems_SingleOrDefault(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingItems_All", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingItems_AllResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/UserListingItems_AllDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginUserListingItems_All(string frameworkOperators, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserListingItem> EndUserListingItems_All(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserListingItems", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserListingItemsResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserListingItemsDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginGetUserListingItems(string frameworkOperators, global::System.Nullable<global::System.Guid> userId, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserListingItem> EndGetUserListingItems(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserListingItemById", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserListingItemByIdResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/GetUserListingItemByIdDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginGetUserListingItemById(string frameworkOperators, global::System.Nullable<global::System.Guid> id, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.ServiceModel.DomainServices.Client.QueryResult<global::LightSwitchApplication.Implementation.UserListingItem> EndGetUserListingItemById(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/SubmitChanges", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/SubmitChangesResponse"),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/SubmitChangesDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult BeginSubmitChanges(global::System.Collections.Generic.IEnumerable<global::System.ServiceModel.DomainServices.Client.ChangeSetEntry> changeSet, global::System.AsyncCallback callback, global::System.Object asyncState);
            global::System.Collections.Generic.IEnumerable<global::System.ServiceModel.DomainServices.Client.ChangeSetEntry> EndSubmitChanges(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/__GetEntitySetCanInformation", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/__GetEntitySetCanInformationResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/__GetEntitySetCanInformationDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Begin__GetEntitySetCanInformation(string entitySetName, global::System.AsyncCallback callback, global::System.Object asyncState);
            int End__GetEntitySetCanInformation(global::System.IAsyncResult result);
            
            [global::System.ServiceModel.OperationContract(AsyncPattern = true, Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/__CanExecuteOperation", ReplyAction = "http://tempuri.org/MarketingDomainServiceDataDomainService/__CanExecuteOperationResponse"),
             global::System.ServiceModel.Web.WebGet(),
             global::System.ServiceModel.FaultContract(typeof(global::System.ServiceModel.DomainServices.Client.DomainServiceFault), Action = "http://tempuri.org/MarketingDomainServiceDataDomainService/__CanExecuteOperationDomainServiceFault", Name = "DomainServiceFault", Namespace = "DomainServices")]
            global::System.IAsyncResult Begin__CanExecuteOperation(string operationName, global::System.AsyncCallback callback, global::System.Object asyncState);
            bool End__CanExecuteOperation(global::System.IAsyncResult result);
            
        }
    
        #endregion
    
        protected override global::Microsoft.LightSwitch.Internal.IEntityImplementation CreateEntityImplementation<T>()
        {
            if (typeof(T) == typeof(global::LightSwitchApplication.UserCitySelection))
            {
                return new global::LightSwitchApplication.Implementation.UserCitySelection();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.UserListingCategorySelection))
            {
                return new global::LightSwitchApplication.Implementation.UserListingCategorySelection();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.UserKeywordSelection))
            {
                return new global::LightSwitchApplication.Implementation.UserKeywordSelection();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.UserPreferenceSelection))
            {
                return new global::LightSwitchApplication.Implementation.UserPreferenceSelection();
            }
            if (typeof(T) == typeof(global::LightSwitchApplication.UserListingItem))
            {
                return new global::LightSwitchApplication.Implementation.UserListingItem();
            }
            return null;
        }
    }
    #endregion
    
    #region DataServiceImplementationFactory
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.IDataServiceFactory))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class DataServiceFactory :
        global::Microsoft.LightSwitch.ClientGenerated.Implementation.DataServiceFactory
    {
    
        protected override global::Microsoft.LightSwitch.IDataService CreateDataService(global::System.Type dataServiceType)
        {
            if (dataServiceType == typeof(global::LightSwitchApplication.Marketing_CraigslistScraperData))
            {
                return new global::LightSwitchApplication.Marketing_CraigslistScraperData();
            }
            if (dataServiceType == typeof(global::LightSwitchApplication.MarketingDomainServiceData))
            {
                return new global::LightSwitchApplication.MarketingDomainServiceData();
            }
            return base.CreateDataService(dataServiceType);
        }
    
        protected override global::Microsoft.LightSwitch.Internal.IDataServiceImplementation CreateDataServiceImplementation<TDataService>(TDataService dataService)
        {
            if (typeof(TDataService) == typeof(global::LightSwitchApplication.Marketing_CraigslistScraperData))
            {
                return new global::LightSwitchApplication.Implementation.Marketing_CraigslistScraperData(dataService);
            }
            if (typeof(TDataService) == typeof(global::LightSwitchApplication.MarketingDomainServiceData))
            {
                return new global::LightSwitchApplication.Implementation.MarketingDomainServiceData(dataService);
            }
            return base.CreateDataServiceImplementation(dataService);
        }
    }
    #endregion
    
    [global::System.ComponentModel.Composition.PartCreationPolicy(global::System.ComponentModel.Composition.CreationPolicy.Shared)]
    [global::System.ComponentModel.Composition.Export(typeof(global::Microsoft.LightSwitch.Internal.ITypeMappingProvider))]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public class __TypeMapping
        : global::Microsoft.LightSwitch.Internal.ITypeMappingProvider
    {
        global::System.Type global::Microsoft.LightSwitch.Internal.ITypeMappingProvider.GetImplementationType(global::System.Type definitionType)
        {
            if (typeof(global::LightSwitchApplication.City) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.City);
            }
            if (typeof(global::LightSwitchApplication.UserCity) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.UserCity);
            }
            if (typeof(global::LightSwitchApplication.vw_aspnet_MembershipUser) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.vw_aspnet_MembershipUser);
            }
            if (typeof(global::LightSwitchApplication.UserCitySelection) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.UserCitySelection);
            }
            if (typeof(global::LightSwitchApplication.UserListingCategorySelection) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.UserListingCategorySelection);
            }
            if (typeof(global::LightSwitchApplication.UserKeywordSelection) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.UserKeywordSelection);
            }
            if (typeof(global::LightSwitchApplication.UserPreferenceSelection) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.UserPreferenceSelection);
            }
            if (typeof(global::LightSwitchApplication.UserListingItem) == definitionType)
            {
                return typeof(global::LightSwitchApplication.Implementation.UserListingItem);
            }
            return null;
        }
    }
}
