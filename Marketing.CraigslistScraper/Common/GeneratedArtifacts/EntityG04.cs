

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class UserPreferenceSelection : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the UserPreferenceSelection entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UserPreferenceSelection()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UserPreferenceSelection(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.UserPreferenceSelection> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelection_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelection_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.GetValue(this, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.SetValue(this, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.GetValue(this, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.UserId);
            }
            set
            {
                global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.SetValue(this, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.UserId, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserId_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserId_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserId_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool LiveMode
        {
            get
            {
                return global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.GetValue(this, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.LiveMode);
            }
            set
            {
                global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.SetValue(this, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.LiveMode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LiveMode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LiveMode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LiveMode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string BCCEmailAddress
        {
            get
            {
                return global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.GetValue(this, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.BCCEmailAddress);
            }
            set
            {
                global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.SetValue(this, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.BCCEmailAddress, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BCCEmailAddress_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BCCEmailAddress_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BCCEmailAddress_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SMTPUsername
        {
            get
            {
                return global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.GetValue(this, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.SMTPUsername);
            }
            set
            {
                global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.SetValue(this, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.SMTPUsername, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SMTPUsername_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SMTPUsername_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SMTPUsername_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SMTPServer
        {
            get
            {
                return global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.GetValue(this, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.SMTPServer);
            }
            set
            {
                global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.SetValue(this, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.SMTPServer, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SMTPServer_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SMTPServer_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SMTPServer_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int SMTPPort
        {
            get
            {
                return global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.GetValue(this, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.SMTPPort);
            }
            set
            {
                global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.SetValue(this, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.SMTPPort, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SMTPPort_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SMTPPort_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SMTPPort_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool RequiresSSL
        {
            get
            {
                return global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.GetValue(this, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.RequiresSSL);
            }
            set
            {
                global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.SetValue(this, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.RequiresSSL, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RequiresSSL_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RequiresSSL_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RequiresSSL_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SMTPPassword
        {
            get
            {
                return global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.GetValue(this, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.SMTPPassword);
            }
            set
            {
                global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.SetValue(this, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.SMTPPassword, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SMTPPassword_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SMTPPassword_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SMTPPassword_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int MinimumKeywordScore
        {
            get
            {
                return global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.GetValue(this, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.MinimumKeywordScore);
            }
            set
            {
                global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.SetValue(this, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.MinimumKeywordScore, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MinimumKeywordScore_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MinimumKeywordScore_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MinimumKeywordScore_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.UserPreferenceSelection,
                global::LightSwitchApplication.UserPreferenceSelection.DetailsClass,
                global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.IImplementation,
                global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass>.Entry
                __UserPreferenceSelectionEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass>.Entry(
                    global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.__UserPreferenceSelection_CreateNew,
                    global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.__UserPreferenceSelection_Created,
                    global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.__UserPreferenceSelection_AllowSaveWithErrors);
            private static global::LightSwitchApplication.UserPreferenceSelection __UserPreferenceSelection_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.UserPreferenceSelection> es)
            {
                return new global::LightSwitchApplication.UserPreferenceSelection(es);
            }
            private static void __UserPreferenceSelection_Created(global::LightSwitchApplication.UserPreferenceSelection e)
            {
                e.UserPreferenceSelection_Created();
            }
            private static bool __UserPreferenceSelection_AllowSaveWithErrors(global::LightSwitchApplication.UserPreferenceSelection e)
            {
                bool result = false;
                e.UserPreferenceSelection_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, global::System.Guid> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, global::System.Guid>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, global::System.Guid> UserId
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.UserId) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, global::System.Guid>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, bool> LiveMode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.LiveMode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, string> BCCEmailAddress
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.BCCEmailAddress) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, string> SMTPUsername
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.SMTPUsername) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, string> SMTPServer
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.SMTPServer) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, int> SMTPPort
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.SMTPPort) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, bool> RequiresSSL
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.RequiresSSL) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, string> SMTPPassword
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.SMTPPassword) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, int> MinimumKeywordScore
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties.MinimumKeywordScore) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, int>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new global::System.Guid Id { get; set; }
                new global::System.Guid UserId { get; set; }
                new bool LiveMode { get; set; }
                new string BCCEmailAddress { get; set; }
                new string SMTPUsername { get; set; }
                new string SMTPServer { get; set; }
                new int SMTPPort { get; set; }
                new bool RequiresSSL { get; set; }
                new string SMTPPassword { get; set; }
                new int MinimumKeywordScore { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, global::System.Guid>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, global::System.Guid>.Entry(
                        "Id",
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, global::System.Guid>.Data> c, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.UserPreferenceSelection e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.UserPreferenceSelection e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static global::System.Guid _Id_GetImplementationValue(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d, global::System.Guid v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.UserPreferenceSelection e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, global::System.Guid>.Entry
                    UserId = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, global::System.Guid>.Entry(
                        "UserId",
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._UserId_Stub,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._UserId_ComputeIsReadOnly,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._UserId_Validate,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._UserId_GetImplementationValue,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._UserId_SetImplementationValue,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._UserId_OnValueChanged);
                private static void _UserId_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, global::System.Guid>.Data> c, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d, object sf)
                {
                    c(d, ref d._UserId, sf);
                }
                private static bool _UserId_ComputeIsReadOnly(global::LightSwitchApplication.UserPreferenceSelection e)
                {
                    bool result = false;
                    e.UserId_IsReadOnly(ref result);
                    return result;
                }
                private static void _UserId_Validate(global::LightSwitchApplication.UserPreferenceSelection e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.UserId_Validate(r);
                }
                private static global::System.Guid _UserId_GetImplementationValue(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d)
                {
                    return d.ImplementationEntity.UserId;
                }
                private static void _UserId_SetImplementationValue(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d, global::System.Guid v)
                {
                    d.ImplementationEntity.UserId = v;
                }
                private static void _UserId_OnValueChanged(global::LightSwitchApplication.UserPreferenceSelection e)
                {
                    e.UserId_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, bool>.Entry
                    LiveMode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, bool>.Entry(
                        "LiveMode",
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._LiveMode_Stub,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._LiveMode_ComputeIsReadOnly,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._LiveMode_Validate,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._LiveMode_GetImplementationValue,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._LiveMode_SetImplementationValue,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._LiveMode_OnValueChanged);
                private static void _LiveMode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, bool>.Data> c, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d, object sf)
                {
                    c(d, ref d._LiveMode, sf);
                }
                private static bool _LiveMode_ComputeIsReadOnly(global::LightSwitchApplication.UserPreferenceSelection e)
                {
                    bool result = false;
                    e.LiveMode_IsReadOnly(ref result);
                    return result;
                }
                private static void _LiveMode_Validate(global::LightSwitchApplication.UserPreferenceSelection e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LiveMode_Validate(r);
                }
                private static bool _LiveMode_GetImplementationValue(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d)
                {
                    return d.ImplementationEntity.LiveMode;
                }
                private static void _LiveMode_SetImplementationValue(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.LiveMode = v;
                }
                private static void _LiveMode_OnValueChanged(global::LightSwitchApplication.UserPreferenceSelection e)
                {
                    e.LiveMode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, string>.Entry
                    BCCEmailAddress = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, string>.Entry(
                        "BCCEmailAddress",
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._BCCEmailAddress_Stub,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._BCCEmailAddress_ComputeIsReadOnly,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._BCCEmailAddress_Validate,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._BCCEmailAddress_GetImplementationValue,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._BCCEmailAddress_SetImplementationValue,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._BCCEmailAddress_OnValueChanged);
                private static void _BCCEmailAddress_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, string>.Data> c, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d, object sf)
                {
                    c(d, ref d._BCCEmailAddress, sf);
                }
                private static bool _BCCEmailAddress_ComputeIsReadOnly(global::LightSwitchApplication.UserPreferenceSelection e)
                {
                    bool result = false;
                    e.BCCEmailAddress_IsReadOnly(ref result);
                    return result;
                }
                private static void _BCCEmailAddress_Validate(global::LightSwitchApplication.UserPreferenceSelection e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BCCEmailAddress_Validate(r);
                }
                private static string _BCCEmailAddress_GetImplementationValue(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d)
                {
                    return d.ImplementationEntity.BCCEmailAddress;
                }
                private static void _BCCEmailAddress_SetImplementationValue(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d, string v)
                {
                    d.ImplementationEntity.BCCEmailAddress = v;
                }
                private static void _BCCEmailAddress_OnValueChanged(global::LightSwitchApplication.UserPreferenceSelection e)
                {
                    e.BCCEmailAddress_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, string>.Entry
                    SMTPUsername = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, string>.Entry(
                        "SMTPUsername",
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._SMTPUsername_Stub,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._SMTPUsername_ComputeIsReadOnly,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._SMTPUsername_Validate,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._SMTPUsername_GetImplementationValue,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._SMTPUsername_SetImplementationValue,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._SMTPUsername_OnValueChanged);
                private static void _SMTPUsername_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, string>.Data> c, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d, object sf)
                {
                    c(d, ref d._SMTPUsername, sf);
                }
                private static bool _SMTPUsername_ComputeIsReadOnly(global::LightSwitchApplication.UserPreferenceSelection e)
                {
                    bool result = false;
                    e.SMTPUsername_IsReadOnly(ref result);
                    return result;
                }
                private static void _SMTPUsername_Validate(global::LightSwitchApplication.UserPreferenceSelection e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SMTPUsername_Validate(r);
                }
                private static string _SMTPUsername_GetImplementationValue(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d)
                {
                    return d.ImplementationEntity.SMTPUsername;
                }
                private static void _SMTPUsername_SetImplementationValue(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SMTPUsername = v;
                }
                private static void _SMTPUsername_OnValueChanged(global::LightSwitchApplication.UserPreferenceSelection e)
                {
                    e.SMTPUsername_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, string>.Entry
                    SMTPServer = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, string>.Entry(
                        "SMTPServer",
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._SMTPServer_Stub,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._SMTPServer_ComputeIsReadOnly,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._SMTPServer_Validate,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._SMTPServer_GetImplementationValue,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._SMTPServer_SetImplementationValue,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._SMTPServer_OnValueChanged);
                private static void _SMTPServer_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, string>.Data> c, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d, object sf)
                {
                    c(d, ref d._SMTPServer, sf);
                }
                private static bool _SMTPServer_ComputeIsReadOnly(global::LightSwitchApplication.UserPreferenceSelection e)
                {
                    bool result = false;
                    e.SMTPServer_IsReadOnly(ref result);
                    return result;
                }
                private static void _SMTPServer_Validate(global::LightSwitchApplication.UserPreferenceSelection e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SMTPServer_Validate(r);
                }
                private static string _SMTPServer_GetImplementationValue(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d)
                {
                    return d.ImplementationEntity.SMTPServer;
                }
                private static void _SMTPServer_SetImplementationValue(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SMTPServer = v;
                }
                private static void _SMTPServer_OnValueChanged(global::LightSwitchApplication.UserPreferenceSelection e)
                {
                    e.SMTPServer_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, int>.Entry
                    SMTPPort = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, int>.Entry(
                        "SMTPPort",
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._SMTPPort_Stub,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._SMTPPort_ComputeIsReadOnly,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._SMTPPort_Validate,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._SMTPPort_GetImplementationValue,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._SMTPPort_SetImplementationValue,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._SMTPPort_OnValueChanged);
                private static void _SMTPPort_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, int>.Data> c, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d, object sf)
                {
                    c(d, ref d._SMTPPort, sf);
                }
                private static bool _SMTPPort_ComputeIsReadOnly(global::LightSwitchApplication.UserPreferenceSelection e)
                {
                    bool result = false;
                    e.SMTPPort_IsReadOnly(ref result);
                    return result;
                }
                private static void _SMTPPort_Validate(global::LightSwitchApplication.UserPreferenceSelection e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SMTPPort_Validate(r);
                }
                private static int _SMTPPort_GetImplementationValue(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d)
                {
                    return d.ImplementationEntity.SMTPPort;
                }
                private static void _SMTPPort_SetImplementationValue(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d, int v)
                {
                    d.ImplementationEntity.SMTPPort = v;
                }
                private static void _SMTPPort_OnValueChanged(global::LightSwitchApplication.UserPreferenceSelection e)
                {
                    e.SMTPPort_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, bool>.Entry
                    RequiresSSL = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, bool>.Entry(
                        "RequiresSSL",
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._RequiresSSL_Stub,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._RequiresSSL_ComputeIsReadOnly,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._RequiresSSL_Validate,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._RequiresSSL_GetImplementationValue,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._RequiresSSL_SetImplementationValue,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._RequiresSSL_OnValueChanged);
                private static void _RequiresSSL_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, bool>.Data> c, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d, object sf)
                {
                    c(d, ref d._RequiresSSL, sf);
                }
                private static bool _RequiresSSL_ComputeIsReadOnly(global::LightSwitchApplication.UserPreferenceSelection e)
                {
                    bool result = false;
                    e.RequiresSSL_IsReadOnly(ref result);
                    return result;
                }
                private static void _RequiresSSL_Validate(global::LightSwitchApplication.UserPreferenceSelection e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RequiresSSL_Validate(r);
                }
                private static bool _RequiresSSL_GetImplementationValue(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d)
                {
                    return d.ImplementationEntity.RequiresSSL;
                }
                private static void _RequiresSSL_SetImplementationValue(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.RequiresSSL = v;
                }
                private static void _RequiresSSL_OnValueChanged(global::LightSwitchApplication.UserPreferenceSelection e)
                {
                    e.RequiresSSL_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, string>.Entry
                    SMTPPassword = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, string>.Entry(
                        "SMTPPassword",
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._SMTPPassword_Stub,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._SMTPPassword_ComputeIsReadOnly,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._SMTPPassword_Validate,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._SMTPPassword_GetImplementationValue,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._SMTPPassword_SetImplementationValue,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._SMTPPassword_OnValueChanged);
                private static void _SMTPPassword_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, string>.Data> c, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d, object sf)
                {
                    c(d, ref d._SMTPPassword, sf);
                }
                private static bool _SMTPPassword_ComputeIsReadOnly(global::LightSwitchApplication.UserPreferenceSelection e)
                {
                    bool result = false;
                    e.SMTPPassword_IsReadOnly(ref result);
                    return result;
                }
                private static void _SMTPPassword_Validate(global::LightSwitchApplication.UserPreferenceSelection e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SMTPPassword_Validate(r);
                }
                private static string _SMTPPassword_GetImplementationValue(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d)
                {
                    return d.ImplementationEntity.SMTPPassword;
                }
                private static void _SMTPPassword_SetImplementationValue(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SMTPPassword = v;
                }
                private static void _SMTPPassword_OnValueChanged(global::LightSwitchApplication.UserPreferenceSelection e)
                {
                    e.SMTPPassword_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, int>.Entry
                    MinimumKeywordScore = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, int>.Entry(
                        "MinimumKeywordScore",
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._MinimumKeywordScore_Stub,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._MinimumKeywordScore_ComputeIsReadOnly,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._MinimumKeywordScore_Validate,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._MinimumKeywordScore_GetImplementationValue,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._MinimumKeywordScore_SetImplementationValue,
                        global::LightSwitchApplication.UserPreferenceSelection.DetailsClass.PropertySetProperties._MinimumKeywordScore_OnValueChanged);
                private static void _MinimumKeywordScore_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, int>.Data> c, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d, object sf)
                {
                    c(d, ref d._MinimumKeywordScore, sf);
                }
                private static bool _MinimumKeywordScore_ComputeIsReadOnly(global::LightSwitchApplication.UserPreferenceSelection e)
                {
                    bool result = false;
                    e.MinimumKeywordScore_IsReadOnly(ref result);
                    return result;
                }
                private static void _MinimumKeywordScore_Validate(global::LightSwitchApplication.UserPreferenceSelection e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MinimumKeywordScore_Validate(r);
                }
                private static int _MinimumKeywordScore_GetImplementationValue(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d)
                {
                    return d.ImplementationEntity.MinimumKeywordScore;
                }
                private static void _MinimumKeywordScore_SetImplementationValue(global::LightSwitchApplication.UserPreferenceSelection.DetailsClass d, int v)
                {
                    d.ImplementationEntity.MinimumKeywordScore = v;
                }
                private static void _MinimumKeywordScore_OnValueChanged(global::LightSwitchApplication.UserPreferenceSelection e)
                {
                    e.MinimumKeywordScore_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, global::System.Guid>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, global::System.Guid>.Data _UserId;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, bool>.Data _LiveMode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, string>.Data _BCCEmailAddress;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, string>.Data _SMTPUsername;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, string>.Data _SMTPServer;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, int>.Data _SMTPPort;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, bool>.Data _RequiresSSL;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, string>.Data _SMTPPassword;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.UserPreferenceSelection, global::LightSwitchApplication.UserPreferenceSelection.DetailsClass, int>.Data _MinimumKeywordScore;
            
        }
    
        #endregion
    }
    
    #endregion
}
