//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the MarketingDomainServiceData datasource.
    /// </summary>
    public sealed partial class MarketingDomainServiceDataService
        : global::LightSwitchApplication.MarketingDomainServiceData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MarketingDomainServiceDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_Updating(global::LightSwitchApplication.UserCitySelection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_Updated(global::LightSwitchApplication.UserCitySelection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_Validate(global::LightSwitchApplication.UserCitySelection entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_Updating(global::LightSwitchApplication.UserListingCategorySelection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_Updated(global::LightSwitchApplication.UserListingCategorySelection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_Validate(global::LightSwitchApplication.UserListingCategorySelection entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_Inserting(global::LightSwitchApplication.UserKeywordSelection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_Inserted(global::LightSwitchApplication.UserKeywordSelection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_Updating(global::LightSwitchApplication.UserKeywordSelection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_Updated(global::LightSwitchApplication.UserKeywordSelection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_Deleting(global::LightSwitchApplication.UserKeywordSelection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_Deleted(global::LightSwitchApplication.UserKeywordSelection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_Validate(global::LightSwitchApplication.UserKeywordSelection entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_Updating(global::LightSwitchApplication.UserPreferenceSelection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_Updated(global::LightSwitchApplication.UserPreferenceSelection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_Validate(global::LightSwitchApplication.UserPreferenceSelection entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_Inserting(global::LightSwitchApplication.UserListingItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_Inserted(global::LightSwitchApplication.UserListingItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_Updating(global::LightSwitchApplication.UserListingItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_Updated(global::LightSwitchApplication.UserListingItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_Validate(global::LightSwitchApplication.UserListingItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_Validate(global::LightSwitchApplication.UserListingResponseItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_Updating(global::LightSwitchApplication.Operation entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_Updated(global::LightSwitchApplication.Operation entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_Validate(global::LightSwitchApplication.Operation entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Validate(global::LightSwitchApplication.User entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserTemplateItems_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserTemplateItems_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserTemplateItems_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserTemplateItems_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserTemplateItems_Inserting(global::LightSwitchApplication.UserTemplateItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserTemplateItems_Inserted(global::LightSwitchApplication.UserTemplateItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserTemplateItems_Updating(global::LightSwitchApplication.UserTemplateItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserTemplateItems_Updated(global::LightSwitchApplication.UserTemplateItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserTemplateItems_Deleting(global::LightSwitchApplication.UserTemplateItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserTemplateItems_Deleted(global::LightSwitchApplication.UserTemplateItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserTemplateItems_Validate(global::LightSwitchApplication.UserTemplateItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPostListFilterItems_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPostListFilterItems_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPostListFilterItems_Updating(global::LightSwitchApplication.UserPostListFilterItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPostListFilterItems_Updated(global::LightSwitchApplication.UserPostListFilterItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPostListFilterItems_Validate(global::LightSwitchApplication.UserPostListFilterItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BugReportItems_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BugReportItems_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BugReportItems_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BugReportItems_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BugReportItems_Inserting(global::LightSwitchApplication.BugReportItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BugReportItems_Inserted(global::LightSwitchApplication.BugReportItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BugReportItems_Updating(global::LightSwitchApplication.BugReportItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BugReportItems_Updated(global::LightSwitchApplication.BugReportItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BugReportItems_Deleting(global::LightSwitchApplication.BugReportItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BugReportItems_Deleted(global::LightSwitchApplication.BugReportItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BugReportItems_Validate(global::LightSwitchApplication.BugReportItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_Inserting(global::LightSwitchApplication.c_Error entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_Inserted(global::LightSwitchApplication.c_Error entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_Validate(global::LightSwitchApplication.c_Error entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorDisplays_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorDisplays_Validate(global::LightSwitchApplication.ErrorDisplay entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserFiles_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserFiles_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserFiles_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserFiles_Inserting(global::LightSwitchApplication.UserFile entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserFiles_Inserted(global::LightSwitchApplication.UserFile entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserFiles_Deleting(global::LightSwitchApplication.UserFile entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserFiles_Deleted(global::LightSwitchApplication.UserFile entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserFiles_Validate(global::LightSwitchApplication.UserFile entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SystemSettingItems_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SystemSettingItems_Validate(global::LightSwitchApplication.SystemSettingItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_Single_Executing(global::System.Nullable<global::System.Guid> CityId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_Single_PreprocessQuery(global::System.Nullable<global::System.Guid> CityId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_Single_Executed(global::System.Nullable<global::System.Guid> CityId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserCitySelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_Single_ExecuteFailed(global::System.Nullable<global::System.Guid> CityId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_SingleOrDefault_Executing(global::System.Nullable<global::System.Guid> CityId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_SingleOrDefault_PreprocessQuery(global::System.Nullable<global::System.Guid> CityId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_SingleOrDefault_Executed(global::System.Nullable<global::System.Guid> CityId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserCitySelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_SingleOrDefault_ExecuteFailed(global::System.Nullable<global::System.Guid> CityId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserCitySelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCitySelections_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCitySelections_Executing(global::System.Nullable<global::System.Guid> userId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCitySelections_PreprocessQuery(global::System.Nullable<global::System.Guid> userId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCitySelections_Executed(global::System.Nullable<global::System.Guid> userId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserCitySelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCitySelections_ExecuteFailed(global::System.Nullable<global::System.Guid> userId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_Single_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_Single_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_Single_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingCategorySelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_Single_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_SingleOrDefault_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_SingleOrDefault_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_SingleOrDefault_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingCategorySelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_SingleOrDefault_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingCategorySelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCategorySelections_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCategorySelections_Executing(global::System.Nullable<global::System.Guid> userId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCategorySelections_PreprocessQuery(global::System.Nullable<global::System.Guid> userId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCategorySelections_Executed(global::System.Nullable<global::System.Guid> userId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingCategorySelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCategorySelections_ExecuteFailed(global::System.Nullable<global::System.Guid> userId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_Single_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_Single_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_Single_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserKeywordSelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_Single_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_SingleOrDefault_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_SingleOrDefault_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_SingleOrDefault_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserKeywordSelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_SingleOrDefault_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserKeywordSelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserKeywordSelections_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserKeywordSelections_Executing(global::System.Nullable<global::System.Guid> userId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserKeywordSelections_PreprocessQuery(global::System.Nullable<global::System.Guid> userId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserKeywordSelections_Executed(global::System.Nullable<global::System.Guid> userId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserKeywordSelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserKeywordSelections_ExecuteFailed(global::System.Nullable<global::System.Guid> userId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_Single_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_Single_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserPreferenceSelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_Single_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserPreferenceSelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_Single_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_SingleOrDefault_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_SingleOrDefault_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserPreferenceSelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_SingleOrDefault_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserPreferenceSelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_SingleOrDefault_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserPreferenceSelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserPreferenceSelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_Single_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_Single_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_Single_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_Single_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_SingleOrDefault_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_SingleOrDefault_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_SingleOrDefault_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_SingleOrDefault_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingItems_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingItems_Executing(global::System.Nullable<global::System.Guid> userId, string filterKeywords, global::System.Nullable<global::System.DateTime> filterStartDate, global::System.Nullable<global::System.DateTime> filterEndDate);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingItems_PreprocessQuery(global::System.Nullable<global::System.Guid> userId, string filterKeywords, global::System.Nullable<global::System.DateTime> filterStartDate, global::System.Nullable<global::System.DateTime> filterEndDate, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingItems_Executed(global::System.Nullable<global::System.Guid> userId, string filterKeywords, global::System.Nullable<global::System.DateTime> filterStartDate, global::System.Nullable<global::System.DateTime> filterEndDate, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingItems_ExecuteFailed(global::System.Nullable<global::System.Guid> userId, string filterKeywords, global::System.Nullable<global::System.DateTime> filterStartDate, global::System.Nullable<global::System.DateTime> filterEndDate, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_Single_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_Single_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingResponseItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_Single_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingResponseItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_Single_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_SingleOrDefault_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_SingleOrDefault_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingResponseItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_SingleOrDefault_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingResponseItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_SingleOrDefault_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingResponseItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingResponseItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingResponseById_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingResponseById_Executing(global::System.Nullable<global::System.Guid> responseId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingResponseById_PreprocessQuery(global::System.Nullable<global::System.Guid> responseId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingResponseItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingResponseById_Executed(global::System.Nullable<global::System.Guid> responseId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingResponseItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingResponseById_ExecuteFailed(global::System.Nullable<global::System.Guid> responseId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Operation> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Operation> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Operation> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Operation> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Operation> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Operation> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingCategorySelectionByUserId_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingCategorySelectionByUserId_Executing(global::System.Nullable<global::System.Guid> userId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingCategorySelectionByUserId_PreprocessQuery(global::System.Nullable<global::System.Guid> userId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingCategorySelectionByUserId_Executed(global::System.Nullable<global::System.Guid> userId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingCategorySelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingCategorySelectionByUserId_ExecuteFailed(global::System.Nullable<global::System.Guid> userId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserKeywordSelectionByUserId_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserKeywordSelectionByUserId_Executing(global::System.Nullable<global::System.Guid> userId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserKeywordSelectionByUserId_PreprocessQuery(global::System.Nullable<global::System.Guid> userId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserKeywordSelectionByUserId_Executed(global::System.Nullable<global::System.Guid> userId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserKeywordSelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserKeywordSelectionByUserId_ExecuteFailed(global::System.Nullable<global::System.Guid> userId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCitySelectionByUserId_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCitySelectionByUserId_Executing(global::System.Nullable<global::System.Guid> userId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCitySelectionByUserId_PreprocessQuery(global::System.Nullable<global::System.Guid> userId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCitySelectionByUserId_Executed(global::System.Nullable<global::System.Guid> userId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserCitySelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCitySelectionByUserId_ExecuteFailed(global::System.Nullable<global::System.Guid> userId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Single_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Single_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.User> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Single_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.User> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Single_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_SingleOrDefault_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_SingleOrDefault_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.User> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_SingleOrDefault_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.User> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_SingleOrDefault_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.User> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.User> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserTemplateItems_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserTemplateItems_Single_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserTemplateItems_Single_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserTemplateItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserTemplateItems_Single_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserTemplateItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserTemplateItems_Single_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserTemplateItems_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserTemplateItems_SingleOrDefault_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserTemplateItems_SingleOrDefault_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserTemplateItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserTemplateItems_SingleOrDefault_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserTemplateItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserTemplateItems_SingleOrDefault_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserTemplateItems_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserTemplateItems_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserTemplateItems_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserTemplateItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserTemplateItems_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserTemplateItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserTemplateItems_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserTemplates_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserTemplates_Executing(global::System.Nullable<global::System.Guid> userId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserTemplates_PreprocessQuery(global::System.Nullable<global::System.Guid> userId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserTemplateItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserTemplates_Executed(global::System.Nullable<global::System.Guid> userId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserTemplateItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserTemplates_ExecuteFailed(global::System.Nullable<global::System.Guid> userId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserTemplateItemById_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserTemplateItemById_Executing(global::System.Nullable<global::System.Guid> id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserTemplateItemById_PreprocessQuery(global::System.Nullable<global::System.Guid> id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserTemplateItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserTemplateItemById_Executed(global::System.Nullable<global::System.Guid> id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserTemplateItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserTemplateItemById_ExecuteFailed(global::System.Nullable<global::System.Guid> id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserPostListItemByUserId_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserPostListItemByUserId_Executing(global::System.Nullable<global::System.Guid> userId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserPostListItemByUserId_PreprocessQuery(global::System.Nullable<global::System.Guid> userId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserPostListFilterItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserPostListItemByUserId_Executed(global::System.Nullable<global::System.Guid> userId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserPostListFilterItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserPostListItemByUserId_ExecuteFailed(global::System.Nullable<global::System.Guid> userId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPostListFilterItems_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPostListFilterItems_Single_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPostListFilterItems_Single_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserPostListFilterItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPostListFilterItems_Single_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserPostListFilterItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPostListFilterItems_Single_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPostListFilterItems_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPostListFilterItems_SingleOrDefault_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPostListFilterItems_SingleOrDefault_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserPostListFilterItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPostListFilterItems_SingleOrDefault_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserPostListFilterItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPostListFilterItems_SingleOrDefault_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPostListFilterItems_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPostListFilterItems_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPostListFilterItems_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserPostListFilterItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPostListFilterItems_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserPostListFilterItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPostListFilterItems_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetFilteredUserListingItems_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetFilteredUserListingItems_Executing(global::System.Nullable<global::System.Guid> userId, global::System.Nullable<bool> filtersEnabled, global::System.Nullable<bool> showResponded, global::System.Nullable<bool> showNotResponded, global::System.Nullable<global::System.DateTime> postStartDate, global::System.Nullable<global::System.DateTime> postEndDate, global::System.Nullable<global::System.DateTime> responseStartDate, global::System.Nullable<global::System.DateTime> responseEndDate, string keywords, string regionsFilter, string statesFilter, string citiesFilter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetFilteredUserListingItems_PreprocessQuery(global::System.Nullable<global::System.Guid> userId, global::System.Nullable<bool> filtersEnabled, global::System.Nullable<bool> showResponded, global::System.Nullable<bool> showNotResponded, global::System.Nullable<global::System.DateTime> postStartDate, global::System.Nullable<global::System.DateTime> postEndDate, global::System.Nullable<global::System.DateTime> responseStartDate, global::System.Nullable<global::System.DateTime> responseEndDate, string keywords, string regionsFilter, string statesFilter, string citiesFilter, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetFilteredUserListingItems_Executed(global::System.Nullable<global::System.Guid> userId, global::System.Nullable<bool> filtersEnabled, global::System.Nullable<bool> showResponded, global::System.Nullable<bool> showNotResponded, global::System.Nullable<global::System.DateTime> postStartDate, global::System.Nullable<global::System.DateTime> postEndDate, global::System.Nullable<global::System.DateTime> responseStartDate, global::System.Nullable<global::System.DateTime> responseEndDate, string keywords, string regionsFilter, string statesFilter, string citiesFilter, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetFilteredUserListingItems_ExecuteFailed(global::System.Nullable<global::System.Guid> userId, global::System.Nullable<bool> filtersEnabled, global::System.Nullable<bool> showResponded, global::System.Nullable<bool> showNotResponded, global::System.Nullable<global::System.DateTime> postStartDate, global::System.Nullable<global::System.DateTime> postEndDate, global::System.Nullable<global::System.DateTime> responseStartDate, global::System.Nullable<global::System.DateTime> responseEndDate, string keywords, string regionsFilter, string statesFilter, string citiesFilter, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BugReportItems_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BugReportItems_Single_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BugReportItems_Single_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.BugReportItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BugReportItems_Single_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.BugReportItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BugReportItems_Single_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BugReportItems_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BugReportItems_SingleOrDefault_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BugReportItems_SingleOrDefault_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.BugReportItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BugReportItems_SingleOrDefault_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.BugReportItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BugReportItems_SingleOrDefault_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BugReportItems_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BugReportItems_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BugReportItems_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.BugReportItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BugReportItems_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.BugReportItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BugReportItems_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingItemById_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingItemById_Executing(global::System.Nullable<global::System.Guid> id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingItemById_PreprocessQuery(global::System.Nullable<global::System.Guid> id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingItemById_Executed(global::System.Nullable<global::System.Guid> id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingItemById_ExecuteFailed(global::System.Nullable<global::System.Guid> id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserPreferenceSelectionByUserId_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserPreferenceSelectionByUserId_Executing(global::System.Nullable<global::System.Guid> userId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserPreferenceSelectionByUserId_PreprocessQuery(global::System.Nullable<global::System.Guid> userId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserPreferenceSelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserPreferenceSelectionByUserId_Executed(global::System.Nullable<global::System.Guid> userId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserPreferenceSelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserPreferenceSelectionByUserId_ExecuteFailed(global::System.Nullable<global::System.Guid> userId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_Single_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_Single_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.c_Error> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_Single_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.c_Error> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_Single_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_SingleOrDefault_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_SingleOrDefault_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.c_Error> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_SingleOrDefault_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.c_Error> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_SingleOrDefault_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.c_Error> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.c_Error> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Errors_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorDisplays_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorDisplays_Single_Executing(string Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorDisplays_Single_PreprocessQuery(string Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.ErrorDisplay> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorDisplays_Single_Executed(string Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ErrorDisplay> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorDisplays_Single_ExecuteFailed(string Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorDisplays_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorDisplays_SingleOrDefault_Executing(string Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorDisplays_SingleOrDefault_PreprocessQuery(string Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.ErrorDisplay> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorDisplays_SingleOrDefault_Executed(string Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ErrorDisplay> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorDisplays_SingleOrDefault_ExecuteFailed(string Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorDisplays_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorDisplays_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorDisplays_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.ErrorDisplay> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorDisplays_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ErrorDisplay> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ErrorDisplays_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserFiles_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserFiles_Single_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserFiles_Single_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserFile> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserFiles_Single_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserFile> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserFiles_Single_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserFiles_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserFiles_SingleOrDefault_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserFiles_SingleOrDefault_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserFile> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserFiles_SingleOrDefault_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserFile> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserFiles_SingleOrDefault_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserFiles_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserFiles_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserFiles_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserFile> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserFiles_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserFile> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserFiles_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserFilesByUserId_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserFilesByUserId_Executing(global::System.Nullable<global::System.Guid> userId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserFilesByUserId_PreprocessQuery(global::System.Nullable<global::System.Guid> userId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserFile> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserFilesByUserId_Executed(global::System.Nullable<global::System.Guid> userId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserFile> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserFilesByUserId_ExecuteFailed(global::System.Nullable<global::System.Guid> userId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SystemSettingItems_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SystemSettingItems_Single_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SystemSettingItems_Single_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.SystemSettingItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SystemSettingItems_Single_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.SystemSettingItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SystemSettingItems_Single_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SystemSettingItems_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SystemSettingItems_SingleOrDefault_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SystemSettingItems_SingleOrDefault_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.SystemSettingItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SystemSettingItems_SingleOrDefault_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.SystemSettingItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SystemSettingItems_SingleOrDefault_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SystemSettingItems_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SystemSettingItems_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SystemSettingItems_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.SystemSettingItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SystemSettingItems_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.SystemSettingItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SystemSettingItems_All_ExecuteFailed(global::System.Exception exception);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserCitySelection>
                __UserCitySelectionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserCitySelection>(
                    "UserCitySelections",
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_CanUpdate,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_CanRead,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_Updating,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_Updated,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_Validate);
            private static bool __UserCitySelections_CanUpdate(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserCitySelections_CanUpdate(ref result);
                return result;
            }
            private static bool __UserCitySelections_CanRead(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserCitySelections_CanRead(ref result);
                return result;
            }
            private static void __UserCitySelections_Updating(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserCitySelection e)
            {
                d.UserCitySelections_Updating(e);
            }
            private static void __UserCitySelections_Updated(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserCitySelection e)
            {
                d.UserCitySelections_Updated(e);
            }
            private static void __UserCitySelections_Validate(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserCitySelection e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.UserCitySelections_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingCategorySelection>
                __UserListingCategorySelectionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingCategorySelection>(
                    "UserListingCategorySelections",
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_CanUpdate,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_CanRead,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_Updating,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_Updated,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_Validate);
            private static bool __UserListingCategorySelections_CanUpdate(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserListingCategorySelections_CanUpdate(ref result);
                return result;
            }
            private static bool __UserListingCategorySelections_CanRead(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserListingCategorySelections_CanRead(ref result);
                return result;
            }
            private static void __UserListingCategorySelections_Updating(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserListingCategorySelection e)
            {
                d.UserListingCategorySelections_Updating(e);
            }
            private static void __UserListingCategorySelections_Updated(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserListingCategorySelection e)
            {
                d.UserListingCategorySelections_Updated(e);
            }
            private static void __UserListingCategorySelections_Validate(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserListingCategorySelection e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.UserListingCategorySelections_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserKeywordSelection>
                __UserKeywordSelectionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserKeywordSelection>(
                    "UserKeywordSelections",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_CanInsert,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_CanUpdate,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_CanDelete,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_CanRead,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_Inserting,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_Inserted,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_Updating,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_Updated,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_Deleting,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_Deleted,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_Validate);
            private static bool __UserKeywordSelections_CanInsert(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserKeywordSelections_CanInsert(ref result);
                return result;
            }
            private static bool __UserKeywordSelections_CanUpdate(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserKeywordSelections_CanUpdate(ref result);
                return result;
            }
            private static bool __UserKeywordSelections_CanDelete(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserKeywordSelections_CanDelete(ref result);
                return result;
            }
            private static bool __UserKeywordSelections_CanRead(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserKeywordSelections_CanRead(ref result);
                return result;
            }
            private static void __UserKeywordSelections_Inserting(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserKeywordSelection e)
            {
                d.UserKeywordSelections_Inserting(e);
            }
            private static void __UserKeywordSelections_Inserted(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserKeywordSelection e)
            {
                d.UserKeywordSelections_Inserted(e);
            }
            private static void __UserKeywordSelections_Updating(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserKeywordSelection e)
            {
                d.UserKeywordSelections_Updating(e);
            }
            private static void __UserKeywordSelections_Updated(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserKeywordSelection e)
            {
                d.UserKeywordSelections_Updated(e);
            }
            private static void __UserKeywordSelections_Deleting(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserKeywordSelection e)
            {
                d.UserKeywordSelections_Deleting(e);
            }
            private static void __UserKeywordSelections_Deleted(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserKeywordSelection e)
            {
                d.UserKeywordSelections_Deleted(e);
            }
            private static void __UserKeywordSelections_Validate(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserKeywordSelection e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.UserKeywordSelections_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPreferenceSelection>
                __UserPreferenceSelectionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPreferenceSelection>(
                    "UserPreferenceSelections",
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_CanUpdate,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_CanRead,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_Updating,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_Updated,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_Validate);
            private static bool __UserPreferenceSelections_CanUpdate(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserPreferenceSelections_CanUpdate(ref result);
                return result;
            }
            private static bool __UserPreferenceSelections_CanRead(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserPreferenceSelections_CanRead(ref result);
                return result;
            }
            private static void __UserPreferenceSelections_Updating(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserPreferenceSelection e)
            {
                d.UserPreferenceSelections_Updating(e);
            }
            private static void __UserPreferenceSelections_Updated(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserPreferenceSelection e)
            {
                d.UserPreferenceSelections_Updated(e);
            }
            private static void __UserPreferenceSelections_Validate(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserPreferenceSelection e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.UserPreferenceSelections_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingItem>
                __UserListingItemsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingItem>(
                    "UserListingItems",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_CanInsert,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_CanUpdate,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_CanRead,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_Inserting,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_Inserted,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_Updating,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_Updated,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_Validate);
            private static bool __UserListingItems_CanInsert(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserListingItems_CanInsert(ref result);
                return result;
            }
            private static bool __UserListingItems_CanUpdate(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserListingItems_CanUpdate(ref result);
                return result;
            }
            private static bool __UserListingItems_CanRead(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserListingItems_CanRead(ref result);
                return result;
            }
            private static void __UserListingItems_Inserting(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserListingItem e)
            {
                d.UserListingItems_Inserting(e);
            }
            private static void __UserListingItems_Inserted(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserListingItem e)
            {
                d.UserListingItems_Inserted(e);
            }
            private static void __UserListingItems_Updating(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserListingItem e)
            {
                d.UserListingItems_Updating(e);
            }
            private static void __UserListingItems_Updated(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserListingItem e)
            {
                d.UserListingItems_Updated(e);
            }
            private static void __UserListingItems_Validate(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserListingItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.UserListingItems_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingResponseItem>
                __UserListingResponseItemsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingResponseItem>(
                    "UserListingResponseItems",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_Validate);
            private static bool __UserListingResponseItems_CanRead(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserListingResponseItems_CanRead(ref result);
                return result;
            }
            private static void __UserListingResponseItems_Validate(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserListingResponseItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.UserListingResponseItems_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.Operation>
                __OperationsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.Operation>(
                    "Operations",
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_CanUpdate,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_CanRead,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_Updating,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_Updated,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_Validate);
            private static bool __Operations_CanUpdate(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.Operations_CanUpdate(ref result);
                return result;
            }
            private static bool __Operations_CanRead(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.Operations_CanRead(ref result);
                return result;
            }
            private static void __Operations_Updating(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.Operation e)
            {
                d.Operations_Updating(e);
            }
            private static void __Operations_Updated(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.Operation e)
            {
                d.Operations_Updated(e);
            }
            private static void __Operations_Validate(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.Operation e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Operations_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.User>
                __UsersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.User>(
                    "Users",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_Validate);
            private static bool __Users_CanRead(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.Users_CanRead(ref result);
                return result;
            }
            private static void __Users_Validate(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.User e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Users_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserTemplateItem>
                __UserTemplateItemsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserTemplateItem>(
                    "UserTemplateItems",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserTemplateItems_CanInsert,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserTemplateItems_CanUpdate,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserTemplateItems_CanDelete,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserTemplateItems_CanRead,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserTemplateItems_Inserting,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserTemplateItems_Inserted,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserTemplateItems_Updating,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserTemplateItems_Updated,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserTemplateItems_Deleting,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserTemplateItems_Deleted,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserTemplateItems_Validate);
            private static bool __UserTemplateItems_CanInsert(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserTemplateItems_CanInsert(ref result);
                return result;
            }
            private static bool __UserTemplateItems_CanUpdate(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserTemplateItems_CanUpdate(ref result);
                return result;
            }
            private static bool __UserTemplateItems_CanDelete(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserTemplateItems_CanDelete(ref result);
                return result;
            }
            private static bool __UserTemplateItems_CanRead(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserTemplateItems_CanRead(ref result);
                return result;
            }
            private static void __UserTemplateItems_Inserting(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserTemplateItem e)
            {
                d.UserTemplateItems_Inserting(e);
            }
            private static void __UserTemplateItems_Inserted(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserTemplateItem e)
            {
                d.UserTemplateItems_Inserted(e);
            }
            private static void __UserTemplateItems_Updating(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserTemplateItem e)
            {
                d.UserTemplateItems_Updating(e);
            }
            private static void __UserTemplateItems_Updated(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserTemplateItem e)
            {
                d.UserTemplateItems_Updated(e);
            }
            private static void __UserTemplateItems_Deleting(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserTemplateItem e)
            {
                d.UserTemplateItems_Deleting(e);
            }
            private static void __UserTemplateItems_Deleted(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserTemplateItem e)
            {
                d.UserTemplateItems_Deleted(e);
            }
            private static void __UserTemplateItems_Validate(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserTemplateItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.UserTemplateItems_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPostListFilterItem>
                __UserPostListFilterItemsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPostListFilterItem>(
                    "UserPostListFilterItems",
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPostListFilterItems_CanUpdate,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPostListFilterItems_CanRead,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPostListFilterItems_Updating,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPostListFilterItems_Updated,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPostListFilterItems_Validate);
            private static bool __UserPostListFilterItems_CanUpdate(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserPostListFilterItems_CanUpdate(ref result);
                return result;
            }
            private static bool __UserPostListFilterItems_CanRead(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserPostListFilterItems_CanRead(ref result);
                return result;
            }
            private static void __UserPostListFilterItems_Updating(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserPostListFilterItem e)
            {
                d.UserPostListFilterItems_Updating(e);
            }
            private static void __UserPostListFilterItems_Updated(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserPostListFilterItem e)
            {
                d.UserPostListFilterItems_Updated(e);
            }
            private static void __UserPostListFilterItems_Validate(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserPostListFilterItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.UserPostListFilterItems_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.BugReportItem>
                __BugReportItemsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.BugReportItem>(
                    "BugReportItems",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__BugReportItems_CanInsert,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__BugReportItems_CanUpdate,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__BugReportItems_CanDelete,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__BugReportItems_CanRead,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__BugReportItems_Inserting,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__BugReportItems_Inserted,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__BugReportItems_Updating,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__BugReportItems_Updated,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__BugReportItems_Deleting,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__BugReportItems_Deleted,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__BugReportItems_Validate);
            private static bool __BugReportItems_CanInsert(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.BugReportItems_CanInsert(ref result);
                return result;
            }
            private static bool __BugReportItems_CanUpdate(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.BugReportItems_CanUpdate(ref result);
                return result;
            }
            private static bool __BugReportItems_CanDelete(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.BugReportItems_CanDelete(ref result);
                return result;
            }
            private static bool __BugReportItems_CanRead(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.BugReportItems_CanRead(ref result);
                return result;
            }
            private static void __BugReportItems_Inserting(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.BugReportItem e)
            {
                d.BugReportItems_Inserting(e);
            }
            private static void __BugReportItems_Inserted(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.BugReportItem e)
            {
                d.BugReportItems_Inserted(e);
            }
            private static void __BugReportItems_Updating(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.BugReportItem e)
            {
                d.BugReportItems_Updating(e);
            }
            private static void __BugReportItems_Updated(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.BugReportItem e)
            {
                d.BugReportItems_Updated(e);
            }
            private static void __BugReportItems_Deleting(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.BugReportItem e)
            {
                d.BugReportItems_Deleting(e);
            }
            private static void __BugReportItems_Deleted(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.BugReportItem e)
            {
                d.BugReportItems_Deleted(e);
            }
            private static void __BugReportItems_Validate(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.BugReportItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.BugReportItems_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.c_Error>
                __ErrorsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.c_Error>(
                    "Errors",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Errors_CanInsert,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Errors_CanRead,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Errors_Inserting,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Errors_Inserted,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Errors_Validate);
            private static bool __Errors_CanInsert(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.Errors_CanInsert(ref result);
                return result;
            }
            private static bool __Errors_CanRead(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.Errors_CanRead(ref result);
                return result;
            }
            private static void __Errors_Inserting(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.c_Error e)
            {
                d.Errors_Inserting(e);
            }
            private static void __Errors_Inserted(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.c_Error e)
            {
                d.Errors_Inserted(e);
            }
            private static void __Errors_Validate(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.c_Error e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Errors_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.ErrorDisplay>
                __ErrorDisplaysEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.ErrorDisplay>(
                    "ErrorDisplays",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__ErrorDisplays_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__ErrorDisplays_Validate);
            private static bool __ErrorDisplays_CanRead(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.ErrorDisplays_CanRead(ref result);
                return result;
            }
            private static void __ErrorDisplays_Validate(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.ErrorDisplay e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ErrorDisplays_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserFile>
                __UserFilesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserFile>(
                    "UserFiles",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserFiles_CanInsert,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserFiles_CanDelete,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserFiles_CanRead,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserFiles_Inserting,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserFiles_Inserted,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserFiles_Deleting,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserFiles_Deleted,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserFiles_Validate);
            private static bool __UserFiles_CanInsert(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserFiles_CanInsert(ref result);
                return result;
            }
            private static bool __UserFiles_CanDelete(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserFiles_CanDelete(ref result);
                return result;
            }
            private static bool __UserFiles_CanRead(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserFiles_CanRead(ref result);
                return result;
            }
            private static void __UserFiles_Inserting(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserFile e)
            {
                d.UserFiles_Inserting(e);
            }
            private static void __UserFiles_Inserted(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserFile e)
            {
                d.UserFiles_Inserted(e);
            }
            private static void __UserFiles_Deleting(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserFile e)
            {
                d.UserFiles_Deleting(e);
            }
            private static void __UserFiles_Deleted(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserFile e)
            {
                d.UserFiles_Deleted(e);
            }
            private static void __UserFiles_Validate(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserFile e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.UserFiles_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.SystemSettingItem>
                __SystemSettingItemsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.SystemSettingItem>(
                    "SystemSettingItems",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__SystemSettingItems_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__SystemSettingItems_Validate);
            private static bool __SystemSettingItems_CanRead(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.SystemSettingItems_CanRead(ref result);
                return result;
            }
            private static void __SystemSettingItems_Validate(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.SystemSettingItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.SystemSettingItems_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserCitySelection>
                __UserCitySelections_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserCitySelection>(
                    "UserCitySelections_Single",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_Single_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_Single_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_Single_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_Single_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_Single_PreprocessQuery);
            private static bool __UserCitySelections_Single_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserCitySelections_Single_CanExecute(ref r);
                return r;
            }
            private static void __UserCitySelections_Single_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserCitySelections_Single_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserCitySelections_Single_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserCitySelections_Single_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserCitySelection>)args[1]);
            }
            private static void __UserCitySelections_Single_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserCitySelections_Single_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserCitySelections_Single_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection>)args[1];
                d.UserCitySelections_Single_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserCitySelection>
                __UserCitySelections_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserCitySelection>(
                    "UserCitySelections_SingleOrDefault",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_SingleOrDefault_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_SingleOrDefault_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_SingleOrDefault_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_SingleOrDefault_PreprocessQuery);
            private static bool __UserCitySelections_SingleOrDefault_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserCitySelections_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __UserCitySelections_SingleOrDefault_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserCitySelections_SingleOrDefault_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserCitySelections_SingleOrDefault_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserCitySelections_SingleOrDefault_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserCitySelection>)args[1]);
            }
            private static void __UserCitySelections_SingleOrDefault_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserCitySelections_SingleOrDefault_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserCitySelections_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection>)args[1];
                d.UserCitySelections_SingleOrDefault_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserCitySelection>
                __UserCitySelections_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserCitySelection>(
                    "UserCitySelections_All",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_All_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_All_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_All_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_All_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_All_PreprocessQuery);
            private static bool __UserCitySelections_All_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserCitySelections_All_CanExecute(ref r);
                return r;
            }
            private static void __UserCitySelections_All_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserCitySelections_All_Executing();
            }
            private static void __UserCitySelections_All_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserCitySelections_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserCitySelection>)args[0]);
            }
            private static void __UserCitySelections_All_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserCitySelections_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __UserCitySelections_All_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection>)args[0];
                d.UserCitySelections_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserCitySelection>
                __GetUserCitySelectionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserCitySelection>(
                    "GetUserCitySelections",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCitySelections_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCitySelections_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCitySelections_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCitySelections_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCitySelections_PreprocessQuery);
            private static bool __GetUserCitySelections_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.GetUserCitySelections_CanExecute(ref r);
                return r;
            }
            private static void __GetUserCitySelections_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserCitySelections_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __GetUserCitySelections_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserCitySelections_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserCitySelection>)args[1]);
            }
            private static void __GetUserCitySelections_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetUserCitySelections_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __GetUserCitySelections_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection>)args[1];
                d.GetUserCitySelections_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingCategorySelection>
                __UserListingCategorySelections_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingCategorySelection>(
                    "UserListingCategorySelections_Single",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_Single_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_Single_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_Single_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_Single_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_Single_PreprocessQuery);
            private static bool __UserListingCategorySelections_Single_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserListingCategorySelections_Single_CanExecute(ref r);
                return r;
            }
            private static void __UserListingCategorySelections_Single_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingCategorySelections_Single_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserListingCategorySelections_Single_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingCategorySelections_Single_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingCategorySelection>)args[1]);
            }
            private static void __UserListingCategorySelections_Single_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserListingCategorySelections_Single_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserListingCategorySelections_Single_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection>)args[1];
                d.UserListingCategorySelections_Single_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingCategorySelection>
                __UserListingCategorySelections_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingCategorySelection>(
                    "UserListingCategorySelections_SingleOrDefault",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_SingleOrDefault_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_SingleOrDefault_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_SingleOrDefault_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_SingleOrDefault_PreprocessQuery);
            private static bool __UserListingCategorySelections_SingleOrDefault_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserListingCategorySelections_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __UserListingCategorySelections_SingleOrDefault_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingCategorySelections_SingleOrDefault_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserListingCategorySelections_SingleOrDefault_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingCategorySelections_SingleOrDefault_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingCategorySelection>)args[1]);
            }
            private static void __UserListingCategorySelections_SingleOrDefault_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserListingCategorySelections_SingleOrDefault_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserListingCategorySelections_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection>)args[1];
                d.UserListingCategorySelections_SingleOrDefault_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingCategorySelection>
                __UserListingCategorySelections_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingCategorySelection>(
                    "UserListingCategorySelections_All",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_All_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_All_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_All_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_All_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_All_PreprocessQuery);
            private static bool __UserListingCategorySelections_All_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserListingCategorySelections_All_CanExecute(ref r);
                return r;
            }
            private static void __UserListingCategorySelections_All_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingCategorySelections_All_Executing();
            }
            private static void __UserListingCategorySelections_All_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingCategorySelections_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingCategorySelection>)args[0]);
            }
            private static void __UserListingCategorySelections_All_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserListingCategorySelections_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __UserListingCategorySelections_All_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection>)args[0];
                d.UserListingCategorySelections_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingCategorySelection>
                __GetUserCategorySelectionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingCategorySelection>(
                    "GetUserCategorySelections",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCategorySelections_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCategorySelections_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCategorySelections_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCategorySelections_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCategorySelections_PreprocessQuery);
            private static bool __GetUserCategorySelections_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.GetUserCategorySelections_CanExecute(ref r);
                return r;
            }
            private static void __GetUserCategorySelections_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserCategorySelections_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __GetUserCategorySelections_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserCategorySelections_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingCategorySelection>)args[1]);
            }
            private static void __GetUserCategorySelections_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetUserCategorySelections_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __GetUserCategorySelections_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection>)args[1];
                d.GetUserCategorySelections_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserKeywordSelection>
                __UserKeywordSelections_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserKeywordSelection>(
                    "UserKeywordSelections_Single",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_Single_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_Single_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_Single_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_Single_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_Single_PreprocessQuery);
            private static bool __UserKeywordSelections_Single_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserKeywordSelections_Single_CanExecute(ref r);
                return r;
            }
            private static void __UserKeywordSelections_Single_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserKeywordSelections_Single_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserKeywordSelections_Single_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserKeywordSelections_Single_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserKeywordSelection>)args[1]);
            }
            private static void __UserKeywordSelections_Single_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserKeywordSelections_Single_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserKeywordSelections_Single_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection>)args[1];
                d.UserKeywordSelections_Single_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserKeywordSelection>
                __UserKeywordSelections_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserKeywordSelection>(
                    "UserKeywordSelections_SingleOrDefault",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_SingleOrDefault_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_SingleOrDefault_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_SingleOrDefault_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_SingleOrDefault_PreprocessQuery);
            private static bool __UserKeywordSelections_SingleOrDefault_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserKeywordSelections_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __UserKeywordSelections_SingleOrDefault_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserKeywordSelections_SingleOrDefault_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserKeywordSelections_SingleOrDefault_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserKeywordSelections_SingleOrDefault_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserKeywordSelection>)args[1]);
            }
            private static void __UserKeywordSelections_SingleOrDefault_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserKeywordSelections_SingleOrDefault_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserKeywordSelections_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection>)args[1];
                d.UserKeywordSelections_SingleOrDefault_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserKeywordSelection>
                __UserKeywordSelections_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserKeywordSelection>(
                    "UserKeywordSelections_All",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_All_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_All_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_All_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_All_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_All_PreprocessQuery);
            private static bool __UserKeywordSelections_All_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserKeywordSelections_All_CanExecute(ref r);
                return r;
            }
            private static void __UserKeywordSelections_All_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserKeywordSelections_All_Executing();
            }
            private static void __UserKeywordSelections_All_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserKeywordSelections_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserKeywordSelection>)args[0]);
            }
            private static void __UserKeywordSelections_All_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserKeywordSelections_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __UserKeywordSelections_All_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection>)args[0];
                d.UserKeywordSelections_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserKeywordSelection>
                __GetUserKeywordSelectionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserKeywordSelection>(
                    "GetUserKeywordSelections",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserKeywordSelections_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserKeywordSelections_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserKeywordSelections_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserKeywordSelections_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserKeywordSelections_PreprocessQuery);
            private static bool __GetUserKeywordSelections_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.GetUserKeywordSelections_CanExecute(ref r);
                return r;
            }
            private static void __GetUserKeywordSelections_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserKeywordSelections_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __GetUserKeywordSelections_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserKeywordSelections_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserKeywordSelection>)args[1]);
            }
            private static void __GetUserKeywordSelections_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetUserKeywordSelections_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __GetUserKeywordSelections_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection>)args[1];
                d.GetUserKeywordSelections_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPreferenceSelection>
                __UserPreferenceSelections_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPreferenceSelection>(
                    "UserPreferenceSelections_Single",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_Single_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_Single_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_Single_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_Single_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_Single_PreprocessQuery);
            private static bool __UserPreferenceSelections_Single_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserPreferenceSelections_Single_CanExecute(ref r);
                return r;
            }
            private static void __UserPreferenceSelections_Single_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserPreferenceSelections_Single_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserPreferenceSelections_Single_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserPreferenceSelections_Single_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserPreferenceSelection>)args[1]);
            }
            private static void __UserPreferenceSelections_Single_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserPreferenceSelections_Single_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserPreferenceSelections_Single_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserPreferenceSelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserPreferenceSelection>)args[1];
                d.UserPreferenceSelections_Single_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPreferenceSelection>
                __UserPreferenceSelections_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPreferenceSelection>(
                    "UserPreferenceSelections_SingleOrDefault",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_SingleOrDefault_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_SingleOrDefault_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_SingleOrDefault_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_SingleOrDefault_PreprocessQuery);
            private static bool __UserPreferenceSelections_SingleOrDefault_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserPreferenceSelections_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __UserPreferenceSelections_SingleOrDefault_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserPreferenceSelections_SingleOrDefault_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserPreferenceSelections_SingleOrDefault_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserPreferenceSelections_SingleOrDefault_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserPreferenceSelection>)args[1]);
            }
            private static void __UserPreferenceSelections_SingleOrDefault_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserPreferenceSelections_SingleOrDefault_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserPreferenceSelections_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserPreferenceSelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserPreferenceSelection>)args[1];
                d.UserPreferenceSelections_SingleOrDefault_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPreferenceSelection>
                __UserPreferenceSelections_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPreferenceSelection>(
                    "UserPreferenceSelections_All",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_All_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_All_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_All_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_All_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_All_PreprocessQuery);
            private static bool __UserPreferenceSelections_All_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserPreferenceSelections_All_CanExecute(ref r);
                return r;
            }
            private static void __UserPreferenceSelections_All_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserPreferenceSelections_All_Executing();
            }
            private static void __UserPreferenceSelections_All_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserPreferenceSelections_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserPreferenceSelection>)args[0]);
            }
            private static void __UserPreferenceSelections_All_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserPreferenceSelections_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __UserPreferenceSelections_All_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserPreferenceSelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserPreferenceSelection>)args[0];
                d.UserPreferenceSelections_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingItem>
                __UserListingItems_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingItem>(
                    "UserListingItems_Single",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_Single_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_Single_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_Single_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_Single_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_Single_PreprocessQuery);
            private static bool __UserListingItems_Single_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserListingItems_Single_CanExecute(ref r);
                return r;
            }
            private static void __UserListingItems_Single_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingItems_Single_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserListingItems_Single_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingItems_Single_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingItem>)args[1]);
            }
            private static void __UserListingItems_Single_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserListingItems_Single_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserListingItems_Single_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem>)args[1];
                d.UserListingItems_Single_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingItem>
                __UserListingItems_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingItem>(
                    "UserListingItems_SingleOrDefault",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_SingleOrDefault_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_SingleOrDefault_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_SingleOrDefault_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_SingleOrDefault_PreprocessQuery);
            private static bool __UserListingItems_SingleOrDefault_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserListingItems_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __UserListingItems_SingleOrDefault_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingItems_SingleOrDefault_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserListingItems_SingleOrDefault_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingItems_SingleOrDefault_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingItem>)args[1]);
            }
            private static void __UserListingItems_SingleOrDefault_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserListingItems_SingleOrDefault_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserListingItems_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem>)args[1];
                d.UserListingItems_SingleOrDefault_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingItem>
                __UserListingItems_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingItem>(
                    "UserListingItems_All",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_All_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_All_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_All_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_All_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_All_PreprocessQuery);
            private static bool __UserListingItems_All_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserListingItems_All_CanExecute(ref r);
                return r;
            }
            private static void __UserListingItems_All_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingItems_All_Executing();
            }
            private static void __UserListingItems_All_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingItems_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingItem>)args[0]);
            }
            private static void __UserListingItems_All_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserListingItems_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __UserListingItems_All_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem>)args[0];
                d.UserListingItems_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingItem>
                __GetUserListingItemsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingItem>(
                    "GetUserListingItems",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingItems_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingItems_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingItems_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingItems_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingItems_PreprocessQuery);
            private static bool __GetUserListingItems_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.GetUserListingItems_CanExecute(ref r);
                return r;
            }
            private static void __GetUserListingItems_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserListingItems_Executing((global::System.Nullable<global::System.Guid>)args[0], (string)args[1], (global::System.Nullable<global::System.DateTime>)args[2], (global::System.Nullable<global::System.DateTime>)args[3]);
            }
            private static void __GetUserListingItems_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserListingItems_Executed((global::System.Nullable<global::System.Guid>)args[0], (string)args[1], (global::System.Nullable<global::System.DateTime>)args[2], (global::System.Nullable<global::System.DateTime>)args[3], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingItem>)args[4]);
            }
            private static void __GetUserListingItems_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetUserListingItems_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], (string)args[1], (global::System.Nullable<global::System.DateTime>)args[2], (global::System.Nullable<global::System.DateTime>)args[3], ex);
            }
            private static global::System.Linq.IQueryable __GetUserListingItems_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem>)args[4];
                d.GetUserListingItems_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], (string)args[1], (global::System.Nullable<global::System.DateTime>)args[2], (global::System.Nullable<global::System.DateTime>)args[3], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingResponseItem>
                __UserListingResponseItems_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingResponseItem>(
                    "UserListingResponseItems_Single",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_Single_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_Single_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_Single_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_Single_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_Single_PreprocessQuery);
            private static bool __UserListingResponseItems_Single_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserListingResponseItems_Single_CanExecute(ref r);
                return r;
            }
            private static void __UserListingResponseItems_Single_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingResponseItems_Single_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserListingResponseItems_Single_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingResponseItems_Single_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingResponseItem>)args[1]);
            }
            private static void __UserListingResponseItems_Single_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserListingResponseItems_Single_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserListingResponseItems_Single_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingResponseItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingResponseItem>)args[1];
                d.UserListingResponseItems_Single_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingResponseItem>
                __UserListingResponseItems_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingResponseItem>(
                    "UserListingResponseItems_SingleOrDefault",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_SingleOrDefault_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_SingleOrDefault_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_SingleOrDefault_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_SingleOrDefault_PreprocessQuery);
            private static bool __UserListingResponseItems_SingleOrDefault_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserListingResponseItems_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __UserListingResponseItems_SingleOrDefault_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingResponseItems_SingleOrDefault_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserListingResponseItems_SingleOrDefault_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingResponseItems_SingleOrDefault_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingResponseItem>)args[1]);
            }
            private static void __UserListingResponseItems_SingleOrDefault_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserListingResponseItems_SingleOrDefault_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserListingResponseItems_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingResponseItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingResponseItem>)args[1];
                d.UserListingResponseItems_SingleOrDefault_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingResponseItem>
                __UserListingResponseItems_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingResponseItem>(
                    "UserListingResponseItems_All",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_All_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_All_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_All_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_All_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_All_PreprocessQuery);
            private static bool __UserListingResponseItems_All_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserListingResponseItems_All_CanExecute(ref r);
                return r;
            }
            private static void __UserListingResponseItems_All_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingResponseItems_All_Executing();
            }
            private static void __UserListingResponseItems_All_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingResponseItems_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingResponseItem>)args[0]);
            }
            private static void __UserListingResponseItems_All_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserListingResponseItems_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __UserListingResponseItems_All_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingResponseItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingResponseItem>)args[0];
                d.UserListingResponseItems_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingResponseItem>
                __GetUserListingResponseByIdEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingResponseItem>(
                    "GetUserListingResponseById",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingResponseById_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingResponseById_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingResponseById_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingResponseById_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingResponseById_PreprocessQuery);
            private static bool __GetUserListingResponseById_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.GetUserListingResponseById_CanExecute(ref r);
                return r;
            }
            private static void __GetUserListingResponseById_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserListingResponseById_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __GetUserListingResponseById_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserListingResponseById_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingResponseItem>)args[1]);
            }
            private static void __GetUserListingResponseById_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetUserListingResponseById_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __GetUserListingResponseById_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingResponseItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingResponseItem>)args[1];
                d.GetUserListingResponseById_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.Operation>
                __Operations_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.Operation>(
                    "Operations_Single",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_Single_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_Single_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_Single_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_Single_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_Single_PreprocessQuery);
            private static bool __Operations_Single_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.Operations_Single_CanExecute(ref r);
                return r;
            }
            private static void __Operations_Single_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Operations_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Operations_Single_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Operations_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Operation>)args[1]);
            }
            private static void __Operations_Single_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.Operations_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Operations_Single_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Operation> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Operation>)args[1];
                d.Operations_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.Operation>
                __Operations_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.Operation>(
                    "Operations_SingleOrDefault",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_SingleOrDefault_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_SingleOrDefault_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_SingleOrDefault_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_SingleOrDefault_PreprocessQuery);
            private static bool __Operations_SingleOrDefault_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.Operations_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Operations_SingleOrDefault_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Operations_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Operations_SingleOrDefault_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Operations_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Operation>)args[1]);
            }
            private static void __Operations_SingleOrDefault_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.Operations_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Operations_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Operation> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Operation>)args[1];
                d.Operations_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.Operation>
                __Operations_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.Operation>(
                    "Operations_All",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_All_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_All_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_All_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_All_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_All_PreprocessQuery);
            private static bool __Operations_All_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.Operations_All_CanExecute(ref r);
                return r;
            }
            private static void __Operations_All_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Operations_All_Executing();
            }
            private static void __Operations_All_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Operations_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Operation>)args[0]);
            }
            private static void __Operations_All_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.Operations_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Operations_All_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Operation> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Operation>)args[0];
                d.Operations_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingCategorySelection>
                __GetUserListingCategorySelectionByUserIdEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingCategorySelection>(
                    "GetUserListingCategorySelectionByUserId",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingCategorySelectionByUserId_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingCategorySelectionByUserId_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingCategorySelectionByUserId_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingCategorySelectionByUserId_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingCategorySelectionByUserId_PreprocessQuery);
            private static bool __GetUserListingCategorySelectionByUserId_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.GetUserListingCategorySelectionByUserId_CanExecute(ref r);
                return r;
            }
            private static void __GetUserListingCategorySelectionByUserId_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserListingCategorySelectionByUserId_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __GetUserListingCategorySelectionByUserId_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserListingCategorySelectionByUserId_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingCategorySelection>)args[1]);
            }
            private static void __GetUserListingCategorySelectionByUserId_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetUserListingCategorySelectionByUserId_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __GetUserListingCategorySelectionByUserId_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection>)args[1];
                d.GetUserListingCategorySelectionByUserId_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserKeywordSelection>
                __GetUserKeywordSelectionByUserIdEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserKeywordSelection>(
                    "GetUserKeywordSelectionByUserId",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserKeywordSelectionByUserId_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserKeywordSelectionByUserId_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserKeywordSelectionByUserId_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserKeywordSelectionByUserId_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserKeywordSelectionByUserId_PreprocessQuery);
            private static bool __GetUserKeywordSelectionByUserId_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.GetUserKeywordSelectionByUserId_CanExecute(ref r);
                return r;
            }
            private static void __GetUserKeywordSelectionByUserId_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserKeywordSelectionByUserId_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __GetUserKeywordSelectionByUserId_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserKeywordSelectionByUserId_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserKeywordSelection>)args[1]);
            }
            private static void __GetUserKeywordSelectionByUserId_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetUserKeywordSelectionByUserId_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __GetUserKeywordSelectionByUserId_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection>)args[1];
                d.GetUserKeywordSelectionByUserId_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserCitySelection>
                __GetUserCitySelectionByUserIdEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserCitySelection>(
                    "GetUserCitySelectionByUserId",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCitySelectionByUserId_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCitySelectionByUserId_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCitySelectionByUserId_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCitySelectionByUserId_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCitySelectionByUserId_PreprocessQuery);
            private static bool __GetUserCitySelectionByUserId_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.GetUserCitySelectionByUserId_CanExecute(ref r);
                return r;
            }
            private static void __GetUserCitySelectionByUserId_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserCitySelectionByUserId_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __GetUserCitySelectionByUserId_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserCitySelectionByUserId_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserCitySelection>)args[1]);
            }
            private static void __GetUserCitySelectionByUserId_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetUserCitySelectionByUserId_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __GetUserCitySelectionByUserId_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection>)args[1];
                d.GetUserCitySelectionByUserId_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.User>
                __Users_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.User>(
                    "Users_Single",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_Single_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_Single_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_Single_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_Single_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_Single_PreprocessQuery);
            private static bool __Users_Single_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.Users_Single_CanExecute(ref r);
                return r;
            }
            private static void __Users_Single_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Users_Single_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __Users_Single_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Users_Single_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.User>)args[1]);
            }
            private static void __Users_Single_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.Users_Single_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Users_Single_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.User> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.User>)args[1];
                d.Users_Single_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.User>
                __Users_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.User>(
                    "Users_SingleOrDefault",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_SingleOrDefault_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_SingleOrDefault_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_SingleOrDefault_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_SingleOrDefault_PreprocessQuery);
            private static bool __Users_SingleOrDefault_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.Users_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Users_SingleOrDefault_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Users_SingleOrDefault_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __Users_SingleOrDefault_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Users_SingleOrDefault_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.User>)args[1]);
            }
            private static void __Users_SingleOrDefault_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.Users_SingleOrDefault_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Users_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.User> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.User>)args[1];
                d.Users_SingleOrDefault_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.User>
                __Users_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.User>(
                    "Users_All",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_All_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_All_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_All_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_All_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_All_PreprocessQuery);
            private static bool __Users_All_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.Users_All_CanExecute(ref r);
                return r;
            }
            private static void __Users_All_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Users_All_Executing();
            }
            private static void __Users_All_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Users_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.User>)args[0]);
            }
            private static void __Users_All_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.Users_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Users_All_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.User> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.User>)args[0];
                d.Users_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserTemplateItem>
                __UserTemplateItems_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserTemplateItem>(
                    "UserTemplateItems_Single",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserTemplateItems_Single_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserTemplateItems_Single_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserTemplateItems_Single_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserTemplateItems_Single_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserTemplateItems_Single_PreprocessQuery);
            private static bool __UserTemplateItems_Single_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserTemplateItems_Single_CanExecute(ref r);
                return r;
            }
            private static void __UserTemplateItems_Single_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserTemplateItems_Single_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserTemplateItems_Single_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserTemplateItems_Single_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserTemplateItem>)args[1]);
            }
            private static void __UserTemplateItems_Single_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserTemplateItems_Single_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserTemplateItems_Single_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserTemplateItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserTemplateItem>)args[1];
                d.UserTemplateItems_Single_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserTemplateItem>
                __UserTemplateItems_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserTemplateItem>(
                    "UserTemplateItems_SingleOrDefault",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserTemplateItems_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserTemplateItems_SingleOrDefault_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserTemplateItems_SingleOrDefault_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserTemplateItems_SingleOrDefault_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserTemplateItems_SingleOrDefault_PreprocessQuery);
            private static bool __UserTemplateItems_SingleOrDefault_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserTemplateItems_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __UserTemplateItems_SingleOrDefault_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserTemplateItems_SingleOrDefault_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserTemplateItems_SingleOrDefault_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserTemplateItems_SingleOrDefault_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserTemplateItem>)args[1]);
            }
            private static void __UserTemplateItems_SingleOrDefault_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserTemplateItems_SingleOrDefault_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserTemplateItems_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserTemplateItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserTemplateItem>)args[1];
                d.UserTemplateItems_SingleOrDefault_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserTemplateItem>
                __UserTemplateItems_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserTemplateItem>(
                    "UserTemplateItems_All",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserTemplateItems_All_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserTemplateItems_All_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserTemplateItems_All_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserTemplateItems_All_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserTemplateItems_All_PreprocessQuery);
            private static bool __UserTemplateItems_All_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserTemplateItems_All_CanExecute(ref r);
                return r;
            }
            private static void __UserTemplateItems_All_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserTemplateItems_All_Executing();
            }
            private static void __UserTemplateItems_All_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserTemplateItems_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserTemplateItem>)args[0]);
            }
            private static void __UserTemplateItems_All_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserTemplateItems_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __UserTemplateItems_All_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserTemplateItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserTemplateItem>)args[0];
                d.UserTemplateItems_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserTemplateItem>
                __GetUserTemplatesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserTemplateItem>(
                    "GetUserTemplates",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserTemplates_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserTemplates_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserTemplates_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserTemplates_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserTemplates_PreprocessQuery);
            private static bool __GetUserTemplates_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.GetUserTemplates_CanExecute(ref r);
                return r;
            }
            private static void __GetUserTemplates_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserTemplates_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __GetUserTemplates_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserTemplates_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserTemplateItem>)args[1]);
            }
            private static void __GetUserTemplates_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetUserTemplates_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __GetUserTemplates_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserTemplateItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserTemplateItem>)args[1];
                d.GetUserTemplates_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserTemplateItem>
                __GetUserTemplateItemByIdEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserTemplateItem>(
                    "GetUserTemplateItemById",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserTemplateItemById_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserTemplateItemById_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserTemplateItemById_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserTemplateItemById_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserTemplateItemById_PreprocessQuery);
            private static bool __GetUserTemplateItemById_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.GetUserTemplateItemById_CanExecute(ref r);
                return r;
            }
            private static void __GetUserTemplateItemById_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserTemplateItemById_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __GetUserTemplateItemById_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserTemplateItemById_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserTemplateItem>)args[1]);
            }
            private static void __GetUserTemplateItemById_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetUserTemplateItemById_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __GetUserTemplateItemById_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserTemplateItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserTemplateItem>)args[1];
                d.GetUserTemplateItemById_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPostListFilterItem>
                __GetUserPostListItemByUserIdEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPostListFilterItem>(
                    "GetUserPostListItemByUserId",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserPostListItemByUserId_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserPostListItemByUserId_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserPostListItemByUserId_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserPostListItemByUserId_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserPostListItemByUserId_PreprocessQuery);
            private static bool __GetUserPostListItemByUserId_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.GetUserPostListItemByUserId_CanExecute(ref r);
                return r;
            }
            private static void __GetUserPostListItemByUserId_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserPostListItemByUserId_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __GetUserPostListItemByUserId_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserPostListItemByUserId_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserPostListFilterItem>)args[1]);
            }
            private static void __GetUserPostListItemByUserId_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetUserPostListItemByUserId_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __GetUserPostListItemByUserId_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserPostListFilterItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserPostListFilterItem>)args[1];
                d.GetUserPostListItemByUserId_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPostListFilterItem>
                __UserPostListFilterItems_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPostListFilterItem>(
                    "UserPostListFilterItems_Single",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPostListFilterItems_Single_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPostListFilterItems_Single_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPostListFilterItems_Single_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPostListFilterItems_Single_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPostListFilterItems_Single_PreprocessQuery);
            private static bool __UserPostListFilterItems_Single_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserPostListFilterItems_Single_CanExecute(ref r);
                return r;
            }
            private static void __UserPostListFilterItems_Single_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserPostListFilterItems_Single_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserPostListFilterItems_Single_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserPostListFilterItems_Single_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserPostListFilterItem>)args[1]);
            }
            private static void __UserPostListFilterItems_Single_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserPostListFilterItems_Single_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserPostListFilterItems_Single_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserPostListFilterItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserPostListFilterItem>)args[1];
                d.UserPostListFilterItems_Single_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPostListFilterItem>
                __UserPostListFilterItems_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPostListFilterItem>(
                    "UserPostListFilterItems_SingleOrDefault",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPostListFilterItems_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPostListFilterItems_SingleOrDefault_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPostListFilterItems_SingleOrDefault_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPostListFilterItems_SingleOrDefault_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPostListFilterItems_SingleOrDefault_PreprocessQuery);
            private static bool __UserPostListFilterItems_SingleOrDefault_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserPostListFilterItems_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __UserPostListFilterItems_SingleOrDefault_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserPostListFilterItems_SingleOrDefault_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserPostListFilterItems_SingleOrDefault_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserPostListFilterItems_SingleOrDefault_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserPostListFilterItem>)args[1]);
            }
            private static void __UserPostListFilterItems_SingleOrDefault_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserPostListFilterItems_SingleOrDefault_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserPostListFilterItems_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserPostListFilterItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserPostListFilterItem>)args[1];
                d.UserPostListFilterItems_SingleOrDefault_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPostListFilterItem>
                __UserPostListFilterItems_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPostListFilterItem>(
                    "UserPostListFilterItems_All",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPostListFilterItems_All_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPostListFilterItems_All_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPostListFilterItems_All_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPostListFilterItems_All_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPostListFilterItems_All_PreprocessQuery);
            private static bool __UserPostListFilterItems_All_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserPostListFilterItems_All_CanExecute(ref r);
                return r;
            }
            private static void __UserPostListFilterItems_All_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserPostListFilterItems_All_Executing();
            }
            private static void __UserPostListFilterItems_All_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserPostListFilterItems_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserPostListFilterItem>)args[0]);
            }
            private static void __UserPostListFilterItems_All_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserPostListFilterItems_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __UserPostListFilterItems_All_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserPostListFilterItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserPostListFilterItem>)args[0];
                d.UserPostListFilterItems_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingItem>
                __GetFilteredUserListingItemsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingItem>(
                    "GetFilteredUserListingItems",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetFilteredUserListingItems_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetFilteredUserListingItems_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetFilteredUserListingItems_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetFilteredUserListingItems_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetFilteredUserListingItems_PreprocessQuery);
            private static bool __GetFilteredUserListingItems_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.GetFilteredUserListingItems_CanExecute(ref r);
                return r;
            }
            private static void __GetFilteredUserListingItems_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetFilteredUserListingItems_Executing((global::System.Nullable<global::System.Guid>)args[0], (global::System.Nullable<bool>)args[1], (global::System.Nullable<bool>)args[2], (global::System.Nullable<bool>)args[3], (global::System.Nullable<global::System.DateTime>)args[4], (global::System.Nullable<global::System.DateTime>)args[5], (global::System.Nullable<global::System.DateTime>)args[6], (global::System.Nullable<global::System.DateTime>)args[7], (string)args[8], (string)args[9], (string)args[10], (string)args[11]);
            }
            private static void __GetFilteredUserListingItems_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetFilteredUserListingItems_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Nullable<bool>)args[1], (global::System.Nullable<bool>)args[2], (global::System.Nullable<bool>)args[3], (global::System.Nullable<global::System.DateTime>)args[4], (global::System.Nullable<global::System.DateTime>)args[5], (global::System.Nullable<global::System.DateTime>)args[6], (global::System.Nullable<global::System.DateTime>)args[7], (string)args[8], (string)args[9], (string)args[10], (string)args[11], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingItem>)args[12]);
            }
            private static void __GetFilteredUserListingItems_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetFilteredUserListingItems_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Nullable<bool>)args[1], (global::System.Nullable<bool>)args[2], (global::System.Nullable<bool>)args[3], (global::System.Nullable<global::System.DateTime>)args[4], (global::System.Nullable<global::System.DateTime>)args[5], (global::System.Nullable<global::System.DateTime>)args[6], (global::System.Nullable<global::System.DateTime>)args[7], (string)args[8], (string)args[9], (string)args[10], (string)args[11], ex);
            }
            private static global::System.Linq.IQueryable __GetFilteredUserListingItems_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem>)args[12];
                d.GetFilteredUserListingItems_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], (global::System.Nullable<bool>)args[1], (global::System.Nullable<bool>)args[2], (global::System.Nullable<bool>)args[3], (global::System.Nullable<global::System.DateTime>)args[4], (global::System.Nullable<global::System.DateTime>)args[5], (global::System.Nullable<global::System.DateTime>)args[6], (global::System.Nullable<global::System.DateTime>)args[7], (string)args[8], (string)args[9], (string)args[10], (string)args[11], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.BugReportItem>
                __BugReportItems_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.BugReportItem>(
                    "BugReportItems_Single",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__BugReportItems_Single_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__BugReportItems_Single_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__BugReportItems_Single_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__BugReportItems_Single_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__BugReportItems_Single_PreprocessQuery);
            private static bool __BugReportItems_Single_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.BugReportItems_Single_CanExecute(ref r);
                return r;
            }
            private static void __BugReportItems_Single_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.BugReportItems_Single_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __BugReportItems_Single_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.BugReportItems_Single_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.BugReportItem>)args[1]);
            }
            private static void __BugReportItems_Single_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.BugReportItems_Single_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __BugReportItems_Single_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.BugReportItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.BugReportItem>)args[1];
                d.BugReportItems_Single_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.BugReportItem>
                __BugReportItems_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.BugReportItem>(
                    "BugReportItems_SingleOrDefault",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__BugReportItems_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__BugReportItems_SingleOrDefault_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__BugReportItems_SingleOrDefault_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__BugReportItems_SingleOrDefault_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__BugReportItems_SingleOrDefault_PreprocessQuery);
            private static bool __BugReportItems_SingleOrDefault_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.BugReportItems_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __BugReportItems_SingleOrDefault_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.BugReportItems_SingleOrDefault_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __BugReportItems_SingleOrDefault_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.BugReportItems_SingleOrDefault_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.BugReportItem>)args[1]);
            }
            private static void __BugReportItems_SingleOrDefault_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.BugReportItems_SingleOrDefault_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __BugReportItems_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.BugReportItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.BugReportItem>)args[1];
                d.BugReportItems_SingleOrDefault_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.BugReportItem>
                __BugReportItems_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.BugReportItem>(
                    "BugReportItems_All",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__BugReportItems_All_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__BugReportItems_All_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__BugReportItems_All_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__BugReportItems_All_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__BugReportItems_All_PreprocessQuery);
            private static bool __BugReportItems_All_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.BugReportItems_All_CanExecute(ref r);
                return r;
            }
            private static void __BugReportItems_All_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.BugReportItems_All_Executing();
            }
            private static void __BugReportItems_All_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.BugReportItems_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.BugReportItem>)args[0]);
            }
            private static void __BugReportItems_All_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.BugReportItems_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __BugReportItems_All_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.BugReportItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.BugReportItem>)args[0];
                d.BugReportItems_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingItem>
                __GetUserListingItemByIdEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingItem>(
                    "GetUserListingItemById",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingItemById_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingItemById_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingItemById_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingItemById_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingItemById_PreprocessQuery);
            private static bool __GetUserListingItemById_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.GetUserListingItemById_CanExecute(ref r);
                return r;
            }
            private static void __GetUserListingItemById_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserListingItemById_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __GetUserListingItemById_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserListingItemById_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingItem>)args[1]);
            }
            private static void __GetUserListingItemById_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetUserListingItemById_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __GetUserListingItemById_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem>)args[1];
                d.GetUserListingItemById_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPreferenceSelection>
                __GetUserPreferenceSelectionByUserIdEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPreferenceSelection>(
                    "GetUserPreferenceSelectionByUserId",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserPreferenceSelectionByUserId_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserPreferenceSelectionByUserId_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserPreferenceSelectionByUserId_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserPreferenceSelectionByUserId_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserPreferenceSelectionByUserId_PreprocessQuery);
            private static bool __GetUserPreferenceSelectionByUserId_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.GetUserPreferenceSelectionByUserId_CanExecute(ref r);
                return r;
            }
            private static void __GetUserPreferenceSelectionByUserId_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserPreferenceSelectionByUserId_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __GetUserPreferenceSelectionByUserId_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserPreferenceSelectionByUserId_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserPreferenceSelection>)args[1]);
            }
            private static void __GetUserPreferenceSelectionByUserId_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetUserPreferenceSelectionByUserId_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __GetUserPreferenceSelectionByUserId_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserPreferenceSelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserPreferenceSelection>)args[1];
                d.GetUserPreferenceSelectionByUserId_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.c_Error>
                __Errors_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.c_Error>(
                    "Errors_Single",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Errors_Single_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Errors_Single_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Errors_Single_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Errors_Single_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Errors_Single_PreprocessQuery);
            private static bool __Errors_Single_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.Errors_Single_CanExecute(ref r);
                return r;
            }
            private static void __Errors_Single_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Errors_Single_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __Errors_Single_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Errors_Single_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.c_Error>)args[1]);
            }
            private static void __Errors_Single_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.Errors_Single_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Errors_Single_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.c_Error> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.c_Error>)args[1];
                d.Errors_Single_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.c_Error>
                __Errors_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.c_Error>(
                    "Errors_SingleOrDefault",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Errors_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Errors_SingleOrDefault_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Errors_SingleOrDefault_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Errors_SingleOrDefault_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Errors_SingleOrDefault_PreprocessQuery);
            private static bool __Errors_SingleOrDefault_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.Errors_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Errors_SingleOrDefault_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Errors_SingleOrDefault_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __Errors_SingleOrDefault_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Errors_SingleOrDefault_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.c_Error>)args[1]);
            }
            private static void __Errors_SingleOrDefault_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.Errors_SingleOrDefault_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Errors_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.c_Error> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.c_Error>)args[1];
                d.Errors_SingleOrDefault_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.c_Error>
                __Errors_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.c_Error>(
                    "Errors_All",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Errors_All_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Errors_All_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Errors_All_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Errors_All_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Errors_All_PreprocessQuery);
            private static bool __Errors_All_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.Errors_All_CanExecute(ref r);
                return r;
            }
            private static void __Errors_All_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Errors_All_Executing();
            }
            private static void __Errors_All_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Errors_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.c_Error>)args[0]);
            }
            private static void __Errors_All_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.Errors_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Errors_All_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.c_Error> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.c_Error>)args[0];
                d.Errors_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.ErrorDisplay>
                __ErrorDisplays_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.ErrorDisplay>(
                    "ErrorDisplays_Single",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__ErrorDisplays_Single_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__ErrorDisplays_Single_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__ErrorDisplays_Single_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__ErrorDisplays_Single_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__ErrorDisplays_Single_PreprocessQuery);
            private static bool __ErrorDisplays_Single_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.ErrorDisplays_Single_CanExecute(ref r);
                return r;
            }
            private static void __ErrorDisplays_Single_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.ErrorDisplays_Single_Executing((string)args[0]);
            }
            private static void __ErrorDisplays_Single_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.ErrorDisplays_Single_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ErrorDisplay>)args[1]);
            }
            private static void __ErrorDisplays_Single_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.ErrorDisplays_Single_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ErrorDisplays_Single_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ErrorDisplay> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ErrorDisplay>)args[1];
                d.ErrorDisplays_Single_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.ErrorDisplay>
                __ErrorDisplays_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.ErrorDisplay>(
                    "ErrorDisplays_SingleOrDefault",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__ErrorDisplays_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__ErrorDisplays_SingleOrDefault_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__ErrorDisplays_SingleOrDefault_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__ErrorDisplays_SingleOrDefault_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__ErrorDisplays_SingleOrDefault_PreprocessQuery);
            private static bool __ErrorDisplays_SingleOrDefault_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.ErrorDisplays_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __ErrorDisplays_SingleOrDefault_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.ErrorDisplays_SingleOrDefault_Executing((string)args[0]);
            }
            private static void __ErrorDisplays_SingleOrDefault_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.ErrorDisplays_SingleOrDefault_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ErrorDisplay>)args[1]);
            }
            private static void __ErrorDisplays_SingleOrDefault_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.ErrorDisplays_SingleOrDefault_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __ErrorDisplays_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ErrorDisplay> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ErrorDisplay>)args[1];
                d.ErrorDisplays_SingleOrDefault_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.ErrorDisplay>
                __ErrorDisplays_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.ErrorDisplay>(
                    "ErrorDisplays_All",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__ErrorDisplays_All_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__ErrorDisplays_All_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__ErrorDisplays_All_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__ErrorDisplays_All_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__ErrorDisplays_All_PreprocessQuery);
            private static bool __ErrorDisplays_All_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.ErrorDisplays_All_CanExecute(ref r);
                return r;
            }
            private static void __ErrorDisplays_All_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.ErrorDisplays_All_Executing();
            }
            private static void __ErrorDisplays_All_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.ErrorDisplays_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ErrorDisplay>)args[0]);
            }
            private static void __ErrorDisplays_All_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.ErrorDisplays_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __ErrorDisplays_All_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ErrorDisplay> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ErrorDisplay>)args[0];
                d.ErrorDisplays_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserFile>
                __UserFiles_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserFile>(
                    "UserFiles_Single",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserFiles_Single_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserFiles_Single_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserFiles_Single_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserFiles_Single_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserFiles_Single_PreprocessQuery);
            private static bool __UserFiles_Single_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserFiles_Single_CanExecute(ref r);
                return r;
            }
            private static void __UserFiles_Single_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserFiles_Single_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserFiles_Single_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserFiles_Single_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserFile>)args[1]);
            }
            private static void __UserFiles_Single_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserFiles_Single_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserFiles_Single_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserFile> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserFile>)args[1];
                d.UserFiles_Single_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserFile>
                __UserFiles_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserFile>(
                    "UserFiles_SingleOrDefault",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserFiles_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserFiles_SingleOrDefault_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserFiles_SingleOrDefault_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserFiles_SingleOrDefault_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserFiles_SingleOrDefault_PreprocessQuery);
            private static bool __UserFiles_SingleOrDefault_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserFiles_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __UserFiles_SingleOrDefault_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserFiles_SingleOrDefault_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserFiles_SingleOrDefault_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserFiles_SingleOrDefault_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserFile>)args[1]);
            }
            private static void __UserFiles_SingleOrDefault_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserFiles_SingleOrDefault_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserFiles_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserFile> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserFile>)args[1];
                d.UserFiles_SingleOrDefault_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserFile>
                __UserFiles_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserFile>(
                    "UserFiles_All",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserFiles_All_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserFiles_All_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserFiles_All_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserFiles_All_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserFiles_All_PreprocessQuery);
            private static bool __UserFiles_All_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserFiles_All_CanExecute(ref r);
                return r;
            }
            private static void __UserFiles_All_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserFiles_All_Executing();
            }
            private static void __UserFiles_All_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserFiles_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserFile>)args[0]);
            }
            private static void __UserFiles_All_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserFiles_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __UserFiles_All_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserFile> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserFile>)args[0];
                d.UserFiles_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserFile>
                __GetUserFilesByUserIdEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserFile>(
                    "GetUserFilesByUserId",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserFilesByUserId_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserFilesByUserId_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserFilesByUserId_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserFilesByUserId_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserFilesByUserId_PreprocessQuery);
            private static bool __GetUserFilesByUserId_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.GetUserFilesByUserId_CanExecute(ref r);
                return r;
            }
            private static void __GetUserFilesByUserId_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserFilesByUserId_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __GetUserFilesByUserId_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserFilesByUserId_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserFile>)args[1]);
            }
            private static void __GetUserFilesByUserId_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetUserFilesByUserId_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __GetUserFilesByUserId_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserFile> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserFile>)args[1];
                d.GetUserFilesByUserId_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.SystemSettingItem>
                __SystemSettingItems_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.SystemSettingItem>(
                    "SystemSettingItems_Single",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__SystemSettingItems_Single_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__SystemSettingItems_Single_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__SystemSettingItems_Single_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__SystemSettingItems_Single_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__SystemSettingItems_Single_PreprocessQuery);
            private static bool __SystemSettingItems_Single_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.SystemSettingItems_Single_CanExecute(ref r);
                return r;
            }
            private static void __SystemSettingItems_Single_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.SystemSettingItems_Single_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __SystemSettingItems_Single_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.SystemSettingItems_Single_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.SystemSettingItem>)args[1]);
            }
            private static void __SystemSettingItems_Single_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.SystemSettingItems_Single_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __SystemSettingItems_Single_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.SystemSettingItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.SystemSettingItem>)args[1];
                d.SystemSettingItems_Single_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.SystemSettingItem>
                __SystemSettingItems_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.SystemSettingItem>(
                    "SystemSettingItems_SingleOrDefault",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__SystemSettingItems_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__SystemSettingItems_SingleOrDefault_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__SystemSettingItems_SingleOrDefault_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__SystemSettingItems_SingleOrDefault_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__SystemSettingItems_SingleOrDefault_PreprocessQuery);
            private static bool __SystemSettingItems_SingleOrDefault_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.SystemSettingItems_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __SystemSettingItems_SingleOrDefault_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.SystemSettingItems_SingleOrDefault_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __SystemSettingItems_SingleOrDefault_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.SystemSettingItems_SingleOrDefault_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.SystemSettingItem>)args[1]);
            }
            private static void __SystemSettingItems_SingleOrDefault_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.SystemSettingItems_SingleOrDefault_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __SystemSettingItems_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.SystemSettingItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.SystemSettingItem>)args[1];
                d.SystemSettingItems_SingleOrDefault_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.SystemSettingItem>
                __SystemSettingItems_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.SystemSettingItem>(
                    "SystemSettingItems_All",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__SystemSettingItems_All_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__SystemSettingItems_All_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__SystemSettingItems_All_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__SystemSettingItems_All_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__SystemSettingItems_All_PreprocessQuery);
            private static bool __SystemSettingItems_All_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.SystemSettingItems_All_CanExecute(ref r);
                return r;
            }
            private static void __SystemSettingItems_All_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.SystemSettingItems_All_Executing();
            }
            private static void __SystemSettingItems_All_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.SystemSettingItems_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.SystemSettingItem>)args[0]);
            }
            private static void __SystemSettingItems_All_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.SystemSettingItems_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __SystemSettingItems_All_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.SystemSettingItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.SystemSettingItem>)args[0];
                d.SystemSettingItems_All_PreprocessQuery(ref query);
                return query;
            }
    
        }
    
        #endregion
    }
    
    #endregion
}
