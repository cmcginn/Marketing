//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the MarketingDomainServiceData datasource.
    /// </summary>
    public sealed partial class MarketingDomainServiceDataService
        : global::LightSwitchApplication.MarketingDomainServiceData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MarketingDomainServiceDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_Updating(global::LightSwitchApplication.UserCitySelection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_Updated(global::LightSwitchApplication.UserCitySelection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_Validate(global::LightSwitchApplication.UserCitySelection entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_Updating(global::LightSwitchApplication.UserListingCategorySelection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_Updated(global::LightSwitchApplication.UserListingCategorySelection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_Validate(global::LightSwitchApplication.UserListingCategorySelection entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_Inserting(global::LightSwitchApplication.UserKeywordSelection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_Inserted(global::LightSwitchApplication.UserKeywordSelection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_Updating(global::LightSwitchApplication.UserKeywordSelection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_Updated(global::LightSwitchApplication.UserKeywordSelection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_Deleting(global::LightSwitchApplication.UserKeywordSelection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_Deleted(global::LightSwitchApplication.UserKeywordSelection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_Validate(global::LightSwitchApplication.UserKeywordSelection entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_Updating(global::LightSwitchApplication.UserPreferenceSelection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_Updated(global::LightSwitchApplication.UserPreferenceSelection entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_Validate(global::LightSwitchApplication.UserPreferenceSelection entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_Inserting(global::LightSwitchApplication.UserListingItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_Inserted(global::LightSwitchApplication.UserListingItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_Updating(global::LightSwitchApplication.UserListingItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_Updated(global::LightSwitchApplication.UserListingItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_Validate(global::LightSwitchApplication.UserListingItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_Validate(global::LightSwitchApplication.UserListingResponseItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_Updating(global::LightSwitchApplication.Operation entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_Updated(global::LightSwitchApplication.Operation entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_Validate(global::LightSwitchApplication.Operation entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Validate(global::LightSwitchApplication.User entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_Single_Executing(global::System.Nullable<global::System.Guid> CityId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_Single_PreprocessQuery(global::System.Nullable<global::System.Guid> CityId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_Single_Executed(global::System.Nullable<global::System.Guid> CityId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserCitySelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_Single_ExecuteFailed(global::System.Nullable<global::System.Guid> CityId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_SingleOrDefault_Executing(global::System.Nullable<global::System.Guid> CityId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_SingleOrDefault_PreprocessQuery(global::System.Nullable<global::System.Guid> CityId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_SingleOrDefault_Executed(global::System.Nullable<global::System.Guid> CityId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserCitySelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_SingleOrDefault_ExecuteFailed(global::System.Nullable<global::System.Guid> CityId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserCitySelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserCitySelections_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCitySelections_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCitySelections_Executing(global::System.Nullable<global::System.Guid> userId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCitySelections_PreprocessQuery(global::System.Nullable<global::System.Guid> userId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCitySelections_Executed(global::System.Nullable<global::System.Guid> userId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserCitySelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCitySelections_ExecuteFailed(global::System.Nullable<global::System.Guid> userId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_Single_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_Single_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_Single_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingCategorySelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_Single_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_SingleOrDefault_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_SingleOrDefault_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_SingleOrDefault_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingCategorySelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_SingleOrDefault_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingCategorySelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingCategorySelections_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCategorySelections_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCategorySelections_Executing(global::System.Nullable<global::System.Guid> userId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCategorySelections_PreprocessQuery(global::System.Nullable<global::System.Guid> userId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCategorySelections_Executed(global::System.Nullable<global::System.Guid> userId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingCategorySelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCategorySelections_ExecuteFailed(global::System.Nullable<global::System.Guid> userId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_Single_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_Single_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_Single_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserKeywordSelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_Single_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_SingleOrDefault_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_SingleOrDefault_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_SingleOrDefault_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserKeywordSelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_SingleOrDefault_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserKeywordSelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserKeywordSelections_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserKeywordSelections_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserKeywordSelections_Executing(global::System.Nullable<global::System.Guid> userId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserKeywordSelections_PreprocessQuery(global::System.Nullable<global::System.Guid> userId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserKeywordSelections_Executed(global::System.Nullable<global::System.Guid> userId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserKeywordSelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserKeywordSelections_ExecuteFailed(global::System.Nullable<global::System.Guid> userId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_Single_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_Single_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserPreferenceSelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_Single_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserPreferenceSelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_Single_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_SingleOrDefault_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_SingleOrDefault_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserPreferenceSelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_SingleOrDefault_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserPreferenceSelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_SingleOrDefault_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserPreferenceSelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserPreferenceSelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserPreferenceSelections_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_Single_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_Single_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_Single_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_Single_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_SingleOrDefault_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_SingleOrDefault_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_SingleOrDefault_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_SingleOrDefault_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingItems_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingItems_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingItems_Executing(global::System.Nullable<global::System.Guid> userId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingItems_PreprocessQuery(global::System.Nullable<global::System.Guid> userId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingItems_Executed(global::System.Nullable<global::System.Guid> userId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingItems_ExecuteFailed(global::System.Nullable<global::System.Guid> userId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_Single_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_Single_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingResponseItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_Single_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingResponseItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_Single_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_SingleOrDefault_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_SingleOrDefault_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingResponseItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_SingleOrDefault_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingResponseItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_SingleOrDefault_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingResponseItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingResponseItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserListingResponseItems_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingResponseById_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingResponseById_Executing(global::System.Nullable<global::System.Guid> responseId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingResponseById_PreprocessQuery(global::System.Nullable<global::System.Guid> responseId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingResponseItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingResponseById_Executed(global::System.Nullable<global::System.Guid> responseId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingResponseItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingResponseById_ExecuteFailed(global::System.Nullable<global::System.Guid> responseId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_Single_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_Single_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Operation> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_Single_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Operation> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_Single_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_SingleOrDefault_Executing(global::System.Nullable<int> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Operation> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_SingleOrDefault_Executed(global::System.Nullable<int> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Operation> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Operation> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Operation> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Operations_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingCategorySelectionByUserId_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingCategorySelectionByUserId_Executing(global::System.Nullable<global::System.Guid> userId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingCategorySelectionByUserId_PreprocessQuery(global::System.Nullable<global::System.Guid> userId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingCategorySelectionByUserId_Executed(global::System.Nullable<global::System.Guid> userId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingCategorySelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingCategorySelectionByUserId_ExecuteFailed(global::System.Nullable<global::System.Guid> userId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserKeywordSelectionByUserId_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserKeywordSelectionByUserId_Executing(global::System.Nullable<global::System.Guid> userId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserKeywordSelectionByUserId_PreprocessQuery(global::System.Nullable<global::System.Guid> userId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserKeywordSelectionByUserId_Executed(global::System.Nullable<global::System.Guid> userId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserKeywordSelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserKeywordSelectionByUserId_ExecuteFailed(global::System.Nullable<global::System.Guid> userId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingItemsByUserId_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingItemsByUserId_Executing(global::System.Nullable<global::System.Guid> userId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingItemsByUserId_PreprocessQuery(global::System.Nullable<global::System.Guid> userId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingItemsByUserId_Executed(global::System.Nullable<global::System.Guid> userId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingItem> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserListingItemsByUserId_ExecuteFailed(global::System.Nullable<global::System.Guid> userId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserPreferencesSelectionByUserId_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserPreferencesSelectionByUserId_Executing(global::System.Nullable<global::System.Guid> userId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserPreferencesSelectionByUserId_PreprocessQuery(global::System.Nullable<global::System.Guid> userId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserPreferenceSelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserPreferencesSelectionByUserId_Executed(global::System.Nullable<global::System.Guid> userId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserPreferenceSelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserPreferencesSelectionByUserId_ExecuteFailed(global::System.Nullable<global::System.Guid> userId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCitySelectionByUserId_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCitySelectionByUserId_Executing(global::System.Nullable<global::System.Guid> userId);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCitySelectionByUserId_PreprocessQuery(global::System.Nullable<global::System.Guid> userId, ref global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCitySelectionByUserId_Executed(global::System.Nullable<global::System.Guid> userId, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserCitySelection> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GetUserCitySelectionByUserId_ExecuteFailed(global::System.Nullable<global::System.Guid> userId, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Single_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Single_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.User> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Single_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.User> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Single_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_SingleOrDefault_Executing(global::System.Nullable<global::System.Guid> Id);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_SingleOrDefault_PreprocessQuery(global::System.Nullable<global::System.Guid> Id, ref global::System.Linq.IQueryable<global::LightSwitchApplication.User> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_SingleOrDefault_Executed(global::System.Nullable<global::System.Guid> Id, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.User> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_SingleOrDefault_ExecuteFailed(global::System.Nullable<global::System.Guid> Id, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.User> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.User> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_All_ExecuteFailed(global::System.Exception exception);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserCitySelection>
                __UserCitySelectionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserCitySelection>(
                    "UserCitySelections",
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_CanUpdate,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_CanRead,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_Updating,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_Updated,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_Validate);
            private static bool __UserCitySelections_CanUpdate(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserCitySelections_CanUpdate(ref result);
                return result;
            }
            private static bool __UserCitySelections_CanRead(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserCitySelections_CanRead(ref result);
                return result;
            }
            private static void __UserCitySelections_Updating(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserCitySelection e)
            {
                d.UserCitySelections_Updating(e);
            }
            private static void __UserCitySelections_Updated(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserCitySelection e)
            {
                d.UserCitySelections_Updated(e);
            }
            private static void __UserCitySelections_Validate(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserCitySelection e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.UserCitySelections_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingCategorySelection>
                __UserListingCategorySelectionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingCategorySelection>(
                    "UserListingCategorySelections",
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_CanUpdate,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_CanRead,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_Updating,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_Updated,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_Validate);
            private static bool __UserListingCategorySelections_CanUpdate(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserListingCategorySelections_CanUpdate(ref result);
                return result;
            }
            private static bool __UserListingCategorySelections_CanRead(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserListingCategorySelections_CanRead(ref result);
                return result;
            }
            private static void __UserListingCategorySelections_Updating(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserListingCategorySelection e)
            {
                d.UserListingCategorySelections_Updating(e);
            }
            private static void __UserListingCategorySelections_Updated(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserListingCategorySelection e)
            {
                d.UserListingCategorySelections_Updated(e);
            }
            private static void __UserListingCategorySelections_Validate(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserListingCategorySelection e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.UserListingCategorySelections_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserKeywordSelection>
                __UserKeywordSelectionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserKeywordSelection>(
                    "UserKeywordSelections",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_CanInsert,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_CanUpdate,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_CanDelete,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_CanRead,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_Inserting,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_Inserted,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_Updating,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_Updated,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_Deleting,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_Deleted,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_Validate);
            private static bool __UserKeywordSelections_CanInsert(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserKeywordSelections_CanInsert(ref result);
                return result;
            }
            private static bool __UserKeywordSelections_CanUpdate(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserKeywordSelections_CanUpdate(ref result);
                return result;
            }
            private static bool __UserKeywordSelections_CanDelete(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserKeywordSelections_CanDelete(ref result);
                return result;
            }
            private static bool __UserKeywordSelections_CanRead(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserKeywordSelections_CanRead(ref result);
                return result;
            }
            private static void __UserKeywordSelections_Inserting(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserKeywordSelection e)
            {
                d.UserKeywordSelections_Inserting(e);
            }
            private static void __UserKeywordSelections_Inserted(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserKeywordSelection e)
            {
                d.UserKeywordSelections_Inserted(e);
            }
            private static void __UserKeywordSelections_Updating(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserKeywordSelection e)
            {
                d.UserKeywordSelections_Updating(e);
            }
            private static void __UserKeywordSelections_Updated(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserKeywordSelection e)
            {
                d.UserKeywordSelections_Updated(e);
            }
            private static void __UserKeywordSelections_Deleting(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserKeywordSelection e)
            {
                d.UserKeywordSelections_Deleting(e);
            }
            private static void __UserKeywordSelections_Deleted(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserKeywordSelection e)
            {
                d.UserKeywordSelections_Deleted(e);
            }
            private static void __UserKeywordSelections_Validate(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserKeywordSelection e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.UserKeywordSelections_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPreferenceSelection>
                __UserPreferenceSelectionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPreferenceSelection>(
                    "UserPreferenceSelections",
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_CanUpdate,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_CanRead,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_Updating,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_Updated,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_Validate);
            private static bool __UserPreferenceSelections_CanUpdate(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserPreferenceSelections_CanUpdate(ref result);
                return result;
            }
            private static bool __UserPreferenceSelections_CanRead(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserPreferenceSelections_CanRead(ref result);
                return result;
            }
            private static void __UserPreferenceSelections_Updating(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserPreferenceSelection e)
            {
                d.UserPreferenceSelections_Updating(e);
            }
            private static void __UserPreferenceSelections_Updated(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserPreferenceSelection e)
            {
                d.UserPreferenceSelections_Updated(e);
            }
            private static void __UserPreferenceSelections_Validate(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserPreferenceSelection e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.UserPreferenceSelections_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingItem>
                __UserListingItemsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingItem>(
                    "UserListingItems",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_CanInsert,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_CanUpdate,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_CanRead,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_Inserting,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_Inserted,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_Updating,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_Updated,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_Validate);
            private static bool __UserListingItems_CanInsert(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserListingItems_CanInsert(ref result);
                return result;
            }
            private static bool __UserListingItems_CanUpdate(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserListingItems_CanUpdate(ref result);
                return result;
            }
            private static bool __UserListingItems_CanRead(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserListingItems_CanRead(ref result);
                return result;
            }
            private static void __UserListingItems_Inserting(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserListingItem e)
            {
                d.UserListingItems_Inserting(e);
            }
            private static void __UserListingItems_Inserted(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserListingItem e)
            {
                d.UserListingItems_Inserted(e);
            }
            private static void __UserListingItems_Updating(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserListingItem e)
            {
                d.UserListingItems_Updating(e);
            }
            private static void __UserListingItems_Updated(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserListingItem e)
            {
                d.UserListingItems_Updated(e);
            }
            private static void __UserListingItems_Validate(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserListingItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.UserListingItems_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingResponseItem>
                __UserListingResponseItemsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingResponseItem>(
                    "UserListingResponseItems",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_Validate);
            private static bool __UserListingResponseItems_CanRead(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.UserListingResponseItems_CanRead(ref result);
                return result;
            }
            private static void __UserListingResponseItems_Validate(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.UserListingResponseItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.UserListingResponseItems_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.Operation>
                __OperationsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.Operation>(
                    "Operations",
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_CanUpdate,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_CanRead,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_Updating,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_Updated,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_Validate);
            private static bool __Operations_CanUpdate(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.Operations_CanUpdate(ref result);
                return result;
            }
            private static bool __Operations_CanRead(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.Operations_CanRead(ref result);
                return result;
            }
            private static void __Operations_Updating(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.Operation e)
            {
                d.Operations_Updating(e);
            }
            private static void __Operations_Updated(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.Operation e)
            {
                d.Operations_Updated(e);
            }
            private static void __Operations_Validate(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.Operation e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Operations_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.User>
                __UsersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.User>(
                    "Users",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_Validate);
            private static bool __Users_CanRead(global::LightSwitchApplication.MarketingDomainServiceDataService d)
            {
                bool result = true;
                d.Users_CanRead(ref result);
                return result;
            }
            private static void __Users_Validate(global::LightSwitchApplication.MarketingDomainServiceDataService d, global::LightSwitchApplication.User e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Users_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserCitySelection>
                __UserCitySelections_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserCitySelection>(
                    "UserCitySelections_Single",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_Single_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_Single_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_Single_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_Single_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_Single_PreprocessQuery);
            private static bool __UserCitySelections_Single_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserCitySelections_Single_CanExecute(ref r);
                return r;
            }
            private static void __UserCitySelections_Single_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserCitySelections_Single_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserCitySelections_Single_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserCitySelections_Single_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserCitySelection>)args[1]);
            }
            private static void __UserCitySelections_Single_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserCitySelections_Single_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserCitySelections_Single_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection>)args[1];
                d.UserCitySelections_Single_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserCitySelection>
                __UserCitySelections_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserCitySelection>(
                    "UserCitySelections_SingleOrDefault",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_SingleOrDefault_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_SingleOrDefault_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_SingleOrDefault_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_SingleOrDefault_PreprocessQuery);
            private static bool __UserCitySelections_SingleOrDefault_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserCitySelections_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __UserCitySelections_SingleOrDefault_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserCitySelections_SingleOrDefault_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserCitySelections_SingleOrDefault_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserCitySelections_SingleOrDefault_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserCitySelection>)args[1]);
            }
            private static void __UserCitySelections_SingleOrDefault_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserCitySelections_SingleOrDefault_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserCitySelections_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection>)args[1];
                d.UserCitySelections_SingleOrDefault_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserCitySelection>
                __UserCitySelections_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserCitySelection>(
                    "UserCitySelections_All",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_All_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_All_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_All_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_All_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserCitySelections_All_PreprocessQuery);
            private static bool __UserCitySelections_All_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserCitySelections_All_CanExecute(ref r);
                return r;
            }
            private static void __UserCitySelections_All_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserCitySelections_All_Executing();
            }
            private static void __UserCitySelections_All_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserCitySelections_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserCitySelection>)args[0]);
            }
            private static void __UserCitySelections_All_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserCitySelections_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __UserCitySelections_All_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection>)args[0];
                d.UserCitySelections_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserCitySelection>
                __GetUserCitySelectionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserCitySelection>(
                    "GetUserCitySelections",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCitySelections_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCitySelections_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCitySelections_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCitySelections_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCitySelections_PreprocessQuery);
            private static bool __GetUserCitySelections_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.GetUserCitySelections_CanExecute(ref r);
                return r;
            }
            private static void __GetUserCitySelections_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserCitySelections_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __GetUserCitySelections_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserCitySelections_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserCitySelection>)args[1]);
            }
            private static void __GetUserCitySelections_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetUserCitySelections_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __GetUserCitySelections_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection>)args[1];
                d.GetUserCitySelections_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingCategorySelection>
                __UserListingCategorySelections_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingCategorySelection>(
                    "UserListingCategorySelections_Single",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_Single_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_Single_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_Single_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_Single_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_Single_PreprocessQuery);
            private static bool __UserListingCategorySelections_Single_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserListingCategorySelections_Single_CanExecute(ref r);
                return r;
            }
            private static void __UserListingCategorySelections_Single_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingCategorySelections_Single_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserListingCategorySelections_Single_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingCategorySelections_Single_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingCategorySelection>)args[1]);
            }
            private static void __UserListingCategorySelections_Single_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserListingCategorySelections_Single_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserListingCategorySelections_Single_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection>)args[1];
                d.UserListingCategorySelections_Single_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingCategorySelection>
                __UserListingCategorySelections_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingCategorySelection>(
                    "UserListingCategorySelections_SingleOrDefault",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_SingleOrDefault_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_SingleOrDefault_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_SingleOrDefault_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_SingleOrDefault_PreprocessQuery);
            private static bool __UserListingCategorySelections_SingleOrDefault_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserListingCategorySelections_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __UserListingCategorySelections_SingleOrDefault_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingCategorySelections_SingleOrDefault_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserListingCategorySelections_SingleOrDefault_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingCategorySelections_SingleOrDefault_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingCategorySelection>)args[1]);
            }
            private static void __UserListingCategorySelections_SingleOrDefault_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserListingCategorySelections_SingleOrDefault_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserListingCategorySelections_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection>)args[1];
                d.UserListingCategorySelections_SingleOrDefault_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingCategorySelection>
                __UserListingCategorySelections_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingCategorySelection>(
                    "UserListingCategorySelections_All",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_All_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_All_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_All_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_All_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingCategorySelections_All_PreprocessQuery);
            private static bool __UserListingCategorySelections_All_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserListingCategorySelections_All_CanExecute(ref r);
                return r;
            }
            private static void __UserListingCategorySelections_All_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingCategorySelections_All_Executing();
            }
            private static void __UserListingCategorySelections_All_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingCategorySelections_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingCategorySelection>)args[0]);
            }
            private static void __UserListingCategorySelections_All_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserListingCategorySelections_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __UserListingCategorySelections_All_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection>)args[0];
                d.UserListingCategorySelections_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingCategorySelection>
                __GetUserCategorySelectionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingCategorySelection>(
                    "GetUserCategorySelections",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCategorySelections_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCategorySelections_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCategorySelections_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCategorySelections_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCategorySelections_PreprocessQuery);
            private static bool __GetUserCategorySelections_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.GetUserCategorySelections_CanExecute(ref r);
                return r;
            }
            private static void __GetUserCategorySelections_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserCategorySelections_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __GetUserCategorySelections_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserCategorySelections_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingCategorySelection>)args[1]);
            }
            private static void __GetUserCategorySelections_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetUserCategorySelections_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __GetUserCategorySelections_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection>)args[1];
                d.GetUserCategorySelections_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserKeywordSelection>
                __UserKeywordSelections_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserKeywordSelection>(
                    "UserKeywordSelections_Single",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_Single_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_Single_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_Single_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_Single_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_Single_PreprocessQuery);
            private static bool __UserKeywordSelections_Single_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserKeywordSelections_Single_CanExecute(ref r);
                return r;
            }
            private static void __UserKeywordSelections_Single_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserKeywordSelections_Single_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserKeywordSelections_Single_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserKeywordSelections_Single_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserKeywordSelection>)args[1]);
            }
            private static void __UserKeywordSelections_Single_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserKeywordSelections_Single_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserKeywordSelections_Single_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection>)args[1];
                d.UserKeywordSelections_Single_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserKeywordSelection>
                __UserKeywordSelections_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserKeywordSelection>(
                    "UserKeywordSelections_SingleOrDefault",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_SingleOrDefault_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_SingleOrDefault_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_SingleOrDefault_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_SingleOrDefault_PreprocessQuery);
            private static bool __UserKeywordSelections_SingleOrDefault_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserKeywordSelections_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __UserKeywordSelections_SingleOrDefault_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserKeywordSelections_SingleOrDefault_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserKeywordSelections_SingleOrDefault_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserKeywordSelections_SingleOrDefault_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserKeywordSelection>)args[1]);
            }
            private static void __UserKeywordSelections_SingleOrDefault_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserKeywordSelections_SingleOrDefault_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserKeywordSelections_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection>)args[1];
                d.UserKeywordSelections_SingleOrDefault_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserKeywordSelection>
                __UserKeywordSelections_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserKeywordSelection>(
                    "UserKeywordSelections_All",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_All_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_All_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_All_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_All_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserKeywordSelections_All_PreprocessQuery);
            private static bool __UserKeywordSelections_All_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserKeywordSelections_All_CanExecute(ref r);
                return r;
            }
            private static void __UserKeywordSelections_All_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserKeywordSelections_All_Executing();
            }
            private static void __UserKeywordSelections_All_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserKeywordSelections_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserKeywordSelection>)args[0]);
            }
            private static void __UserKeywordSelections_All_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserKeywordSelections_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __UserKeywordSelections_All_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection>)args[0];
                d.UserKeywordSelections_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserKeywordSelection>
                __GetUserKeywordSelectionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserKeywordSelection>(
                    "GetUserKeywordSelections",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserKeywordSelections_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserKeywordSelections_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserKeywordSelections_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserKeywordSelections_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserKeywordSelections_PreprocessQuery);
            private static bool __GetUserKeywordSelections_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.GetUserKeywordSelections_CanExecute(ref r);
                return r;
            }
            private static void __GetUserKeywordSelections_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserKeywordSelections_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __GetUserKeywordSelections_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserKeywordSelections_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserKeywordSelection>)args[1]);
            }
            private static void __GetUserKeywordSelections_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetUserKeywordSelections_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __GetUserKeywordSelections_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection>)args[1];
                d.GetUserKeywordSelections_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPreferenceSelection>
                __UserPreferenceSelections_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPreferenceSelection>(
                    "UserPreferenceSelections_Single",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_Single_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_Single_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_Single_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_Single_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_Single_PreprocessQuery);
            private static bool __UserPreferenceSelections_Single_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserPreferenceSelections_Single_CanExecute(ref r);
                return r;
            }
            private static void __UserPreferenceSelections_Single_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserPreferenceSelections_Single_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserPreferenceSelections_Single_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserPreferenceSelections_Single_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserPreferenceSelection>)args[1]);
            }
            private static void __UserPreferenceSelections_Single_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserPreferenceSelections_Single_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserPreferenceSelections_Single_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserPreferenceSelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserPreferenceSelection>)args[1];
                d.UserPreferenceSelections_Single_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPreferenceSelection>
                __UserPreferenceSelections_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPreferenceSelection>(
                    "UserPreferenceSelections_SingleOrDefault",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_SingleOrDefault_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_SingleOrDefault_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_SingleOrDefault_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_SingleOrDefault_PreprocessQuery);
            private static bool __UserPreferenceSelections_SingleOrDefault_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserPreferenceSelections_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __UserPreferenceSelections_SingleOrDefault_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserPreferenceSelections_SingleOrDefault_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserPreferenceSelections_SingleOrDefault_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserPreferenceSelections_SingleOrDefault_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserPreferenceSelection>)args[1]);
            }
            private static void __UserPreferenceSelections_SingleOrDefault_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserPreferenceSelections_SingleOrDefault_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserPreferenceSelections_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserPreferenceSelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserPreferenceSelection>)args[1];
                d.UserPreferenceSelections_SingleOrDefault_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPreferenceSelection>
                __UserPreferenceSelections_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPreferenceSelection>(
                    "UserPreferenceSelections_All",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_All_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_All_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_All_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_All_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserPreferenceSelections_All_PreprocessQuery);
            private static bool __UserPreferenceSelections_All_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserPreferenceSelections_All_CanExecute(ref r);
                return r;
            }
            private static void __UserPreferenceSelections_All_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserPreferenceSelections_All_Executing();
            }
            private static void __UserPreferenceSelections_All_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserPreferenceSelections_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserPreferenceSelection>)args[0]);
            }
            private static void __UserPreferenceSelections_All_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserPreferenceSelections_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __UserPreferenceSelections_All_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserPreferenceSelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserPreferenceSelection>)args[0];
                d.UserPreferenceSelections_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingItem>
                __UserListingItems_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingItem>(
                    "UserListingItems_Single",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_Single_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_Single_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_Single_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_Single_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_Single_PreprocessQuery);
            private static bool __UserListingItems_Single_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserListingItems_Single_CanExecute(ref r);
                return r;
            }
            private static void __UserListingItems_Single_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingItems_Single_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserListingItems_Single_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingItems_Single_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingItem>)args[1]);
            }
            private static void __UserListingItems_Single_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserListingItems_Single_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserListingItems_Single_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem>)args[1];
                d.UserListingItems_Single_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingItem>
                __UserListingItems_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingItem>(
                    "UserListingItems_SingleOrDefault",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_SingleOrDefault_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_SingleOrDefault_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_SingleOrDefault_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_SingleOrDefault_PreprocessQuery);
            private static bool __UserListingItems_SingleOrDefault_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserListingItems_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __UserListingItems_SingleOrDefault_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingItems_SingleOrDefault_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserListingItems_SingleOrDefault_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingItems_SingleOrDefault_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingItem>)args[1]);
            }
            private static void __UserListingItems_SingleOrDefault_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserListingItems_SingleOrDefault_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserListingItems_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem>)args[1];
                d.UserListingItems_SingleOrDefault_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingItem>
                __UserListingItems_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingItem>(
                    "UserListingItems_All",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_All_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_All_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_All_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_All_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingItems_All_PreprocessQuery);
            private static bool __UserListingItems_All_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserListingItems_All_CanExecute(ref r);
                return r;
            }
            private static void __UserListingItems_All_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingItems_All_Executing();
            }
            private static void __UserListingItems_All_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingItems_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingItem>)args[0]);
            }
            private static void __UserListingItems_All_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserListingItems_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __UserListingItems_All_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem>)args[0];
                d.UserListingItems_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingItem>
                __GetUserListingItemsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingItem>(
                    "GetUserListingItems",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingItems_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingItems_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingItems_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingItems_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingItems_PreprocessQuery);
            private static bool __GetUserListingItems_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.GetUserListingItems_CanExecute(ref r);
                return r;
            }
            private static void __GetUserListingItems_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserListingItems_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __GetUserListingItems_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserListingItems_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingItem>)args[1]);
            }
            private static void __GetUserListingItems_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetUserListingItems_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __GetUserListingItems_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem>)args[1];
                d.GetUserListingItems_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingResponseItem>
                __UserListingResponseItems_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingResponseItem>(
                    "UserListingResponseItems_Single",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_Single_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_Single_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_Single_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_Single_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_Single_PreprocessQuery);
            private static bool __UserListingResponseItems_Single_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserListingResponseItems_Single_CanExecute(ref r);
                return r;
            }
            private static void __UserListingResponseItems_Single_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingResponseItems_Single_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserListingResponseItems_Single_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingResponseItems_Single_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingResponseItem>)args[1]);
            }
            private static void __UserListingResponseItems_Single_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserListingResponseItems_Single_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserListingResponseItems_Single_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingResponseItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingResponseItem>)args[1];
                d.UserListingResponseItems_Single_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingResponseItem>
                __UserListingResponseItems_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingResponseItem>(
                    "UserListingResponseItems_SingleOrDefault",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_SingleOrDefault_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_SingleOrDefault_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_SingleOrDefault_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_SingleOrDefault_PreprocessQuery);
            private static bool __UserListingResponseItems_SingleOrDefault_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserListingResponseItems_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __UserListingResponseItems_SingleOrDefault_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingResponseItems_SingleOrDefault_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __UserListingResponseItems_SingleOrDefault_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingResponseItems_SingleOrDefault_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingResponseItem>)args[1]);
            }
            private static void __UserListingResponseItems_SingleOrDefault_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserListingResponseItems_SingleOrDefault_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __UserListingResponseItems_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingResponseItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingResponseItem>)args[1];
                d.UserListingResponseItems_SingleOrDefault_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingResponseItem>
                __UserListingResponseItems_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingResponseItem>(
                    "UserListingResponseItems_All",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_All_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_All_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_All_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_All_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__UserListingResponseItems_All_PreprocessQuery);
            private static bool __UserListingResponseItems_All_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.UserListingResponseItems_All_CanExecute(ref r);
                return r;
            }
            private static void __UserListingResponseItems_All_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingResponseItems_All_Executing();
            }
            private static void __UserListingResponseItems_All_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.UserListingResponseItems_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingResponseItem>)args[0]);
            }
            private static void __UserListingResponseItems_All_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.UserListingResponseItems_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __UserListingResponseItems_All_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingResponseItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingResponseItem>)args[0];
                d.UserListingResponseItems_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingResponseItem>
                __GetUserListingResponseByIdEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingResponseItem>(
                    "GetUserListingResponseById",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingResponseById_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingResponseById_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingResponseById_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingResponseById_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingResponseById_PreprocessQuery);
            private static bool __GetUserListingResponseById_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.GetUserListingResponseById_CanExecute(ref r);
                return r;
            }
            private static void __GetUserListingResponseById_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserListingResponseById_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __GetUserListingResponseById_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserListingResponseById_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingResponseItem>)args[1]);
            }
            private static void __GetUserListingResponseById_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetUserListingResponseById_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __GetUserListingResponseById_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingResponseItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingResponseItem>)args[1];
                d.GetUserListingResponseById_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.Operation>
                __Operations_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.Operation>(
                    "Operations_Single",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_Single_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_Single_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_Single_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_Single_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_Single_PreprocessQuery);
            private static bool __Operations_Single_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.Operations_Single_CanExecute(ref r);
                return r;
            }
            private static void __Operations_Single_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Operations_Single_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Operations_Single_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Operations_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Operation>)args[1]);
            }
            private static void __Operations_Single_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.Operations_Single_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Operations_Single_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Operation> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Operation>)args[1];
                d.Operations_Single_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.Operation>
                __Operations_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.Operation>(
                    "Operations_SingleOrDefault",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_SingleOrDefault_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_SingleOrDefault_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_SingleOrDefault_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_SingleOrDefault_PreprocessQuery);
            private static bool __Operations_SingleOrDefault_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.Operations_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Operations_SingleOrDefault_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Operations_SingleOrDefault_Executing((global::System.Nullable<int>)args[0]);
            }
            private static void __Operations_SingleOrDefault_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Operations_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Operation>)args[1]);
            }
            private static void __Operations_SingleOrDefault_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.Operations_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Operations_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Operation> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Operation>)args[1];
                d.Operations_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.Operation>
                __Operations_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.Operation>(
                    "Operations_All",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_All_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_All_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_All_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_All_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Operations_All_PreprocessQuery);
            private static bool __Operations_All_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.Operations_All_CanExecute(ref r);
                return r;
            }
            private static void __Operations_All_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Operations_All_Executing();
            }
            private static void __Operations_All_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Operations_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Operation>)args[0]);
            }
            private static void __Operations_All_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.Operations_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Operations_All_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Operation> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Operation>)args[0];
                d.Operations_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingCategorySelection>
                __GetUserListingCategorySelectionByUserIdEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingCategorySelection>(
                    "GetUserListingCategorySelectionByUserId",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingCategorySelectionByUserId_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingCategorySelectionByUserId_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingCategorySelectionByUserId_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingCategorySelectionByUserId_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingCategorySelectionByUserId_PreprocessQuery);
            private static bool __GetUserListingCategorySelectionByUserId_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.GetUserListingCategorySelectionByUserId_CanExecute(ref r);
                return r;
            }
            private static void __GetUserListingCategorySelectionByUserId_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserListingCategorySelectionByUserId_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __GetUserListingCategorySelectionByUserId_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserListingCategorySelectionByUserId_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingCategorySelection>)args[1]);
            }
            private static void __GetUserListingCategorySelectionByUserId_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetUserListingCategorySelectionByUserId_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __GetUserListingCategorySelectionByUserId_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingCategorySelection>)args[1];
                d.GetUserListingCategorySelectionByUserId_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserKeywordSelection>
                __GetUserKeywordSelectionByUserIdEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserKeywordSelection>(
                    "GetUserKeywordSelectionByUserId",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserKeywordSelectionByUserId_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserKeywordSelectionByUserId_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserKeywordSelectionByUserId_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserKeywordSelectionByUserId_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserKeywordSelectionByUserId_PreprocessQuery);
            private static bool __GetUserKeywordSelectionByUserId_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.GetUserKeywordSelectionByUserId_CanExecute(ref r);
                return r;
            }
            private static void __GetUserKeywordSelectionByUserId_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserKeywordSelectionByUserId_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __GetUserKeywordSelectionByUserId_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserKeywordSelectionByUserId_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserKeywordSelection>)args[1]);
            }
            private static void __GetUserKeywordSelectionByUserId_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetUserKeywordSelectionByUserId_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __GetUserKeywordSelectionByUserId_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserKeywordSelection>)args[1];
                d.GetUserKeywordSelectionByUserId_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingItem>
                __GetUserListingItemsByUserIdEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserListingItem>(
                    "GetUserListingItemsByUserId",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingItemsByUserId_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingItemsByUserId_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingItemsByUserId_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingItemsByUserId_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserListingItemsByUserId_PreprocessQuery);
            private static bool __GetUserListingItemsByUserId_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.GetUserListingItemsByUserId_CanExecute(ref r);
                return r;
            }
            private static void __GetUserListingItemsByUserId_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserListingItemsByUserId_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __GetUserListingItemsByUserId_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserListingItemsByUserId_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserListingItem>)args[1]);
            }
            private static void __GetUserListingItemsByUserId_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetUserListingItemsByUserId_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __GetUserListingItemsByUserId_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserListingItem>)args[1];
                d.GetUserListingItemsByUserId_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPreferenceSelection>
                __GetUserPreferencesSelectionByUserIdEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserPreferenceSelection>(
                    "GetUserPreferencesSelectionByUserId",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserPreferencesSelectionByUserId_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserPreferencesSelectionByUserId_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserPreferencesSelectionByUserId_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserPreferencesSelectionByUserId_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserPreferencesSelectionByUserId_PreprocessQuery);
            private static bool __GetUserPreferencesSelectionByUserId_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.GetUserPreferencesSelectionByUserId_CanExecute(ref r);
                return r;
            }
            private static void __GetUserPreferencesSelectionByUserId_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserPreferencesSelectionByUserId_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __GetUserPreferencesSelectionByUserId_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserPreferencesSelectionByUserId_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserPreferenceSelection>)args[1]);
            }
            private static void __GetUserPreferencesSelectionByUserId_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetUserPreferencesSelectionByUserId_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __GetUserPreferencesSelectionByUserId_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserPreferenceSelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserPreferenceSelection>)args[1];
                d.GetUserPreferencesSelectionByUserId_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserCitySelection>
                __GetUserCitySelectionByUserIdEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.UserCitySelection>(
                    "GetUserCitySelectionByUserId",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCitySelectionByUserId_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCitySelectionByUserId_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCitySelectionByUserId_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCitySelectionByUserId_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__GetUserCitySelectionByUserId_PreprocessQuery);
            private static bool __GetUserCitySelectionByUserId_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.GetUserCitySelectionByUserId_CanExecute(ref r);
                return r;
            }
            private static void __GetUserCitySelectionByUserId_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserCitySelectionByUserId_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __GetUserCitySelectionByUserId_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.GetUserCitySelectionByUserId_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.UserCitySelection>)args[1]);
            }
            private static void __GetUserCitySelectionByUserId_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.GetUserCitySelectionByUserId_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __GetUserCitySelectionByUserId_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.UserCitySelection>)args[1];
                d.GetUserCitySelectionByUserId_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.User>
                __Users_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.User>(
                    "Users_Single",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_Single_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_Single_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_Single_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_Single_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_Single_PreprocessQuery);
            private static bool __Users_Single_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.Users_Single_CanExecute(ref r);
                return r;
            }
            private static void __Users_Single_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Users_Single_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __Users_Single_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Users_Single_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.User>)args[1]);
            }
            private static void __Users_Single_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.Users_Single_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Users_Single_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.User> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.User>)args[1];
                d.Users_Single_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.User>
                __Users_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.User>(
                    "Users_SingleOrDefault",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_SingleOrDefault_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_SingleOrDefault_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_SingleOrDefault_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_SingleOrDefault_PreprocessQuery);
            private static bool __Users_SingleOrDefault_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.Users_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Users_SingleOrDefault_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Users_SingleOrDefault_Executing((global::System.Nullable<global::System.Guid>)args[0]);
            }
            private static void __Users_SingleOrDefault_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Users_SingleOrDefault_Executed((global::System.Nullable<global::System.Guid>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.User>)args[1]);
            }
            private static void __Users_SingleOrDefault_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.Users_SingleOrDefault_ExecuteFailed((global::System.Nullable<global::System.Guid>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Users_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.User> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.User>)args[1];
                d.Users_SingleOrDefault_PreprocessQuery((global::System.Nullable<global::System.Guid>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.User>
                __Users_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.MarketingDomainServiceDataService, global::LightSwitchApplication.User>(
                    "Users_All",
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_All_CanExecute,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_All_Executing,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_All_Executed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_All_Failed,
                    global::LightSwitchApplication.MarketingDomainServiceDataService.DetailsClass.__Users_All_PreprocessQuery);
            private static bool __Users_All_CanExecute(global::LightSwitchApplication.MarketingDomainServiceDataService d, bool r)
            {
                d.Users_All_CanExecute(ref r);
                return r;
            }
            private static void __Users_All_Executing(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Users_All_Executing();
            }
            private static void __Users_All_Executed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                d.Users_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.User>)args[0]);
            }
            private static void __Users_All_Failed(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args, global::System.Exception ex)
            {
                d.Users_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Users_All_PreprocessQuery(global::LightSwitchApplication.MarketingDomainServiceDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.User> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.User>)args[0];
                d.Users_All_PreprocessQuery(ref query);
                return query;
            }
    
        }
    
        #endregion
    }
    
    #endregion
}
